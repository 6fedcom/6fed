{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/indigo/source/css/style.less","path":"css/style.less","modified":1,"renderable":1},{"_id":"themes/indigo/source/js/main.min.js","path":"js/main.min.js","modified":1,"renderable":1},{"_id":"themes/indigo/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/indigo/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/indigo/source/js/search.min.js","path":"js/search.min.js","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/avatar.jpg","path":"img/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/cc.png","path":"img/cc.png","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/brand.jpg","path":"img/brand.jpg","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/green.ico","path":"img/green.ico","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/img-err.png","path":"img/img-err.png","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/img-loading.png","path":"img/img-loading.png","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/logo.jpg","path":"img/logo.jpg","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/red.ico","path":"img/red.ico","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/wechat.jpg","path":"img/wechat.jpg","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/alipay.jpg","path":"img/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","path":"css/fonts/roboto/Roboto-Bold.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","path":"css/fonts/roboto/Roboto-Bold.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","path":"css/fonts/roboto/Roboto-Bold.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","path":"css/fonts/roboto/Roboto-Light.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","path":"css/fonts/roboto/Roboto-Light.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","path":"css/fonts/roboto/Roboto-Light.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","path":"css/fonts/roboto/Roboto-Medium.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","path":"css/fonts/roboto/Roboto-Medium.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","path":"css/fonts/roboto/Roboto-Medium.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","path":"css/fonts/roboto/Roboto-Regular.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","path":"css/fonts/roboto/Roboto-Regular.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","path":"css/fonts/roboto/Roboto-Regular.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","path":"css/fonts/roboto/Roboto-Thin.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","path":"css/fonts/roboto/Roboto-Thin.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","path":"css/fonts/roboto/Roboto-Thin.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","path":"css/fonts/fontawesome/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","path":"css/fonts/fontawesome/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","path":"css/fonts/roboto/Roboto-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","path":"css/fonts/roboto/Roboto-Light.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","path":"css/fonts/roboto/Roboto-Medium.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","path":"css/fonts/roboto/Roboto-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","path":"css/fonts/roboto/Roboto-Thin.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","path":"css/fonts/fontawesome/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","path":"css/fonts/fontawesome/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","path":"css/fonts/fontawesome/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","path":"css/fonts/fontawesome/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/indigo/.editorconfig","hash":"67a03b88eadd7810f2e01866e73814074ecd3b87","modified":1534840291721},{"_id":"themes/indigo/LICENSE","hash":"9dd0f70bc72c9d575447655526aded395bb93754","modified":1534840291721},{"_id":"themes/indigo/README.md","hash":"cfc7d09fc2ce26003954d647e3bbf98f71574eb7","modified":1534840291722},{"_id":"themes/indigo/_config.yml","hash":"947a9726f1609617484d7008fcf010ce147be657","modified":1536561711862},{"_id":"themes/indigo/package.json","hash":"2d6e0ff1813c517c177fbf3e2b91f3876264412c","modified":1535370304048},{"_id":"source/categories/index.md","hash":"db33fdc58f44600e62821b0dc2ed2a54e7a28872","modified":1536561552005},{"_id":"source/_posts/ES6-基础-【好文分享】.md","hash":"0be590d8d3a3d9ff496d22b5803965e4a96de6ff","modified":1536651306586},{"_id":"source/_posts/NodeJS连接MySQL时遇到的问题 Error Connection lost The server closed the connection.md","hash":"f253e43c4bfc62202de6a56cc0c3e29206ccc7f9","modified":1536651559636},{"_id":"source/_posts/React-Js-微信分享封装.md","hash":"21e7dac1cd3811f36e852a30849a23ea676ba63e","modified":1536312243183},{"_id":"source/_posts/javascript截取文件名的后缀.md","hash":"4631097ce9c15f8b613e1738bb54e6f0727dcfb8","modified":1536307138647},{"_id":"source/_posts/reactjs中事件传参-关于event.md","hash":"a44358ed21d48bede7391c5ab57df3bacd813523","modified":1536564100294},{"_id":"source/_posts/hello-world.md","hash":"5217ac931643610a5f8f68ab18e1ddaef8a1eef5","modified":1536307064205},{"_id":"source/_posts/使用hexo搭建github-io博客.md","hash":"2db1ab6af28535b18a0e239ba189a2dd8346dbbc","modified":1536302599420},{"_id":"source/_posts/合并数组的相同的key值，并且计算相同key值的个数.md","hash":"5541d6a461c4e2ad9ab11923b2182752cdbcbe05","modified":1536546926390},{"_id":"source/_posts/怎么把数组倒置，又不影响原来数组，reverse不行.md","hash":"55f59f20500ea587bf41233828c17ba62cd30832","modified":1536561120399},{"_id":"source/_posts/移动端限制input框只能输入数字.md","hash":"9f172ad94d8d79044b3669c9ee1641b864eb5577","modified":1536307152151},{"_id":"source/_posts/错误码：events-js-183-throw-er-Unhandled-error-event—解决办法.md","hash":"5c3d1a1d62d6c35c36dbbdeb0bae10c2dcdc132f","modified":1536547591706},{"_id":"source/tags/index.md","hash":"57bae2df1a33f7c18b40a699cd91b4123ab89691","modified":1535372289849},{"_id":"source/share/index.md","hash":"53a13b38c548d312d22a34caff5afc43acb1d1d8","modified":1536644551767},{"_id":"themes/indigo/layout/categories.ejs","hash":"efae06b4d83aaf73ab93260381e891825bf404ac","modified":1534840291751},{"_id":"themes/indigo/layout/archive.ejs","hash":"6897178ba358379d6a4b7c0ba1bc2ab97ad5303a","modified":1534840291751},{"_id":"themes/indigo/layout/index.ejs","hash":"772c1985c7743e101598b4eddc253f9174c5605b","modified":1534840291752},{"_id":"themes/indigo/layout/category.ejs","hash":"e5ba5cc2e092c199285b8097ef12ffe70bf84c91","modified":1534840291752},{"_id":"themes/indigo/layout/layout.ejs","hash":"770af84fff104c398ce8b6c995130cddd3e9a1e9","modified":1534840291753},{"_id":"themes/indigo/layout/page.ejs","hash":"567c42b978da4c39b8b4982df19b940c26bc32a4","modified":1534840291754},{"_id":"themes/indigo/layout/tag.ejs","hash":"90a231dea3a364b329a740e5d6c49c8cf5664fe9","modified":1534840291755},{"_id":"themes/indigo/layout/post.ejs","hash":"efc3352828351f8574c51e8a93dc56c66660c3b1","modified":1534840291754},{"_id":"themes/indigo/layout/tags.ejs","hash":"1fc0461e9602b53899ec756e4361beb8cce74740","modified":1534840291755},{"_id":"themes/indigo/languages/en.yml","hash":"ba78def0453d08172248e220a1f9e145e99b4f23","modified":1534840291724},{"_id":"themes/indigo/languages/ja.yml","hash":"65a32717335211a45771a21fb7d7778808c6f0aa","modified":1534840291724},{"_id":"themes/indigo/languages/nl-NL","hash":"b540b76af76c1a180c517089ed2ad770cbded170","modified":1534840291725},{"_id":"themes/indigo/languages/zh-CN.yml","hash":"6806e4c305facf19cbe4e37ccc5d6b00cb56e199","modified":1534840291725},{"_id":"themes/indigo/languages/zh-TW.yml","hash":"9b8bdd9c8b68716f364503926dca6ba8571ee5ff","modified":1534840291726},{"_id":"themes/indigo/screenshots/hexo-theme-search.png","hash":"ffa0b5e1ed0f4eea7a1e57f6779c78052df03b5c","modified":1535970485274},{"_id":"themes/indigo/scripts/plugins.js","hash":"00ea278ea77733f546439aed507ce69a298da362","modified":1534840291757},{"_id":"themes/indigo/screenshots/hexo-theme-pad.png","hash":"08e41f140682fbd9a78999de79823ed59b1d2232","modified":1535970485266},{"_id":"themes/indigo/screenshots/hexo-theme-phone.png","hash":"1404b4fd664a8a552eed8ab46c0fb3b281c4f007","modified":1535970485272},{"_id":"themes/indigo/layout/_partial/after-footer.ejs","hash":"1351dbfca311f0d50a939f9e1a91c4f65bbcdf5f","modified":1534840291728},{"_id":"themes/indigo/layout/_partial/archive.ejs","hash":"c294c98617ce14082f9b3d5eec83328f480f5597","modified":1534840291728},{"_id":"themes/indigo/layout/_partial/cnzz.ejs","hash":"dbee64698919aeaeb0923c44b3f8c5402c7b8fed","modified":1535970485168},{"_id":"themes/indigo/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1535970485173},{"_id":"themes/indigo/layout/_partial/footer.ejs","hash":"48d0e3254abaebdfff460d6d7061e688a25b807f","modified":1536645549911},{"_id":"themes/indigo/layout/_partial/head.ejs","hash":"9dfc591ec6c918c5b60b6ccbc5d1e18fea9faf8e","modified":1534840291730},{"_id":"themes/indigo/layout/_partial/index-item.ejs","hash":"7208d4083ee3355aa969972a2ce249a67d56b3a6","modified":1534840291731},{"_id":"themes/indigo/layout/_partial/loading.ejs","hash":"8b3e037dd5f3d4564012689c5cd6f63caf73df0f","modified":1534840291731},{"_id":"themes/indigo/layout/_partial/header.ejs","hash":"648db446567a81371b8a29d719d13636aa157012","modified":1534840291730},{"_id":"themes/indigo/layout/_partial/mathjax.ejs","hash":"b82771c359969ddf3b384ab4aacdb1bacbb53377","modified":1535970485187},{"_id":"themes/indigo/layout/_partial/menu.ejs","hash":"ea6aded24a68de0914f24b3760f766b5e1c9835a","modified":1534840291732},{"_id":"themes/indigo/layout/_partial/paginator.ejs","hash":"13952250463f70d1c1bbbfdd7f4ee8160dd6d99b","modified":1534840291732},{"_id":"themes/indigo/layout/_partial/post.ejs","hash":"20597ac0d547aea37680ecf195eb129fe5ee19d8","modified":1534840291740},{"_id":"themes/indigo/layout/_partial/script.ejs","hash":"31052bc524a10abd6871aed2415448ce585faff2","modified":1534840291749},{"_id":"themes/indigo/layout/_partial/search.ejs","hash":"752109904304fdb8e988ee1254df2af9c0701466","modified":1534840291750},{"_id":"themes/indigo/layout/_partial/tags-bar.ejs","hash":"adbb3ab88e3ea6f67f091c96352709cc68550729","modified":1536561656942},{"_id":"themes/indigo/screenshots/hexo-theme-archive.png","hash":"36fd8e55e6672aa6afbd7f88b68a532c819f4473","modified":1535970485264},{"_id":"themes/indigo/screenshots/hexo-theme-pc.png","hash":"5898394b7664bf87ec1422fe7c21e7e76fb37185","modified":1535970485270},{"_id":"themes/indigo/source/css/style.less","hash":"2730e90bcfe8bb2b428f44660b0cb040ff27b569","modified":1536301523009},{"_id":"themes/indigo/source/js/main.min.js","hash":"e77a89fe5a9827ac590a288778176b233dd900ad","modified":1534840291825},{"_id":"themes/indigo/source/js/main.js","hash":"ff44bb7b2f1f08757093fd6ffa92c9ac2b674109","modified":1534840291825},{"_id":"themes/indigo/source/js/search.js","hash":"a4d6c9c566ec1ca71ddacfd14c58f7ddaf9db24d","modified":1534840291826},{"_id":"themes/indigo/source/js/search.min.js","hash":"a8a450bb8b1ca9ad577052addcbd3393f1af6c6a","modified":1534840291827},{"_id":"themes/indigo/source/img/avatar.jpg","hash":"0d83f686da7cdd70fe4f8232d579740e679219df","modified":1535371199075},{"_id":"themes/indigo/source/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1534840291821},{"_id":"themes/indigo/source/img/brand.jpg","hash":"0e237f1b433851c156e1f1cdaeb044054b3b9879","modified":1534840291820},{"_id":"themes/indigo/source/img/green.ico","hash":"b2cd09f7583ca37c16cf13f5f01870e064debaac","modified":1536299281839},{"_id":"themes/indigo/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1534840291821},{"_id":"themes/indigo/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1534840291822},{"_id":"themes/indigo/source/img/logo.jpg","hash":"a089e42acab93864d33e16801b0ac5dc1617c373","modified":1535970485392},{"_id":"themes/indigo/source/img/red.ico","hash":"2e6a3b6ee3cff83944737ffad96d0d2125990658","modified":1536299281915},{"_id":"themes/indigo/source/img/wechat.jpg","hash":"57734e3fd2da6b6c4d50f3a1601bd044d7d0af72","modified":1535371094002},{"_id":"themes/indigo/source/img/alipay.jpg","hash":"ab1aeef2b4aa269319b0df2d64f0d3948d78ffec","modified":1535371087657},{"_id":"themes/indigo/layout/_partial/plugins/baidu.ejs","hash":"da1355eea131952031e54c45560555e6d3aa5a33","modified":1534840291733},{"_id":"themes/indigo/layout/_partial/plugins/disqus.ejs","hash":"86fe837ab16cb60754b0a73bb9efa38b04f3023f","modified":1534840291734},{"_id":"themes/indigo/layout/_partial/plugins/dynamic-title.ejs","hash":"3b877868c4a6fc217ea6f3314544830280a77472","modified":1534840291735},{"_id":"themes/indigo/layout/_partial/plugins/gitment.ejs","hash":"5f6ceb7f4b9b579e8e3f87894447f556a53f9385","modified":1534840291735},{"_id":"themes/indigo/layout/_partial/plugins/google-analytics.ejs","hash":"b5b87761751a897949e085a8f1ace78b0b8babd5","modified":1534840291736},{"_id":"themes/indigo/layout/_partial/plugins/hyper-comments.ejs","hash":"d0e6f1d713e7a1c0cc5fe25f3e574a4b791f938a","modified":1534840291736},{"_id":"themes/indigo/layout/_partial/plugins/mathjax.ejs","hash":"3a5c9f7d22d30cd8ffa4e83a8d3976db22815994","modified":1534840291737},{"_id":"themes/indigo/layout/_partial/plugins/site-visit.ejs","hash":"a2c247c2e32016563dd6a22c21474072d93f4dbd","modified":1534840291738},{"_id":"themes/indigo/layout/_partial/plugins/page-visit.ejs","hash":"bb9deb32c54ea6820f622b923e62592915e9f21f","modified":1534840291737},{"_id":"themes/indigo/layout/_partial/plugins/tajs.ejs","hash":"ef9c77d8c6e004b014c83c5f9333e7174f8bafa3","modified":1534840291738},{"_id":"themes/indigo/layout/_partial/plugins/uyan.ejs","hash":"ddf290e90dc1c779f42a48e1bd852ca932148dfb","modified":1534840291739},{"_id":"themes/indigo/layout/_partial/plugins/valine.ejs","hash":"0a6245da90d54177441d32a6f1766b4f434660db","modified":1534840291740},{"_id":"themes/indigo/layout/_partial/post/category.ejs","hash":"c08e44cbd7315dec7afb6054b04d3c7b82c3bde8","modified":1534840291741},{"_id":"themes/indigo/layout/_partial/post/comment.ejs","hash":"b1a6984e19d3493fb327383ee76e09fdee090426","modified":1534840291741},{"_id":"themes/indigo/layout/_partial/post/copyright.ejs","hash":"dd1dcc7776021ab3d68065f8532efead4c2b8051","modified":1534840291742},{"_id":"themes/indigo/layout/_partial/post/date.ejs","hash":"c5adcec8db1506c378d39855a697e1bb1165646c","modified":1534840291742},{"_id":"themes/indigo/layout/_partial/post/duoshuo.ejs","hash":"f6b4c4eaafb5ac386273354b5f64a26139b7a3b0","modified":1535970485206},{"_id":"themes/indigo/layout/_partial/post/head-meta.ejs","hash":"f137c126672769e9571be2bb0a70ea8dda644b0e","modified":1534840291743},{"_id":"themes/indigo/layout/_partial/post/reward-btn.ejs","hash":"b46160005224821a439dec9f1ff183e2f66d9f4b","modified":1534840291744},{"_id":"themes/indigo/layout/_partial/post/reward.ejs","hash":"097c0276a61665e5ee96e5d5d85a7d6ae5ab2f49","modified":1534840291745},{"_id":"themes/indigo/layout/_partial/post/nav.ejs","hash":"03719097851575a2c1bb95774058b224f6402a1f","modified":1534840291744},{"_id":"themes/indigo/layout/_partial/post/share-fab.ejs","hash":"2ec7de870988cfbc8ea9872cddf7e4076ac64a57","modified":1534840291745},{"_id":"themes/indigo/layout/_partial/post/share.ejs","hash":"7d79a67b3e5e6989f22fb0e0904fa540bfca5fcc","modified":1534840291746},{"_id":"themes/indigo/layout/_partial/post/title.ejs","hash":"eaad7af7888bddd7095243a43ff38f55ad8c494a","modified":1534840291747},{"_id":"themes/indigo/layout/_partial/post/tag.ejs","hash":"412894001b1ac6e63012b26b1109a0856651c076","modified":1534840291747},{"_id":"themes/indigo/layout/_partial/post/toc.ejs","hash":"d534b888d24df7703c632539d4bdd638fa764e98","modified":1534840291748},{"_id":"themes/indigo/layout/_partial/post/updated.ejs","hash":"00fedf7971c0bda0623d968bc0614e512d19a985","modified":1534840291748},{"_id":"themes/indigo/source/css/_partial/archives.less","hash":"382fc22cd5cc073e881768a65600d97eba9f1d21","modified":1534840291759},{"_id":"themes/indigo/source/css/_partial/article.less","hash":"f047c8ca92f9e6a8e1299ace0cce91514631a21c","modified":1534840291760},{"_id":"themes/indigo/source/css/_partial/gotop.less","hash":"bad63006b3bd4849bf53ad38482af0d9971061d3","modified":1534840291762},{"_id":"themes/indigo/source/css/_partial/highlight.less","hash":"99e48793dc0b4ffb66ecaf2d1315145872f9bb98","modified":1534840291763},{"_id":"themes/indigo/source/css/_partial/layout.less","hash":"5f783f34bf093e654e8922ed4a2af8b7b2cd41c4","modified":1534840291764},{"_id":"themes/indigo/source/css/_partial/header.less","hash":"880b4a28e97d556ed15b07642d25115f9b6ba4f6","modified":1534840291763},{"_id":"themes/indigo/source/css/_partial/lightbox.less","hash":"38419aaf3c1832e84ade331f051f110fdc8b960f","modified":1534840291764},{"_id":"themes/indigo/source/css/_partial/loading.less","hash":"85157ddf3877b5c58e8f1d737dda3dfb1bfd540b","modified":1534840291765},{"_id":"themes/indigo/source/css/_partial/page.less","hash":"33b0a5edcedc26a4c592c812c5785bb20d3c93db","modified":1534840291766},{"_id":"themes/indigo/source/css/_partial/postlist.less","hash":"516cded3c7f1db4cacfa898bcaf0adfae7f3a2e1","modified":1534840291766},{"_id":"themes/indigo/source/css/_partial/reward.less","hash":"f5e89ea5414e3096a28c8c96e86c3f669040a892","modified":1534840291767},{"_id":"themes/indigo/source/css/_partial/roboto.less","hash":"3e457942995da8840e7662fa6cb551a7e12ea294","modified":1534840291767},{"_id":"themes/indigo/source/css/_partial/search.less","hash":"dbc23e77e586ee682a21475f5eb568628ea6720f","modified":1534840291768},{"_id":"themes/indigo/source/css/_partial/share.less","hash":"a683c96a59470efd35722b763c55149a46e35156","modified":1534840291768},{"_id":"themes/indigo/source/css/_partial/tags.less","hash":"01eb7f84193180928a6ed4796ee8802f6c1628e7","modified":1534840291769},{"_id":"themes/indigo/source/css/_partial/variable.less","hash":"3232e75f4653402c9fbd7bda5b97c05ecc31db2b","modified":1534840291770},{"_id":"themes/indigo/source/css/_partial/waves.less","hash":"a02eaa601887f947257f6016679b62dc96a61c0c","modified":1534840291770},{"_id":"themes/indigo/source/css/_plugin/valine.less","hash":"b8f8d8037fb3c8525da12e580bd9e2ff9f298132","modified":1534840291771},{"_id":"themes/indigo/source/css/_partial/fontawesome.less","hash":"a3ecbd6ccf5b56ac39df710c34a149b82989a498","modified":1534840291761},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1534840291792},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1534840291795},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1534840291796},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1534840291797},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1534840291800},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1534840291801},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1534840291802},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1534840291805},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1534840291806},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1534840291807},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1534840291810},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1534840291811},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1534840291812},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1534840291816},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1534840291815},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1534840291789},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1534840291790},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1534840291794},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1534840291799},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1534840291804},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1534840291809},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1534840291814},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1534840291775},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1534840291777},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1534840291787},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1534840291784}],"Category":[{"name":"优质文章分享","_id":"cjlxep9fk0004aga143qxil76"},{"name":"前端","_id":"cjlxep9g9000aaga1ebhs4pnd"},{"name":"Hexo教程","_id":"cjlxep9hn000saga1c5u36apt"}],"Data":[],"Page":[{"title":"categories","date":"2018-08-27T11:47:23.000Z","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-08-27 19:47:23\nlayout: categories\n---\n","updated":"2018-09-10T06:39:12.005Z","path":"categories/index.html","comments":1,"_id":"cjlxep9f50001aga1tp1t0kvp","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-08-27T11:26:57.000Z","layout":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-08-27 19:26:57\nlayout: tags\ncomments: false\n---\n","updated":"2018-08-27T12:18:09.849Z","path":"tags/index.html","_id":"cjlxep9ff0003aga103zws7a2","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"前端资讯分享","date":"2018-09-04T11:52:49.000Z","layout":"share","_content":"\n \n\n \n","source":"share/index.md","raw":"---\ntitle: 前端资讯分享\ndate: 2018-09-04 19:52:49\nlayout: share\n---\n\n \n\n \n","updated":"2018-09-11T05:42:31.767Z","path":"share/index.html","comments":1,"_id":"cjlxep9fw0007aga1aq4tep3f","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"前端开发周刊-(2018年09月第2周)","date":"2018-09-10T03:48:21.000Z","issues":null,"_content":"\n#### [es6常用基础合集](https://www.jianshu.com/p/cfb0893c34f1)\n\n##### url:https://www.jianshu.com/p/cfb0893c34f1\n\n##### 知识点:\nlet,const \n箭头函数  \n模板字符串  \n解析结构  \n函数默认参数 \n展开运算符 \n对象字面量与class \nPromise\n#### [ES6新特性概览](http://www.cnblogs.com/Wayou/p/es6_new_features.html)\n\n##### url： http://www.cnblogs.com/Wayou/p/es6_new_features.html\n\n##### 知识点:\n箭头操作符\n类的支持\n增强的对象字面量\n字符串模板\n解构\n参数默认值，不定参数，拓展参数\nlet与const 关键字\nfor of 值遍历\niterator, generator\n模块\nMap，Set 和 WeakMap，WeakSet\nProxies\nSymbols\nMath，Number，String，Object 的新API\n#### [透彻掌握Promise的使用，读这篇就够了](https://www.jianshu.com/p/fe5f173276bd)\n##### url：https://www.jianshu.com/p/fe5f173276bd\n##### 知识点：\n实现方法\n1.new Promise(fn),创建一个新的Promise对象并传入第一个执行方法。 \n2.resolve。成功的执行方法 \n3.reject。失败的执行方法 \n4.catch。失败的捕获。 \n5.then。链式调用下一步。\n原理：\n内部使用一个数组报错需要执行的所有方法，使用then来添加新的方法。旧的方法执行完毕之后检测数组，如果有新的就执行\n```js\nclass Promise {\n\tresult: any;\n\tcallbacks = [];\n\tfailbacks = [];\n\tconstructor(fn) {\n\t\tfn(this.resolve.bind(this), this.reject.bind(this));\n\t}\n\tresolve(res) {\n\t\tif (this.callbacks.length > 0) this.callbacks.shift()(res, this.resolve.bind(this), this.reject.bind(this));\n\t}\n\treject(res) {\n\t\tthis.callbacks = [];\n\t\tif (this.failbacks.length > 0) this.failbacks.shift()(res, this.resolve.bind(this), this.reject.bind(this));\n\t} catch (fn) {\n\t\tthis.failbacks.push(fn);\n\t}\n\tthen(fn) {\n\t\tthis.callbacks.push(fn);\n\t\treturn this;\n\t}\n}\n```\n调用示例：\n```js\nvar a = new Promise(function(resolve, reject) {\n\tsetTimeout(function() {\n\t\tresolve(\"成功\");\n\t}, 1000);\n}).then(function(result, resolve, reject) {\n\tconsole.log(result)\n\treject(\"失败\")\n}).\ncatch (function(err) {\n\tconsole.log(err);\n});\n```\n\nes6写法：\n```js\n//创建promise\nvar promise = new Promise(function(resolve, reject) {\n    // 进行一些异步或耗时操作\n    if ( /*如果成功 */ ) {\n        resolve(\"Stuff worked!\");\n    } else {\n        reject(Error(\"It broke\"));\n    }\n});\n//绑定处理程序\npromise.then(function(result) {\n\t//promise成功的话会执行这里\n    console.log(result); // \"Stuff worked!\"\n}, function(err) {\n\t//promise失败会执行这里\n    console.log(err); // Error: \"It broke\"\n});\n```\n#### 4.[前端算法相关](https://github.com/qianbin01/frontend_train#sort)\n\n##### url:https://github.com/qianbin01/frontend_train#sort\n\n##### 知识点\n\n冒泡排序\n> 比较两个相邻的项，如果第一个大于第二个则交换他们的位置,元素项向上移动至正确的顺序，就好像气泡往上冒一样\n\n快速排序:\n>  1) 首先，在数组中选择一个中间项作为主元\n2) 创建两个指针，左边的指向数组第一个项，右边的指向最后一个项，移动左指针，直到找到一个比主元大的项，接着，移动右边的指针，直到找到一个比主元小的项，然后交换它们。重复这个过程，直到\n 左侧的指针超过了右侧的指针。这个使比主元小的都在左侧，比主元大的都在右侧。这一步叫划分操作\n3) 接着，算法对划分后的小数组（较主元小的值组成的的小数组， 以及较主元大的值组成的小数组）重复之前的两个步骤，直到排序完成\n\n选择排序:\n> 大概思路是找到最小的放在第一位，找到第二小的放在第二位，以此类推 算法复杂度O(n^2)\n\n归并排序:\n> 归并排序：Mozilla Firefox 使用归并排序作为Array.prototype.sort的实现，而chrome使用快速排序的一个变体实现的,前面三种算法性能不好，但归并排序性能不错 算法复杂度O(nlog^n)\n归并排序是一种分治算法。本质上就是把一个原始数组切分成较小的数组，直到每个小数组只有一个位置，接着把小数组归并成较大的数组，在归并过程中也会完成排序，直到最后只有一个排序完毕的大数组\n\n堆排序：\n> 堆排序把数组当中二叉树来排序而得名。\n1）索引0是树的根节点；2）除根节点为，任意节点N的父节点是N/2；3）节点L的左子节点是2*L；4）节点R的右子节点为2*R + 1\n本质上就是先构建二叉树，然后把根节点与最后一个进行交换，然后对剩下对元素进行二叉树构建，进行交换，直到剩下最后一个\n\n#### 5.[javaScript常用知识点](https://github.com/qianbin01/frontend_train#javascript)\n\n##### url: https://github.com/qianbin01/frontend_train#javascript\n\n##### 知识点\nmap,reduce,filter的用法\njs数据类型(7种)\n> 1.number;\n2.string;\n3.boolean;\n4.undefined;\n5.null;\n6.symbol（ES6新增，文章后面有对着新类型的解释）Symbol 生成一个全局唯一的值。\n7.Object.（包括Object，Array，Function）\n闭包\n```js\nfunction foo(x) {\n    var tmp = 3;\n    return function (y) {\n        alert(x + y + (++tmp));\n    }\n}\nvar bar = foo(2); // bar 现在是一个闭包\nbar(10);\n```\n结果是16\nes6通常用let const块级作用域代替，\n闭包缺点，ie中会引起内存泄漏，严格来说是ie的缺点不是闭包的问题\n\n什么是立即执行函数？使用立即执行函数的目的是什么？\n```js\n//常见两种方式\n1.(function(){...})()\n  (function(x){\n\t  console.log(x);\n  })(12345)\n2.(function(){...}())\n  (function(x){\n\t  console.log(x);\n  }(12345))\n//作用 不破坏污染全局的命名空间，若需要使用，将其用变量传入如\n（function(window){...}(window)）\n```\nasync/await 语法\n深浅拷贝\n数组去重\n思路1：定义一个新数组，并存放原数组的第一个元素，然后将元素组一一和新数组的元素对比，若不同则存放在新数组中\n思路2：先将原数组排序，在与相邻的进行比较，如果不同则存入新数组。\n思路3：利用对象属性存在的特性，如果没有该属性则存入新数组。\n思路4（最常用）：使用es6 set\n```js\nlet arr= [1, 2, 3, 3, 5, 7, 2, 6, 8];\nconsole.log([...new Set(arr)]);\n```\nJS原型","source":"_posts/ES6-基础-【好文分享】.md","raw":"---\ntitle: 前端开发周刊-(2018年09月第2周)\ndate: 2018-09-10 11:48:21\ncategories: \"优质文章分享\" #文章分類目錄 可以省略\ntags: [优质文章分享]\nissues:\n---\n\n#### [es6常用基础合集](https://www.jianshu.com/p/cfb0893c34f1)\n\n##### url:https://www.jianshu.com/p/cfb0893c34f1\n\n##### 知识点:\nlet,const \n箭头函数  \n模板字符串  \n解析结构  \n函数默认参数 \n展开运算符 \n对象字面量与class \nPromise\n#### [ES6新特性概览](http://www.cnblogs.com/Wayou/p/es6_new_features.html)\n\n##### url： http://www.cnblogs.com/Wayou/p/es6_new_features.html\n\n##### 知识点:\n箭头操作符\n类的支持\n增强的对象字面量\n字符串模板\n解构\n参数默认值，不定参数，拓展参数\nlet与const 关键字\nfor of 值遍历\niterator, generator\n模块\nMap，Set 和 WeakMap，WeakSet\nProxies\nSymbols\nMath，Number，String，Object 的新API\n#### [透彻掌握Promise的使用，读这篇就够了](https://www.jianshu.com/p/fe5f173276bd)\n##### url：https://www.jianshu.com/p/fe5f173276bd\n##### 知识点：\n实现方法\n1.new Promise(fn),创建一个新的Promise对象并传入第一个执行方法。 \n2.resolve。成功的执行方法 \n3.reject。失败的执行方法 \n4.catch。失败的捕获。 \n5.then。链式调用下一步。\n原理：\n内部使用一个数组报错需要执行的所有方法，使用then来添加新的方法。旧的方法执行完毕之后检测数组，如果有新的就执行\n```js\nclass Promise {\n\tresult: any;\n\tcallbacks = [];\n\tfailbacks = [];\n\tconstructor(fn) {\n\t\tfn(this.resolve.bind(this), this.reject.bind(this));\n\t}\n\tresolve(res) {\n\t\tif (this.callbacks.length > 0) this.callbacks.shift()(res, this.resolve.bind(this), this.reject.bind(this));\n\t}\n\treject(res) {\n\t\tthis.callbacks = [];\n\t\tif (this.failbacks.length > 0) this.failbacks.shift()(res, this.resolve.bind(this), this.reject.bind(this));\n\t} catch (fn) {\n\t\tthis.failbacks.push(fn);\n\t}\n\tthen(fn) {\n\t\tthis.callbacks.push(fn);\n\t\treturn this;\n\t}\n}\n```\n调用示例：\n```js\nvar a = new Promise(function(resolve, reject) {\n\tsetTimeout(function() {\n\t\tresolve(\"成功\");\n\t}, 1000);\n}).then(function(result, resolve, reject) {\n\tconsole.log(result)\n\treject(\"失败\")\n}).\ncatch (function(err) {\n\tconsole.log(err);\n});\n```\n\nes6写法：\n```js\n//创建promise\nvar promise = new Promise(function(resolve, reject) {\n    // 进行一些异步或耗时操作\n    if ( /*如果成功 */ ) {\n        resolve(\"Stuff worked!\");\n    } else {\n        reject(Error(\"It broke\"));\n    }\n});\n//绑定处理程序\npromise.then(function(result) {\n\t//promise成功的话会执行这里\n    console.log(result); // \"Stuff worked!\"\n}, function(err) {\n\t//promise失败会执行这里\n    console.log(err); // Error: \"It broke\"\n});\n```\n#### 4.[前端算法相关](https://github.com/qianbin01/frontend_train#sort)\n\n##### url:https://github.com/qianbin01/frontend_train#sort\n\n##### 知识点\n\n冒泡排序\n> 比较两个相邻的项，如果第一个大于第二个则交换他们的位置,元素项向上移动至正确的顺序，就好像气泡往上冒一样\n\n快速排序:\n>  1) 首先，在数组中选择一个中间项作为主元\n2) 创建两个指针，左边的指向数组第一个项，右边的指向最后一个项，移动左指针，直到找到一个比主元大的项，接着，移动右边的指针，直到找到一个比主元小的项，然后交换它们。重复这个过程，直到\n 左侧的指针超过了右侧的指针。这个使比主元小的都在左侧，比主元大的都在右侧。这一步叫划分操作\n3) 接着，算法对划分后的小数组（较主元小的值组成的的小数组， 以及较主元大的值组成的小数组）重复之前的两个步骤，直到排序完成\n\n选择排序:\n> 大概思路是找到最小的放在第一位，找到第二小的放在第二位，以此类推 算法复杂度O(n^2)\n\n归并排序:\n> 归并排序：Mozilla Firefox 使用归并排序作为Array.prototype.sort的实现，而chrome使用快速排序的一个变体实现的,前面三种算法性能不好，但归并排序性能不错 算法复杂度O(nlog^n)\n归并排序是一种分治算法。本质上就是把一个原始数组切分成较小的数组，直到每个小数组只有一个位置，接着把小数组归并成较大的数组，在归并过程中也会完成排序，直到最后只有一个排序完毕的大数组\n\n堆排序：\n> 堆排序把数组当中二叉树来排序而得名。\n1）索引0是树的根节点；2）除根节点为，任意节点N的父节点是N/2；3）节点L的左子节点是2*L；4）节点R的右子节点为2*R + 1\n本质上就是先构建二叉树，然后把根节点与最后一个进行交换，然后对剩下对元素进行二叉树构建，进行交换，直到剩下最后一个\n\n#### 5.[javaScript常用知识点](https://github.com/qianbin01/frontend_train#javascript)\n\n##### url: https://github.com/qianbin01/frontend_train#javascript\n\n##### 知识点\nmap,reduce,filter的用法\njs数据类型(7种)\n> 1.number;\n2.string;\n3.boolean;\n4.undefined;\n5.null;\n6.symbol（ES6新增，文章后面有对着新类型的解释）Symbol 生成一个全局唯一的值。\n7.Object.（包括Object，Array，Function）\n闭包\n```js\nfunction foo(x) {\n    var tmp = 3;\n    return function (y) {\n        alert(x + y + (++tmp));\n    }\n}\nvar bar = foo(2); // bar 现在是一个闭包\nbar(10);\n```\n结果是16\nes6通常用let const块级作用域代替，\n闭包缺点，ie中会引起内存泄漏，严格来说是ie的缺点不是闭包的问题\n\n什么是立即执行函数？使用立即执行函数的目的是什么？\n```js\n//常见两种方式\n1.(function(){...})()\n  (function(x){\n\t  console.log(x);\n  })(12345)\n2.(function(){...}())\n  (function(x){\n\t  console.log(x);\n  }(12345))\n//作用 不破坏污染全局的命名空间，若需要使用，将其用变量传入如\n（function(window){...}(window)）\n```\nasync/await 语法\n深浅拷贝\n数组去重\n思路1：定义一个新数组，并存放原数组的第一个元素，然后将元素组一一和新数组的元素对比，若不同则存放在新数组中\n思路2：先将原数组排序，在与相邻的进行比较，如果不同则存入新数组。\n思路3：利用对象属性存在的特性，如果没有该属性则存入新数组。\n思路4（最常用）：使用es6 set\n```js\nlet arr= [1, 2, 3, 3, 5, 7, 2, 6, 8];\nconsole.log([...new Set(arr)]);\n```\nJS原型","slug":"ES6-基础-【好文分享】","published":1,"updated":"2018-09-11T07:35:06.586Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlxep9ev0000aga16ioc2k0v","content":"<h4 id=\"es6常用基础合集\"><a href=\"#es6常用基础合集\" class=\"headerlink\" title=\"es6常用基础合集\"></a><a href=\"https://www.jianshu.com/p/cfb0893c34f1\" target=\"_blank\" rel=\"noopener\">es6常用基础合集</a></h4><h5 id=\"url-https-www-jianshu-com-p-cfb0893c34f1\"><a href=\"#url-https-www-jianshu-com-p-cfb0893c34f1\" class=\"headerlink\" title=\"url:https://www.jianshu.com/p/cfb0893c34f1\"></a>url:<a href=\"https://www.jianshu.com/p/cfb0893c34f1\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/cfb0893c34f1</a></h5><h5 id=\"知识点\"><a href=\"#知识点\" class=\"headerlink\" title=\"知识点:\"></a>知识点:</h5><p>let,const<br>箭头函数<br>模板字符串<br>解析结构<br>函数默认参数<br>展开运算符<br>对象字面量与class<br>Promise</p>\n<h4 id=\"ES6新特性概览\"><a href=\"#ES6新特性概览\" class=\"headerlink\" title=\"ES6新特性概览\"></a><a href=\"http://www.cnblogs.com/Wayou/p/es6_new_features.html\" target=\"_blank\" rel=\"noopener\">ES6新特性概览</a></h4><h5 id=\"url：-http-www-cnblogs-com-Wayou-p-es6-new-features-html\"><a href=\"#url：-http-www-cnblogs-com-Wayou-p-es6-new-features-html\" class=\"headerlink\" title=\"url： http://www.cnblogs.com/Wayou/p/es6_new_features.html\"></a>url： <a href=\"http://www.cnblogs.com/Wayou/p/es6_new_features.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/Wayou/p/es6_new_features.html</a></h5><h5 id=\"知识点-1\"><a href=\"#知识点-1\" class=\"headerlink\" title=\"知识点:\"></a>知识点:</h5><p>箭头操作符<br>类的支持<br>增强的对象字面量<br>字符串模板<br>解构<br>参数默认值，不定参数，拓展参数<br>let与const 关键字<br>for of 值遍历<br>iterator, generator<br>模块<br>Map，Set 和 WeakMap，WeakSet<br>Proxies<br>Symbols<br>Math，Number，String，Object 的新API</p>\n<h4 id=\"透彻掌握Promise的使用，读这篇就够了\"><a href=\"#透彻掌握Promise的使用，读这篇就够了\" class=\"headerlink\" title=\"透彻掌握Promise的使用，读这篇就够了\"></a><a href=\"https://www.jianshu.com/p/fe5f173276bd\" target=\"_blank\" rel=\"noopener\">透彻掌握Promise的使用，读这篇就够了</a></h4><h5 id=\"url：https-www-jianshu-com-p-fe5f173276bd\"><a href=\"#url：https-www-jianshu-com-p-fe5f173276bd\" class=\"headerlink\" title=\"url：https://www.jianshu.com/p/fe5f173276bd\"></a>url：<a href=\"https://www.jianshu.com/p/fe5f173276bd\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/fe5f173276bd</a></h5><h5 id=\"知识点：\"><a href=\"#知识点：\" class=\"headerlink\" title=\"知识点：\"></a>知识点：</h5><p>实现方法<br>1.new Promise(fn),创建一个新的Promise对象并传入第一个执行方法。<br>2.resolve。成功的执行方法<br>3.reject。失败的执行方法<br>4.catch。失败的捕获。<br>5.then。链式调用下一步。<br>原理：<br>内部使用一个数组报错需要执行的所有方法，使用then来添加新的方法。旧的方法执行完毕之后检测数组，如果有新的就执行<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Promise</span> </span>&#123;</span><br><span class=\"line\">\tresult: any;</span><br><span class=\"line\">\tcallbacks = [];</span><br><span class=\"line\">\tfailbacks = [];</span><br><span class=\"line\">\t<span class=\"keyword\">constructor</span>(fn) &#123;</span><br><span class=\"line\">\t\tfn(<span class=\"keyword\">this</span>.resolve.bind(<span class=\"keyword\">this</span>), <span class=\"keyword\">this</span>.reject.bind(<span class=\"keyword\">this</span>));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tresolve(res) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.callbacks.length &gt; <span class=\"number\">0</span>) <span class=\"keyword\">this</span>.callbacks.shift()(res, <span class=\"keyword\">this</span>.resolve.bind(<span class=\"keyword\">this</span>), <span class=\"keyword\">this</span>.reject.bind(<span class=\"keyword\">this</span>));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treject(res) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.callbacks = [];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.failbacks.length &gt; <span class=\"number\">0</span>) <span class=\"keyword\">this</span>.failbacks.shift()(res, <span class=\"keyword\">this</span>.resolve.bind(<span class=\"keyword\">this</span>), <span class=\"keyword\">this</span>.reject.bind(<span class=\"keyword\">this</span>));</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (fn) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.failbacks.push(fn);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tthen(fn) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.callbacks.push(fn);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>调用示例：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>) </span>&#123;</span><br><span class=\"line\">\tsetTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\tresolve(<span class=\"string\">\"成功\"</span>);</span><br><span class=\"line\">\t&#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result, resolve, reject</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(result)</span><br><span class=\"line\">\treject(<span class=\"string\">\"失败\"</span>)</span><br><span class=\"line\">&#125;).</span><br><span class=\"line\"><span class=\"keyword\">catch</span> (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>es6写法：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建promise</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> promise = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 进行一些异步或耗时操作</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"comment\">/*如果成功 */</span> ) &#123;</span><br><span class=\"line\">        resolve(<span class=\"string\">\"Stuff worked!\"</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"built_in\">Error</span>(<span class=\"string\">\"It broke\"</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//绑定处理程序</span></span><br><span class=\"line\">promise.then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//promise成功的话会执行这里</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(result); <span class=\"comment\">// \"Stuff worked!\"</span></span><br><span class=\"line\">&#125;, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//promise失败会执行这里</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(err); <span class=\"comment\">// Error: \"It broke\"</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"4-前端算法相关\"><a href=\"#4-前端算法相关\" class=\"headerlink\" title=\"4.前端算法相关\"></a>4.<a href=\"https://github.com/qianbin01/frontend_train#sort\" target=\"_blank\" rel=\"noopener\">前端算法相关</a></h4><h5 id=\"url-https-github-com-qianbin01-frontend-train-sort\"><a href=\"#url-https-github-com-qianbin01-frontend-train-sort\" class=\"headerlink\" title=\"url:https://github.com/qianbin01/frontend_train#sort\"></a>url:<a href=\"https://github.com/qianbin01/frontend_train#sort\" target=\"_blank\" rel=\"noopener\">https://github.com/qianbin01/frontend_train#sort</a></h5><h5 id=\"知识点-2\"><a href=\"#知识点-2\" class=\"headerlink\" title=\"知识点\"></a>知识点</h5><p>冒泡排序</p>\n<blockquote>\n<p>比较两个相邻的项，如果第一个大于第二个则交换他们的位置,元素项向上移动至正确的顺序，就好像气泡往上冒一样</p>\n</blockquote>\n<p>快速排序:</p>\n<blockquote>\n<p> 1) 首先，在数组中选择一个中间项作为主元<br>2) 创建两个指针，左边的指向数组第一个项，右边的指向最后一个项，移动左指针，直到找到一个比主元大的项，接着，移动右边的指针，直到找到一个比主元小的项，然后交换它们。重复这个过程，直到<br> 左侧的指针超过了右侧的指针。这个使比主元小的都在左侧，比主元大的都在右侧。这一步叫划分操作<br>3) 接着，算法对划分后的小数组（较主元小的值组成的的小数组， 以及较主元大的值组成的小数组）重复之前的两个步骤，直到排序完成</p>\n</blockquote>\n<p>选择排序:</p>\n<blockquote>\n<p>大概思路是找到最小的放在第一位，找到第二小的放在第二位，以此类推 算法复杂度O(n^2)</p>\n</blockquote>\n<p>归并排序:</p>\n<blockquote>\n<p>归并排序：Mozilla Firefox 使用归并排序作为Array.prototype.sort的实现，而chrome使用快速排序的一个变体实现的,前面三种算法性能不好，但归并排序性能不错 算法复杂度O(nlog^n)<br>归并排序是一种分治算法。本质上就是把一个原始数组切分成较小的数组，直到每个小数组只有一个位置，接着把小数组归并成较大的数组，在归并过程中也会完成排序，直到最后只有一个排序完毕的大数组</p>\n</blockquote>\n<p>堆排序：</p>\n<blockquote>\n<p>堆排序把数组当中二叉树来排序而得名。<br>1）索引0是树的根节点；2）除根节点为，任意节点N的父节点是N/2；3）节点L的左子节点是2<em>L；4）节点R的右子节点为2</em>R + 1<br>本质上就是先构建二叉树，然后把根节点与最后一个进行交换，然后对剩下对元素进行二叉树构建，进行交换，直到剩下最后一个</p>\n</blockquote>\n<h4 id=\"5-javaScript常用知识点\"><a href=\"#5-javaScript常用知识点\" class=\"headerlink\" title=\"5.javaScript常用知识点\"></a>5.<a href=\"https://github.com/qianbin01/frontend_train#javascript\" target=\"_blank\" rel=\"noopener\">javaScript常用知识点</a></h4><h5 id=\"url-https-github-com-qianbin01-frontend-train-javascript\"><a href=\"#url-https-github-com-qianbin01-frontend-train-javascript\" class=\"headerlink\" title=\"url: https://github.com/qianbin01/frontend_train#javascript\"></a>url: <a href=\"https://github.com/qianbin01/frontend_train#javascript\" target=\"_blank\" rel=\"noopener\">https://github.com/qianbin01/frontend_train#javascript</a></h5><h5 id=\"知识点-3\"><a href=\"#知识点-3\" class=\"headerlink\" title=\"知识点\"></a>知识点</h5><p>map,reduce,filter的用法<br>js数据类型(7种)</p>\n<blockquote>\n<p>1.number;<br>2.string;<br>3.boolean;<br>4.undefined;<br>5.null;<br>6.symbol（ES6新增，文章后面有对着新类型的解释）Symbol 生成一个全局唯一的值。<br>7.Object.（包括Object，Array，Function）<br>闭包<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmp = <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">y</span>) </span>&#123;</span><br><span class=\"line\">        alert(x + y + (++tmp));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = foo(<span class=\"number\">2</span>); <span class=\"comment\">// bar 现在是一个闭包</span></span><br><span class=\"line\">bar(<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>结果是16<br>es6通常用let const块级作用域代替，<br>闭包缺点，ie中会引起内存泄漏，严格来说是ie的缺点不是闭包的问题</p>\n<p>什么是立即执行函数？使用立即执行函数的目的是什么？<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//常见两种方式</span></span><br><span class=\"line\"><span class=\"number\">1.</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;...&#125;)()</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">x</span>)</span>&#123;</span><br><span class=\"line\">\t  <span class=\"built_in\">console</span>.log(x);</span><br><span class=\"line\">  &#125;)(<span class=\"number\">12345</span>)</span><br><span class=\"line\"><span class=\"number\">2.</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;...&#125;())</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">x</span>)</span>&#123;</span><br><span class=\"line\">\t  <span class=\"built_in\">console</span>.log(x);</span><br><span class=\"line\">  &#125;(<span class=\"number\">12345</span>))</span><br><span class=\"line\"><span class=\"comment\">//作用 不破坏污染全局的命名空间，若需要使用，将其用变量传入如</span></span><br><span class=\"line\">（<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">window</span>)</span>&#123;...&#125;(<span class=\"built_in\">window</span>)）</span><br></pre></td></tr></table></figure></p>\n<p>async/await 语法<br>深浅拷贝<br>数组去重<br>思路1：定义一个新数组，并存放原数组的第一个元素，然后将元素组一一和新数组的元素对比，若不同则存放在新数组中<br>思路2：先将原数组排序，在与相邻的进行比较，如果不同则存入新数组。<br>思路3：利用对象属性存在的特性，如果没有该属性则存入新数组。<br>思路4（最常用）：使用es6 set<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr= [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log([...new <span class=\"built_in\">Set</span>(arr)]);</span><br></pre></td></tr></table></figure></p>\n<p>JS原型</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"es6常用基础合集\"><a href=\"#es6常用基础合集\" class=\"headerlink\" title=\"es6常用基础合集\"></a><a href=\"https://www.jianshu.com/p/cfb0893c34f1\" target=\"_blank\" rel=\"noopener\">es6常用基础合集</a></h4><h5 id=\"url-https-www-jianshu-com-p-cfb0893c34f1\"><a href=\"#url-https-www-jianshu-com-p-cfb0893c34f1\" class=\"headerlink\" title=\"url:https://www.jianshu.com/p/cfb0893c34f1\"></a>url:<a href=\"https://www.jianshu.com/p/cfb0893c34f1\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/cfb0893c34f1</a></h5><h5 id=\"知识点\"><a href=\"#知识点\" class=\"headerlink\" title=\"知识点:\"></a>知识点:</h5><p>let,const<br>箭头函数<br>模板字符串<br>解析结构<br>函数默认参数<br>展开运算符<br>对象字面量与class<br>Promise</p>\n<h4 id=\"ES6新特性概览\"><a href=\"#ES6新特性概览\" class=\"headerlink\" title=\"ES6新特性概览\"></a><a href=\"http://www.cnblogs.com/Wayou/p/es6_new_features.html\" target=\"_blank\" rel=\"noopener\">ES6新特性概览</a></h4><h5 id=\"url：-http-www-cnblogs-com-Wayou-p-es6-new-features-html\"><a href=\"#url：-http-www-cnblogs-com-Wayou-p-es6-new-features-html\" class=\"headerlink\" title=\"url： http://www.cnblogs.com/Wayou/p/es6_new_features.html\"></a>url： <a href=\"http://www.cnblogs.com/Wayou/p/es6_new_features.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/Wayou/p/es6_new_features.html</a></h5><h5 id=\"知识点-1\"><a href=\"#知识点-1\" class=\"headerlink\" title=\"知识点:\"></a>知识点:</h5><p>箭头操作符<br>类的支持<br>增强的对象字面量<br>字符串模板<br>解构<br>参数默认值，不定参数，拓展参数<br>let与const 关键字<br>for of 值遍历<br>iterator, generator<br>模块<br>Map，Set 和 WeakMap，WeakSet<br>Proxies<br>Symbols<br>Math，Number，String，Object 的新API</p>\n<h4 id=\"透彻掌握Promise的使用，读这篇就够了\"><a href=\"#透彻掌握Promise的使用，读这篇就够了\" class=\"headerlink\" title=\"透彻掌握Promise的使用，读这篇就够了\"></a><a href=\"https://www.jianshu.com/p/fe5f173276bd\" target=\"_blank\" rel=\"noopener\">透彻掌握Promise的使用，读这篇就够了</a></h4><h5 id=\"url：https-www-jianshu-com-p-fe5f173276bd\"><a href=\"#url：https-www-jianshu-com-p-fe5f173276bd\" class=\"headerlink\" title=\"url：https://www.jianshu.com/p/fe5f173276bd\"></a>url：<a href=\"https://www.jianshu.com/p/fe5f173276bd\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/fe5f173276bd</a></h5><h5 id=\"知识点：\"><a href=\"#知识点：\" class=\"headerlink\" title=\"知识点：\"></a>知识点：</h5><p>实现方法<br>1.new Promise(fn),创建一个新的Promise对象并传入第一个执行方法。<br>2.resolve。成功的执行方法<br>3.reject。失败的执行方法<br>4.catch。失败的捕获。<br>5.then。链式调用下一步。<br>原理：<br>内部使用一个数组报错需要执行的所有方法，使用then来添加新的方法。旧的方法执行完毕之后检测数组，如果有新的就执行<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Promise</span> </span>&#123;</span><br><span class=\"line\">\tresult: any;</span><br><span class=\"line\">\tcallbacks = [];</span><br><span class=\"line\">\tfailbacks = [];</span><br><span class=\"line\">\t<span class=\"keyword\">constructor</span>(fn) &#123;</span><br><span class=\"line\">\t\tfn(<span class=\"keyword\">this</span>.resolve.bind(<span class=\"keyword\">this</span>), <span class=\"keyword\">this</span>.reject.bind(<span class=\"keyword\">this</span>));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tresolve(res) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.callbacks.length &gt; <span class=\"number\">0</span>) <span class=\"keyword\">this</span>.callbacks.shift()(res, <span class=\"keyword\">this</span>.resolve.bind(<span class=\"keyword\">this</span>), <span class=\"keyword\">this</span>.reject.bind(<span class=\"keyword\">this</span>));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treject(res) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.callbacks = [];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.failbacks.length &gt; <span class=\"number\">0</span>) <span class=\"keyword\">this</span>.failbacks.shift()(res, <span class=\"keyword\">this</span>.resolve.bind(<span class=\"keyword\">this</span>), <span class=\"keyword\">this</span>.reject.bind(<span class=\"keyword\">this</span>));</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (fn) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.failbacks.push(fn);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tthen(fn) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.callbacks.push(fn);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>调用示例：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>) </span>&#123;</span><br><span class=\"line\">\tsetTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\tresolve(<span class=\"string\">\"成功\"</span>);</span><br><span class=\"line\">\t&#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result, resolve, reject</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(result)</span><br><span class=\"line\">\treject(<span class=\"string\">\"失败\"</span>)</span><br><span class=\"line\">&#125;).</span><br><span class=\"line\"><span class=\"keyword\">catch</span> (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(err);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>es6写法：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建promise</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> promise = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 进行一些异步或耗时操作</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"comment\">/*如果成功 */</span> ) &#123;</span><br><span class=\"line\">        resolve(<span class=\"string\">\"Stuff worked!\"</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"built_in\">Error</span>(<span class=\"string\">\"It broke\"</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//绑定处理程序</span></span><br><span class=\"line\">promise.then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//promise成功的话会执行这里</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(result); <span class=\"comment\">// \"Stuff worked!\"</span></span><br><span class=\"line\">&#125;, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//promise失败会执行这里</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(err); <span class=\"comment\">// Error: \"It broke\"</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"4-前端算法相关\"><a href=\"#4-前端算法相关\" class=\"headerlink\" title=\"4.前端算法相关\"></a>4.<a href=\"https://github.com/qianbin01/frontend_train#sort\" target=\"_blank\" rel=\"noopener\">前端算法相关</a></h4><h5 id=\"url-https-github-com-qianbin01-frontend-train-sort\"><a href=\"#url-https-github-com-qianbin01-frontend-train-sort\" class=\"headerlink\" title=\"url:https://github.com/qianbin01/frontend_train#sort\"></a>url:<a href=\"https://github.com/qianbin01/frontend_train#sort\" target=\"_blank\" rel=\"noopener\">https://github.com/qianbin01/frontend_train#sort</a></h5><h5 id=\"知识点-2\"><a href=\"#知识点-2\" class=\"headerlink\" title=\"知识点\"></a>知识点</h5><p>冒泡排序</p>\n<blockquote>\n<p>比较两个相邻的项，如果第一个大于第二个则交换他们的位置,元素项向上移动至正确的顺序，就好像气泡往上冒一样</p>\n</blockquote>\n<p>快速排序:</p>\n<blockquote>\n<p> 1) 首先，在数组中选择一个中间项作为主元<br>2) 创建两个指针，左边的指向数组第一个项，右边的指向最后一个项，移动左指针，直到找到一个比主元大的项，接着，移动右边的指针，直到找到一个比主元小的项，然后交换它们。重复这个过程，直到<br> 左侧的指针超过了右侧的指针。这个使比主元小的都在左侧，比主元大的都在右侧。这一步叫划分操作<br>3) 接着，算法对划分后的小数组（较主元小的值组成的的小数组， 以及较主元大的值组成的小数组）重复之前的两个步骤，直到排序完成</p>\n</blockquote>\n<p>选择排序:</p>\n<blockquote>\n<p>大概思路是找到最小的放在第一位，找到第二小的放在第二位，以此类推 算法复杂度O(n^2)</p>\n</blockquote>\n<p>归并排序:</p>\n<blockquote>\n<p>归并排序：Mozilla Firefox 使用归并排序作为Array.prototype.sort的实现，而chrome使用快速排序的一个变体实现的,前面三种算法性能不好，但归并排序性能不错 算法复杂度O(nlog^n)<br>归并排序是一种分治算法。本质上就是把一个原始数组切分成较小的数组，直到每个小数组只有一个位置，接着把小数组归并成较大的数组，在归并过程中也会完成排序，直到最后只有一个排序完毕的大数组</p>\n</blockquote>\n<p>堆排序：</p>\n<blockquote>\n<p>堆排序把数组当中二叉树来排序而得名。<br>1）索引0是树的根节点；2）除根节点为，任意节点N的父节点是N/2；3）节点L的左子节点是2<em>L；4）节点R的右子节点为2</em>R + 1<br>本质上就是先构建二叉树，然后把根节点与最后一个进行交换，然后对剩下对元素进行二叉树构建，进行交换，直到剩下最后一个</p>\n</blockquote>\n<h4 id=\"5-javaScript常用知识点\"><a href=\"#5-javaScript常用知识点\" class=\"headerlink\" title=\"5.javaScript常用知识点\"></a>5.<a href=\"https://github.com/qianbin01/frontend_train#javascript\" target=\"_blank\" rel=\"noopener\">javaScript常用知识点</a></h4><h5 id=\"url-https-github-com-qianbin01-frontend-train-javascript\"><a href=\"#url-https-github-com-qianbin01-frontend-train-javascript\" class=\"headerlink\" title=\"url: https://github.com/qianbin01/frontend_train#javascript\"></a>url: <a href=\"https://github.com/qianbin01/frontend_train#javascript\" target=\"_blank\" rel=\"noopener\">https://github.com/qianbin01/frontend_train#javascript</a></h5><h5 id=\"知识点-3\"><a href=\"#知识点-3\" class=\"headerlink\" title=\"知识点\"></a>知识点</h5><p>map,reduce,filter的用法<br>js数据类型(7种)</p>\n<blockquote>\n<p>1.number;<br>2.string;<br>3.boolean;<br>4.undefined;<br>5.null;<br>6.symbol（ES6新增，文章后面有对着新类型的解释）Symbol 生成一个全局唯一的值。<br>7.Object.（包括Object，Array，Function）<br>闭包<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmp = <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">y</span>) </span>&#123;</span><br><span class=\"line\">        alert(x + y + (++tmp));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = foo(<span class=\"number\">2</span>); <span class=\"comment\">// bar 现在是一个闭包</span></span><br><span class=\"line\">bar(<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>结果是16<br>es6通常用let const块级作用域代替，<br>闭包缺点，ie中会引起内存泄漏，严格来说是ie的缺点不是闭包的问题</p>\n<p>什么是立即执行函数？使用立即执行函数的目的是什么？<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//常见两种方式</span></span><br><span class=\"line\"><span class=\"number\">1.</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;...&#125;)()</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">x</span>)</span>&#123;</span><br><span class=\"line\">\t  <span class=\"built_in\">console</span>.log(x);</span><br><span class=\"line\">  &#125;)(<span class=\"number\">12345</span>)</span><br><span class=\"line\"><span class=\"number\">2.</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;...&#125;())</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">x</span>)</span>&#123;</span><br><span class=\"line\">\t  <span class=\"built_in\">console</span>.log(x);</span><br><span class=\"line\">  &#125;(<span class=\"number\">12345</span>))</span><br><span class=\"line\"><span class=\"comment\">//作用 不破坏污染全局的命名空间，若需要使用，将其用变量传入如</span></span><br><span class=\"line\">（<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">window</span>)</span>&#123;...&#125;(<span class=\"built_in\">window</span>)）</span><br></pre></td></tr></table></figure></p>\n<p>async/await 语法<br>深浅拷贝<br>数组去重<br>思路1：定义一个新数组，并存放原数组的第一个元素，然后将元素组一一和新数组的元素对比，若不同则存放在新数组中<br>思路2：先将原数组排序，在与相邻的进行比较，如果不同则存入新数组。<br>思路3：利用对象属性存在的特性，如果没有该属性则存入新数组。<br>思路4（最常用）：使用es6 set<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr= [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log([...new <span class=\"built_in\">Set</span>(arr)]);</span><br></pre></td></tr></table></figure></p>\n<p>JS原型</p>\n"},{"title":"NodeJS连接MySQL时遇到的问题 Error Connection lost The server closed the connection.","date":"2018-09-07T07:54:30.000Z","issues":114,"_content":"\n今天用NodeJS连接Mysql时遇到点折磨人的问题，记录下解决方法。\n\nNodeJS和Mysql都已经正确安装了，但是NodeJS和Mysql的连接出现问题，查找网上一些解决办法都不能解决问题。\n报错如下：\n![image](https://user-images.githubusercontent.com/22697565/45206239-1cfe7e80-b2b7-11e8-96d3-c104fa5c7b14.png)\n\n经过查找定位，在mysql官网找到了解决方案：\n\n[官网链接 》》MySQL Connector/Node.js](https://dev.mysql.com/doc/dev/connector-nodejs/8.0/)\nMySql 针对node的连接器对mysql的版本有要求，且需要另外的插件：\n\n![image](https://user-images.githubusercontent.com/22697565/45206324-520ad100-b2b7-11e8-8814-8d6d5b2fb7ae.png)\n\n然后下载的最新版的mysql mysql-installer-community-5.7.20.0.msi\n \n执行 :\n```\nnpm install mysql\n\nnpm install @mysql/xdevapi\n```\n\n运行[官方示例](https://github.com/mysqljs/mysql#introduction)，成功。\n","source":"_posts/NodeJS连接MySQL时遇到的问题 Error Connection lost The server closed the connection.md","raw":"---\ntitle: NodeJS连接MySQL时遇到的问题 Error Connection lost The server closed the connection.\ndate: 2018-09-07 15:54:30\nissues: 114\ncategories: \"前端\" \ntags: node \n---\n\n今天用NodeJS连接Mysql时遇到点折磨人的问题，记录下解决方法。\n\nNodeJS和Mysql都已经正确安装了，但是NodeJS和Mysql的连接出现问题，查找网上一些解决办法都不能解决问题。\n报错如下：\n![image](https://user-images.githubusercontent.com/22697565/45206239-1cfe7e80-b2b7-11e8-96d3-c104fa5c7b14.png)\n\n经过查找定位，在mysql官网找到了解决方案：\n\n[官网链接 》》MySQL Connector/Node.js](https://dev.mysql.com/doc/dev/connector-nodejs/8.0/)\nMySql 针对node的连接器对mysql的版本有要求，且需要另外的插件：\n\n![image](https://user-images.githubusercontent.com/22697565/45206324-520ad100-b2b7-11e8-8814-8d6d5b2fb7ae.png)\n\n然后下载的最新版的mysql mysql-installer-community-5.7.20.0.msi\n \n执行 :\n```\nnpm install mysql\n\nnpm install @mysql/xdevapi\n```\n\n运行[官方示例](https://github.com/mysqljs/mysql#introduction)，成功。\n","slug":"NodeJS连接MySQL时遇到的问题 Error Connection lost The server closed the connection","published":1,"updated":"2018-09-11T07:40:37.803Z","_id":"cjlxep9fa0002aga1cicf896a","comments":1,"layout":"post","photos":[],"link":"","content":"<p>今天用NodeJS连接Mysql时遇到点折磨人的问题，记录下解决方法。</p>\n<p>NodeJS和Mysql都已经正确安装了，但是NodeJS和Mysql的连接出现问题，查找网上一些解决办法都不能解决问题。<br>报错如下：<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"https://user-images.githubusercontent.com/22697565/45206239-1cfe7e80-b2b7-11e8-96d3-c104fa5c7b14.png\" alt=\"image\" title=\"\">\n                </div>\n                <div class=\"image-caption\">image</div>\n            </figure></p>\n<p>经过查找定位，在mysql官网找到了解决方案：</p>\n<p><a href=\"https://dev.mysql.com/doc/dev/connector-nodejs/8.0/\" target=\"_blank\" rel=\"noopener\">官网链接 》》MySQL Connector/Node.js</a><br>MySql 针对node的连接器对mysql的版本有要求，且需要另外的插件：</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"https://user-images.githubusercontent.com/22697565/45206324-520ad100-b2b7-11e8-8814-8d6d5b2fb7ae.png\" alt=\"image\" title=\"\">\n                </div>\n                <div class=\"image-caption\">image</div>\n            </figure>\n<p>然后下载的最新版的mysql mysql-installer-community-5.7.20.0.msi</p>\n<p>执行 :<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install mysql</span><br><span class=\"line\"></span><br><span class=\"line\">npm install @mysql/xdevapi</span><br></pre></td></tr></table></figure></p>\n<p>运行<a href=\"https://github.com/mysqljs/mysql#introduction\" target=\"_blank\" rel=\"noopener\">官方示例</a>，成功。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天用NodeJS连接Mysql时遇到点折磨人的问题，记录下解决方法。</p>\n<p>NodeJS和Mysql都已经正确安装了，但是NodeJS和Mysql的连接出现问题，查找网上一些解决办法都不能解决问题。<br>报错如下：<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"https://user-images.githubusercontent.com/22697565/45206239-1cfe7e80-b2b7-11e8-96d3-c104fa5c7b14.png\" alt=\"image\" title=\"\">\n                </div>\n                <div class=\"image-caption\">image</div>\n            </figure></p>\n<p>经过查找定位，在mysql官网找到了解决方案：</p>\n<p><a href=\"https://dev.mysql.com/doc/dev/connector-nodejs/8.0/\" target=\"_blank\" rel=\"noopener\">官网链接 》》MySQL Connector/Node.js</a><br>MySql 针对node的连接器对mysql的版本有要求，且需要另外的插件：</p>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"https://user-images.githubusercontent.com/22697565/45206324-520ad100-b2b7-11e8-8814-8d6d5b2fb7ae.png\" alt=\"image\" title=\"\">\n                </div>\n                <div class=\"image-caption\">image</div>\n            </figure>\n<p>然后下载的最新版的mysql mysql-installer-community-5.7.20.0.msi</p>\n<p>执行 :<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install mysql</span><br><span class=\"line\"></span><br><span class=\"line\">npm install @mysql/xdevapi</span><br></pre></td></tr></table></figure></p>\n<p>运行<a href=\"https://github.com/mysqljs/mysql#introduction\" target=\"_blank\" rel=\"noopener\">官方示例</a>，成功。</p>\n"},{"title":"React Js 微信分享封装","date":"2018-09-03T07:17:54.000Z","issues":110,"description":"本篇文章给大家分享的内容是代码详解React Js 微信分享封装，有着一定的参考价值，有需要的朋友可以参考一下 话不多说，直接上源代码：","_content":"\n## Introductions\n本篇文章给大家分享的内容是代码详解React Js 微信分享封装，有着一定的参考价值，有需要的朋友可以参考一下 话不多说，直接上源代码：\n\n## Quick Start\n\n### 分享功能\n```jsx\nimport Fetch from './FetchIt';\nimport API_URL from './url';\nimport Share from './Share';\n\nlet wxUtils = {};\n\n//////////////////////////////////////////////////////////////////////////////////////\n//\n// 分享\n//\n//////////////////////////////////////////////////////////////////////////////////////\n\n/**\n getshareinfo?type=\n type :goods 课程详情 team 团详情\n id 课程id\n tid 团ID\n * @param config\n * @param shareInfo {imgUrl,title,description,link}\n */\n\nfunction share2wx(config, shareInfo) {\n    const share = new Share({\n        appid: config.appid, // 必填，公众号的唯一标识\n        timestamp: config.timestamp, // 必填，生成签名的时间戳\n        nonceStr: config.nonceStr, // 必填，生成签名的随机串\n        signature: config.signature, // 必填，签名\n    });\n    share.init(Object.assign({}, shareInfo));\n}\n\nfunction getConfig(shareInfo) {\n    let href = window.location.href.split('#')[0];\n    const url = encodeURIComponent(href /*window.location.href*/);\n    Fetch.get(`${API_URL.mobile.signature_path}?url=${url}`).then(data => {\n        share2wx(data, shareInfo);\n    });\n}\n\n/**\n * @param shareInfo\n */\n\nwxUtils.share = function (shareInfo) {\n    getConfig(shareInfo);\n};\n\n//////////////////////////////////////////////////////////////////////////////////////\n//\n// 分享结束\n//\n//////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * 是否开启右上角Menu\n * @param open\n */\n\nwxUtils.optionMenu = function (open = true) {\n    if (open) {\n        openOptionMenu();\n    } else {\n        disabledOptionMenu();\n    }\n};\n\n/**\n * 是否禁用右上角\n */\n\nfunction disabledOptionMenu() {\n    if (typeof WeixinJSBridge === \"undefined\") {\n        if (document.addEventListener) {\n            document.addEventListener('WeixinJSBridgeReady', onBridgeReady(true), false);\n        } else if (document.attachEvent) {\n            document.attachEvent('WeixinJSBridgeReady', onBridgeReady(true));\n            document.attachEvent('onWeixinJSBridgeReady', onBridgeReady(true));\n        }\n    } else {\n        onBridgeReady(true);\n    }\n}\n\n/**\n * 开启menu\n */\n\nfunction openOptionMenu() {\n    if (typeof WeixinJSBridge === \"undefined\") {\n        if (document.addEventListener) {\n            document.addEventListener('WeixinJSBridgeReady', onBridgeReady(false), false);\n        } else if (document.attachEvent) {\n            document.attachEvent('WeixinJSBridgeReady', onBridgeReady(false));\n            document.attachEvent('onWeixinJSBridgeReady', onBridgeReady(false));\n        }\n    } else {\n        onBridgeReady(false);\n    }\n}\n\nfunction onBridgeReady(disable = true) {\n    if (typeof WeixinJSBridge !== \"undefined\") WeixinJSBridge.call(disable ? 'hideOptionMenu' : 'showOptionMenu');\n}\n/**\n * 隐藏微信网页底部的导航栏\n * @param disable\n */\n\nwxUtils.disabledToolbar = function (disable = true) {\n    document.addEventListener('WeixinJSBridgeReady', function onBridgeReady() {\n        // 通过下面这个API隐藏底部导航栏\n        WeixinJSBridge.call(disable ? 'hideToolbar' : 'showToolbar');\n    });\n};\n\nexport default wxUtils;\n```\n### 分享配置\n```jsx\n// 分享\nfunction Share(config) {\n    wx.config({\n        debug: false, // 开启调试模式\n        appId: config.appid, // 必填，公众号的唯一标识\n        timestamp: config.timestamp, // 必填，生成签名的时间戳\n        nonceStr: config.nonceStr, // 必填，生成签名的随机串\n        signature: config.signature, // 必填，签名，见附录1\n        jsApiList: ['onMenuShareTimeline', 'onMenuShareAppMessage', 'onMenuShareWeibo'], // 必填，需要使用的JS接口列表，所有JS接口列表见附录2\n    });\n}\n\nShare.prototype = {\n    constructor: Share,\n\n    init(config) {\n        this.imgUrl = config.imgUrl;\n        this.link = config.link;\n        // this.musicPath = config.musicPath;\n        this.description = config.description;\n        this.title = config.title;\n\n        wx.ready(() => {\n            // if (this.musicPath) {\n            //     document.getElementById('musicIcon').play();\n            // }\n            this.toFriend();\n            this.toTimeline();\n        });\n\n        wx.error(res => {\n            console.log(`${res}`);\n        });\n    },\n\n    toFriend() {\n        wx.onMenuShareAppMessage({\n            imgUrl: this.imgUrl,\n            link: this.link,\n            title: this.title,\n            desc: this.description,\n            success: function () {\n                // 用户确认分享后执行的回调函数\n            },\n        });\n    },\n\n    toTimeline() {\n        wx.onMenuShareTimeline({\n            imgUrl: this.imgUrl,\n            link: this.link,\n            title: this.title,\n            desc: this.description,\n            success: function () {\n                // 用户确认分享后执行的回调函数\n            },\n        });\n    },\n};\n\nexport default Share;\n```\n### 开启分享\n```jsx\n//开启分享\nBaseComponent.wxUtils.optionMenu(true);\nBaseComponent.wxUtils.share({\n    imgUrl: activityData.sharePicUrl,\n    title: activityData.shareTitle,\n    description: activityData.shareContent,\n    link: url,\n});\n```","source":"_posts/React-Js-微信分享封装.md","raw":"---\ntitle: React Js 微信分享封装\ndate: 2018-09-03 15:17:54\ncategories: \"前端\" \nissues: 110\ntags:\n     - React\ndescription: 本篇文章给大家分享的内容是代码详解React Js 微信分享封装，有着一定的参考价值，有需要的朋友可以参考一下 话不多说，直接上源代码：\n---\n\n## Introductions\n本篇文章给大家分享的内容是代码详解React Js 微信分享封装，有着一定的参考价值，有需要的朋友可以参考一下 话不多说，直接上源代码：\n\n## Quick Start\n\n### 分享功能\n```jsx\nimport Fetch from './FetchIt';\nimport API_URL from './url';\nimport Share from './Share';\n\nlet wxUtils = {};\n\n//////////////////////////////////////////////////////////////////////////////////////\n//\n// 分享\n//\n//////////////////////////////////////////////////////////////////////////////////////\n\n/**\n getshareinfo?type=\n type :goods 课程详情 team 团详情\n id 课程id\n tid 团ID\n * @param config\n * @param shareInfo {imgUrl,title,description,link}\n */\n\nfunction share2wx(config, shareInfo) {\n    const share = new Share({\n        appid: config.appid, // 必填，公众号的唯一标识\n        timestamp: config.timestamp, // 必填，生成签名的时间戳\n        nonceStr: config.nonceStr, // 必填，生成签名的随机串\n        signature: config.signature, // 必填，签名\n    });\n    share.init(Object.assign({}, shareInfo));\n}\n\nfunction getConfig(shareInfo) {\n    let href = window.location.href.split('#')[0];\n    const url = encodeURIComponent(href /*window.location.href*/);\n    Fetch.get(`${API_URL.mobile.signature_path}?url=${url}`).then(data => {\n        share2wx(data, shareInfo);\n    });\n}\n\n/**\n * @param shareInfo\n */\n\nwxUtils.share = function (shareInfo) {\n    getConfig(shareInfo);\n};\n\n//////////////////////////////////////////////////////////////////////////////////////\n//\n// 分享结束\n//\n//////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * 是否开启右上角Menu\n * @param open\n */\n\nwxUtils.optionMenu = function (open = true) {\n    if (open) {\n        openOptionMenu();\n    } else {\n        disabledOptionMenu();\n    }\n};\n\n/**\n * 是否禁用右上角\n */\n\nfunction disabledOptionMenu() {\n    if (typeof WeixinJSBridge === \"undefined\") {\n        if (document.addEventListener) {\n            document.addEventListener('WeixinJSBridgeReady', onBridgeReady(true), false);\n        } else if (document.attachEvent) {\n            document.attachEvent('WeixinJSBridgeReady', onBridgeReady(true));\n            document.attachEvent('onWeixinJSBridgeReady', onBridgeReady(true));\n        }\n    } else {\n        onBridgeReady(true);\n    }\n}\n\n/**\n * 开启menu\n */\n\nfunction openOptionMenu() {\n    if (typeof WeixinJSBridge === \"undefined\") {\n        if (document.addEventListener) {\n            document.addEventListener('WeixinJSBridgeReady', onBridgeReady(false), false);\n        } else if (document.attachEvent) {\n            document.attachEvent('WeixinJSBridgeReady', onBridgeReady(false));\n            document.attachEvent('onWeixinJSBridgeReady', onBridgeReady(false));\n        }\n    } else {\n        onBridgeReady(false);\n    }\n}\n\nfunction onBridgeReady(disable = true) {\n    if (typeof WeixinJSBridge !== \"undefined\") WeixinJSBridge.call(disable ? 'hideOptionMenu' : 'showOptionMenu');\n}\n/**\n * 隐藏微信网页底部的导航栏\n * @param disable\n */\n\nwxUtils.disabledToolbar = function (disable = true) {\n    document.addEventListener('WeixinJSBridgeReady', function onBridgeReady() {\n        // 通过下面这个API隐藏底部导航栏\n        WeixinJSBridge.call(disable ? 'hideToolbar' : 'showToolbar');\n    });\n};\n\nexport default wxUtils;\n```\n### 分享配置\n```jsx\n// 分享\nfunction Share(config) {\n    wx.config({\n        debug: false, // 开启调试模式\n        appId: config.appid, // 必填，公众号的唯一标识\n        timestamp: config.timestamp, // 必填，生成签名的时间戳\n        nonceStr: config.nonceStr, // 必填，生成签名的随机串\n        signature: config.signature, // 必填，签名，见附录1\n        jsApiList: ['onMenuShareTimeline', 'onMenuShareAppMessage', 'onMenuShareWeibo'], // 必填，需要使用的JS接口列表，所有JS接口列表见附录2\n    });\n}\n\nShare.prototype = {\n    constructor: Share,\n\n    init(config) {\n        this.imgUrl = config.imgUrl;\n        this.link = config.link;\n        // this.musicPath = config.musicPath;\n        this.description = config.description;\n        this.title = config.title;\n\n        wx.ready(() => {\n            // if (this.musicPath) {\n            //     document.getElementById('musicIcon').play();\n            // }\n            this.toFriend();\n            this.toTimeline();\n        });\n\n        wx.error(res => {\n            console.log(`${res}`);\n        });\n    },\n\n    toFriend() {\n        wx.onMenuShareAppMessage({\n            imgUrl: this.imgUrl,\n            link: this.link,\n            title: this.title,\n            desc: this.description,\n            success: function () {\n                // 用户确认分享后执行的回调函数\n            },\n        });\n    },\n\n    toTimeline() {\n        wx.onMenuShareTimeline({\n            imgUrl: this.imgUrl,\n            link: this.link,\n            title: this.title,\n            desc: this.description,\n            success: function () {\n                // 用户确认分享后执行的回调函数\n            },\n        });\n    },\n};\n\nexport default Share;\n```\n### 开启分享\n```jsx\n//开启分享\nBaseComponent.wxUtils.optionMenu(true);\nBaseComponent.wxUtils.share({\n    imgUrl: activityData.sharePicUrl,\n    title: activityData.shareTitle,\n    description: activityData.shareContent,\n    link: url,\n});\n```","slug":"React-Js-微信分享封装","published":1,"updated":"2018-09-07T09:24:03.183Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlxep9fr0006aga17801psii","content":"<h2 id=\"Introductions\"><a href=\"#Introductions\" class=\"headerlink\" title=\"Introductions\"></a>Introductions</h2><p>本篇文章给大家分享的内容是代码详解React Js 微信分享封装，有着一定的参考价值，有需要的朋友可以参考一下 话不多说，直接上源代码：</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"分享功能\"><a href=\"#分享功能\" class=\"headerlink\" title=\"分享功能\"></a>分享功能</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Fetch <span class=\"keyword\">from</span> <span class=\"string\">'./FetchIt'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> API_URL <span class=\"keyword\">from</span> <span class=\"string\">'./url'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Share <span class=\"keyword\">from</span> <span class=\"string\">'./Share'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> wxUtils = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// 分享</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> getshareinfo?type=</span></span><br><span class=\"line\"><span class=\"comment\"> type :goods 课程详情 team 团详情</span></span><br><span class=\"line\"><span class=\"comment\"> id 课程id</span></span><br><span class=\"line\"><span class=\"comment\"> tid 团ID</span></span><br><span class=\"line\"><span class=\"comment\"> * @param config</span></span><br><span class=\"line\"><span class=\"comment\"> * @param shareInfo &#123;imgUrl,title,description,link&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">share2wx</span>(<span class=\"params\">config, shareInfo</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> share = <span class=\"keyword\">new</span> Share(&#123;</span><br><span class=\"line\">        appid: config.appid, <span class=\"comment\">// 必填，公众号的唯一标识</span></span><br><span class=\"line\">        timestamp: config.timestamp, <span class=\"comment\">// 必填，生成签名的时间戳</span></span><br><span class=\"line\">        nonceStr: config.nonceStr, <span class=\"comment\">// 必填，生成签名的随机串</span></span><br><span class=\"line\">        signature: config.signature, <span class=\"comment\">// 必填，签名</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    share.init(<span class=\"built_in\">Object</span>.assign(&#123;&#125;, shareInfo));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getConfig</span>(<span class=\"params\">shareInfo</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> href = <span class=\"built_in\">window</span>.location.href.split(<span class=\"string\">'#'</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> url = <span class=\"built_in\">encodeURIComponent</span>(href <span class=\"comment\">/*window.location.href*/</span>);</span><br><span class=\"line\">    Fetch.get(<span class=\"string\">`<span class=\"subst\">$&#123;API_URL.mobile.signature_path&#125;</span>?url=<span class=\"subst\">$&#123;url&#125;</span>`</span>).then(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">        share2wx(data, shareInfo);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @param shareInfo</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\">wxUtils.share = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">shareInfo</span>) </span>&#123;</span><br><span class=\"line\">    getConfig(shareInfo);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// 分享结束</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 是否开启右上角Menu</span></span><br><span class=\"line\"><span class=\"comment\"> * @param open</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\">wxUtils.optionMenu = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">open = true</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (open) &#123;</span><br><span class=\"line\">        openOptionMenu();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        disabledOptionMenu();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 是否禁用右上角</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">disabledOptionMenu</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> WeixinJSBridge === <span class=\"string\">\"undefined\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'WeixinJSBridgeReady'</span>, onBridgeReady(<span class=\"literal\">true</span>), <span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.attachEvent) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.attachEvent(<span class=\"string\">'WeixinJSBridgeReady'</span>, onBridgeReady(<span class=\"literal\">true</span>));</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.attachEvent(<span class=\"string\">'onWeixinJSBridgeReady'</span>, onBridgeReady(<span class=\"literal\">true</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        onBridgeReady(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 开启menu</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">openOptionMenu</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> WeixinJSBridge === <span class=\"string\">\"undefined\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'WeixinJSBridgeReady'</span>, onBridgeReady(<span class=\"literal\">false</span>), <span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.attachEvent) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.attachEvent(<span class=\"string\">'WeixinJSBridgeReady'</span>, onBridgeReady(<span class=\"literal\">false</span>));</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.attachEvent(<span class=\"string\">'onWeixinJSBridgeReady'</span>, onBridgeReady(<span class=\"literal\">false</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        onBridgeReady(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onBridgeReady</span>(<span class=\"params\">disable = true</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> WeixinJSBridge !== <span class=\"string\">\"undefined\"</span>) WeixinJSBridge.call(disable ? <span class=\"string\">'hideOptionMenu'</span> : <span class=\"string\">'showOptionMenu'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 隐藏微信网页底部的导航栏</span></span><br><span class=\"line\"><span class=\"comment\"> * @param disable</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\">wxUtils.disabledToolbar = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">disable = true</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'WeixinJSBridgeReady'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onBridgeReady</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 通过下面这个API隐藏底部导航栏</span></span><br><span class=\"line\">        WeixinJSBridge.call(disable ? <span class=\"string\">'hideToolbar'</span> : <span class=\"string\">'showToolbar'</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> wxUtils;</span><br></pre></td></tr></table></figure>\n<h3 id=\"分享配置\"><a href=\"#分享配置\" class=\"headerlink\" title=\"分享配置\"></a>分享配置</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 分享</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Share</span>(<span class=\"params\">config</span>) </span>&#123;</span><br><span class=\"line\">    wx.config(&#123;</span><br><span class=\"line\">        debug: <span class=\"literal\">false</span>, <span class=\"comment\">// 开启调试模式</span></span><br><span class=\"line\">        appId: config.appid, <span class=\"comment\">// 必填，公众号的唯一标识</span></span><br><span class=\"line\">        timestamp: config.timestamp, <span class=\"comment\">// 必填，生成签名的时间戳</span></span><br><span class=\"line\">        nonceStr: config.nonceStr, <span class=\"comment\">// 必填，生成签名的随机串</span></span><br><span class=\"line\">        signature: config.signature, <span class=\"comment\">// 必填，签名，见附录1</span></span><br><span class=\"line\">        jsApiList: [<span class=\"string\">'onMenuShareTimeline'</span>, <span class=\"string\">'onMenuShareAppMessage'</span>, <span class=\"string\">'onMenuShareWeibo'</span>], <span class=\"comment\">// 必填，需要使用的JS接口列表，所有JS接口列表见附录2</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Share.prototype = &#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>: Share,</span><br><span class=\"line\"></span><br><span class=\"line\">    init(config) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.imgUrl = config.imgUrl;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.link = config.link;</span><br><span class=\"line\">        <span class=\"comment\">// this.musicPath = config.musicPath;</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.description = config.description;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.title = config.title;</span><br><span class=\"line\"></span><br><span class=\"line\">        wx.ready(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// if (this.musicPath) &#123;</span></span><br><span class=\"line\">            <span class=\"comment\">//     document.getElementById('musicIcon').play();</span></span><br><span class=\"line\">            <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.toFriend();</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.toTimeline();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        wx.error(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;res&#125;</span>`</span>);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    toFriend() &#123;</span><br><span class=\"line\">        wx.onMenuShareAppMessage(&#123;</span><br><span class=\"line\">            imgUrl: <span class=\"keyword\">this</span>.imgUrl,</span><br><span class=\"line\">            link: <span class=\"keyword\">this</span>.link,</span><br><span class=\"line\">            title: <span class=\"keyword\">this</span>.title,</span><br><span class=\"line\">            desc: <span class=\"keyword\">this</span>.description,</span><br><span class=\"line\">            success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">// 用户确认分享后执行的回调函数</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    toTimeline() &#123;</span><br><span class=\"line\">        wx.onMenuShareTimeline(&#123;</span><br><span class=\"line\">            imgUrl: <span class=\"keyword\">this</span>.imgUrl,</span><br><span class=\"line\">            link: <span class=\"keyword\">this</span>.link,</span><br><span class=\"line\">            title: <span class=\"keyword\">this</span>.title,</span><br><span class=\"line\">            desc: <span class=\"keyword\">this</span>.description,</span><br><span class=\"line\">            success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">// 用户确认分享后执行的回调函数</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Share;</span><br></pre></td></tr></table></figure>\n<h3 id=\"开启分享\"><a href=\"#开启分享\" class=\"headerlink\" title=\"开启分享\"></a>开启分享</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//开启分享</span></span><br><span class=\"line\">BaseComponent.wxUtils.optionMenu(<span class=\"literal\">true</span>);</span><br><span class=\"line\">BaseComponent.wxUtils.share(&#123;</span><br><span class=\"line\">    imgUrl: activityData.sharePicUrl,</span><br><span class=\"line\">    title: activityData.shareTitle,</span><br><span class=\"line\">    description: activityData.shareContent,</span><br><span class=\"line\">    link: url,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Introductions\"><a href=\"#Introductions\" class=\"headerlink\" title=\"Introductions\"></a>Introductions</h2><p>本篇文章给大家分享的内容是代码详解React Js 微信分享封装，有着一定的参考价值，有需要的朋友可以参考一下 话不多说，直接上源代码：</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"分享功能\"><a href=\"#分享功能\" class=\"headerlink\" title=\"分享功能\"></a>分享功能</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Fetch <span class=\"keyword\">from</span> <span class=\"string\">'./FetchIt'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> API_URL <span class=\"keyword\">from</span> <span class=\"string\">'./url'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Share <span class=\"keyword\">from</span> <span class=\"string\">'./Share'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> wxUtils = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// 分享</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> getshareinfo?type=</span></span><br><span class=\"line\"><span class=\"comment\"> type :goods 课程详情 team 团详情</span></span><br><span class=\"line\"><span class=\"comment\"> id 课程id</span></span><br><span class=\"line\"><span class=\"comment\"> tid 团ID</span></span><br><span class=\"line\"><span class=\"comment\"> * @param config</span></span><br><span class=\"line\"><span class=\"comment\"> * @param shareInfo &#123;imgUrl,title,description,link&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">share2wx</span>(<span class=\"params\">config, shareInfo</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> share = <span class=\"keyword\">new</span> Share(&#123;</span><br><span class=\"line\">        appid: config.appid, <span class=\"comment\">// 必填，公众号的唯一标识</span></span><br><span class=\"line\">        timestamp: config.timestamp, <span class=\"comment\">// 必填，生成签名的时间戳</span></span><br><span class=\"line\">        nonceStr: config.nonceStr, <span class=\"comment\">// 必填，生成签名的随机串</span></span><br><span class=\"line\">        signature: config.signature, <span class=\"comment\">// 必填，签名</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    share.init(<span class=\"built_in\">Object</span>.assign(&#123;&#125;, shareInfo));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getConfig</span>(<span class=\"params\">shareInfo</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> href = <span class=\"built_in\">window</span>.location.href.split(<span class=\"string\">'#'</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> url = <span class=\"built_in\">encodeURIComponent</span>(href <span class=\"comment\">/*window.location.href*/</span>);</span><br><span class=\"line\">    Fetch.get(<span class=\"string\">`<span class=\"subst\">$&#123;API_URL.mobile.signature_path&#125;</span>?url=<span class=\"subst\">$&#123;url&#125;</span>`</span>).then(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">        share2wx(data, shareInfo);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @param shareInfo</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\">wxUtils.share = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">shareInfo</span>) </span>&#123;</span><br><span class=\"line\">    getConfig(shareInfo);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// 分享结束</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 是否开启右上角Menu</span></span><br><span class=\"line\"><span class=\"comment\"> * @param open</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\">wxUtils.optionMenu = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">open = true</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (open) &#123;</span><br><span class=\"line\">        openOptionMenu();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        disabledOptionMenu();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 是否禁用右上角</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">disabledOptionMenu</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> WeixinJSBridge === <span class=\"string\">\"undefined\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'WeixinJSBridgeReady'</span>, onBridgeReady(<span class=\"literal\">true</span>), <span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.attachEvent) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.attachEvent(<span class=\"string\">'WeixinJSBridgeReady'</span>, onBridgeReady(<span class=\"literal\">true</span>));</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.attachEvent(<span class=\"string\">'onWeixinJSBridgeReady'</span>, onBridgeReady(<span class=\"literal\">true</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        onBridgeReady(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 开启menu</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">openOptionMenu</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> WeixinJSBridge === <span class=\"string\">\"undefined\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'WeixinJSBridgeReady'</span>, onBridgeReady(<span class=\"literal\">false</span>), <span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.attachEvent) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.attachEvent(<span class=\"string\">'WeixinJSBridgeReady'</span>, onBridgeReady(<span class=\"literal\">false</span>));</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.attachEvent(<span class=\"string\">'onWeixinJSBridgeReady'</span>, onBridgeReady(<span class=\"literal\">false</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        onBridgeReady(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onBridgeReady</span>(<span class=\"params\">disable = true</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> WeixinJSBridge !== <span class=\"string\">\"undefined\"</span>) WeixinJSBridge.call(disable ? <span class=\"string\">'hideOptionMenu'</span> : <span class=\"string\">'showOptionMenu'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 隐藏微信网页底部的导航栏</span></span><br><span class=\"line\"><span class=\"comment\"> * @param disable</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\">wxUtils.disabledToolbar = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">disable = true</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'WeixinJSBridgeReady'</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onBridgeReady</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 通过下面这个API隐藏底部导航栏</span></span><br><span class=\"line\">        WeixinJSBridge.call(disable ? <span class=\"string\">'hideToolbar'</span> : <span class=\"string\">'showToolbar'</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> wxUtils;</span><br></pre></td></tr></table></figure>\n<h3 id=\"分享配置\"><a href=\"#分享配置\" class=\"headerlink\" title=\"分享配置\"></a>分享配置</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 分享</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Share</span>(<span class=\"params\">config</span>) </span>&#123;</span><br><span class=\"line\">    wx.config(&#123;</span><br><span class=\"line\">        debug: <span class=\"literal\">false</span>, <span class=\"comment\">// 开启调试模式</span></span><br><span class=\"line\">        appId: config.appid, <span class=\"comment\">// 必填，公众号的唯一标识</span></span><br><span class=\"line\">        timestamp: config.timestamp, <span class=\"comment\">// 必填，生成签名的时间戳</span></span><br><span class=\"line\">        nonceStr: config.nonceStr, <span class=\"comment\">// 必填，生成签名的随机串</span></span><br><span class=\"line\">        signature: config.signature, <span class=\"comment\">// 必填，签名，见附录1</span></span><br><span class=\"line\">        jsApiList: [<span class=\"string\">'onMenuShareTimeline'</span>, <span class=\"string\">'onMenuShareAppMessage'</span>, <span class=\"string\">'onMenuShareWeibo'</span>], <span class=\"comment\">// 必填，需要使用的JS接口列表，所有JS接口列表见附录2</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Share.prototype = &#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>: Share,</span><br><span class=\"line\"></span><br><span class=\"line\">    init(config) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.imgUrl = config.imgUrl;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.link = config.link;</span><br><span class=\"line\">        <span class=\"comment\">// this.musicPath = config.musicPath;</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.description = config.description;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.title = config.title;</span><br><span class=\"line\"></span><br><span class=\"line\">        wx.ready(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// if (this.musicPath) &#123;</span></span><br><span class=\"line\">            <span class=\"comment\">//     document.getElementById('musicIcon').play();</span></span><br><span class=\"line\">            <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.toFriend();</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.toTimeline();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        wx.error(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;res&#125;</span>`</span>);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    toFriend() &#123;</span><br><span class=\"line\">        wx.onMenuShareAppMessage(&#123;</span><br><span class=\"line\">            imgUrl: <span class=\"keyword\">this</span>.imgUrl,</span><br><span class=\"line\">            link: <span class=\"keyword\">this</span>.link,</span><br><span class=\"line\">            title: <span class=\"keyword\">this</span>.title,</span><br><span class=\"line\">            desc: <span class=\"keyword\">this</span>.description,</span><br><span class=\"line\">            success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">// 用户确认分享后执行的回调函数</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    toTimeline() &#123;</span><br><span class=\"line\">        wx.onMenuShareTimeline(&#123;</span><br><span class=\"line\">            imgUrl: <span class=\"keyword\">this</span>.imgUrl,</span><br><span class=\"line\">            link: <span class=\"keyword\">this</span>.link,</span><br><span class=\"line\">            title: <span class=\"keyword\">this</span>.title,</span><br><span class=\"line\">            desc: <span class=\"keyword\">this</span>.description,</span><br><span class=\"line\">            success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">// 用户确认分享后执行的回调函数</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Share;</span><br></pre></td></tr></table></figure>\n<h3 id=\"开启分享\"><a href=\"#开启分享\" class=\"headerlink\" title=\"开启分享\"></a>开启分享</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//开启分享</span></span><br><span class=\"line\">BaseComponent.wxUtils.optionMenu(<span class=\"literal\">true</span>);</span><br><span class=\"line\">BaseComponent.wxUtils.share(&#123;</span><br><span class=\"line\">    imgUrl: activityData.sharePicUrl,</span><br><span class=\"line\">    title: activityData.shareTitle,</span><br><span class=\"line\">    description: activityData.shareContent,</span><br><span class=\"line\">    link: url,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>"},{"title":"javascript截取文件名的后缀","date":"2018-09-06T11:22:37.000Z","issues":112,"_content":"\n```js\nconst fileName=\"text.png\";\n\n//带.的格式\nlet fileFormat=fileName.substring(fileName.lastIndexOf('.'))\n\n// 不带.的格式\nlet fileFormat2=fileName.substring(fileName.lastIndexOf('.')+1);\nconsole.log(fileFormat,fileFormat2)\n```\n![image](https://user-images.githubusercontent.com/22697565/45154907-b8d2b080-b20b-11e8-944d-3adde64b69dd.png)\n\n\n\n","source":"_posts/javascript截取文件名的后缀.md","raw":"---\ntitle: javascript截取文件名的后缀\ndate: 2018-09-06 19:22:37\ncategories: \"前端\" \nissues: 112\ntags: [js代码片段]\n---\n\n```js\nconst fileName=\"text.png\";\n\n//带.的格式\nlet fileFormat=fileName.substring(fileName.lastIndexOf('.'))\n\n// 不带.的格式\nlet fileFormat2=fileName.substring(fileName.lastIndexOf('.')+1);\nconsole.log(fileFormat,fileFormat2)\n```\n![image](https://user-images.githubusercontent.com/22697565/45154907-b8d2b080-b20b-11e8-944d-3adde64b69dd.png)\n\n\n\n","slug":"javascript截取文件名的后缀","published":1,"updated":"2018-09-07T07:58:58.647Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlxep9fz0008aga1xgfky4zb","content":"<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fileName=<span class=\"string\">\"text.png\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//带.的格式</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> fileFormat=fileName.substring(fileName.lastIndexOf(<span class=\"string\">'.'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不带.的格式</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> fileFormat2=fileName.substring(fileName.lastIndexOf(<span class=\"string\">'.'</span>)+<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fileFormat,fileFormat2)</span><br></pre></td></tr></table></figure>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"https://user-images.githubusercontent.com/22697565/45154907-b8d2b080-b20b-11e8-944d-3adde64b69dd.png\" alt=\"image\" title=\"\">\n                </div>\n                <div class=\"image-caption\">image</div>\n            </figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fileName=<span class=\"string\">\"text.png\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//带.的格式</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> fileFormat=fileName.substring(fileName.lastIndexOf(<span class=\"string\">'.'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不带.的格式</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> fileFormat2=fileName.substring(fileName.lastIndexOf(<span class=\"string\">'.'</span>)+<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fileFormat,fileFormat2)</span><br></pre></td></tr></table></figure>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"https://user-images.githubusercontent.com/22697565/45154907-b8d2b080-b20b-11e8-944d-3adde64b69dd.png\" alt=\"image\" title=\"\">\n                </div>\n                <div class=\"image-caption\">image</div>\n            </figure>\n"},{"title":"reactjs中事件传参(关于event)","date":"2018-09-10T07:06:44.000Z","issues":115,"_content":"\n#### 问题描述\n我们在事件中通常需要获取控件的值，通常通过event.target.value的方式来取值，在绑定事件时，event参数也不需要传递，在方法中直接使用即可。\n但是，有些时候需要传入一些其他的参数，比如需要循环绑定一些输入框，在绑定onChange事件时，需要传入索引index和数据源的索引进行对应\n```jsx\nonHandleChange(index,event){\n    let val=event.target.value\n}\n//关键代码\nsource.map((item,index)=>{\n      return <input type=\"text\" value={item.name} \n      onChange={this.onHandleChange.bind(this,index)} />\n});\n```  \n\n#### 代码解释\n有的同学应该已经看出区别了，onHandleChange在声明时有两个参数，但在调用时却只传递了一个参数，这就是今天要讲的:\n\n> **在给方法传递新参数时，方法原有的参数会排在新参数之后**\n\n做过reactjs的同学都知道，event这个参数是不需要手动传递的，直接在方法中声明就可以使用，如下代码：\n```jsx\nonChangeHandle(event){\n      let val=event.target.value;\n}\n\nrender(){\n  return (<div>\n    <input type=\"text\" onChange={this.onChangeHandle.bind(this)} />\n</div>)\n}\n```\n\n#### 摘自\n> 作者：不将就人生\n链接：https://www.jianshu.com/p/1026d71d04d6\n來源：简书\n简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。\n","source":"_posts/reactjs中事件传参-关于event.md","raw":"---\ntitle: reactjs中事件传参(关于event)\ndate: 2018-09-10 15:06:44\ntags: [react]\nissues: 115\n---\n\n#### 问题描述\n我们在事件中通常需要获取控件的值，通常通过event.target.value的方式来取值，在绑定事件时，event参数也不需要传递，在方法中直接使用即可。\n但是，有些时候需要传入一些其他的参数，比如需要循环绑定一些输入框，在绑定onChange事件时，需要传入索引index和数据源的索引进行对应\n```jsx\nonHandleChange(index,event){\n    let val=event.target.value\n}\n//关键代码\nsource.map((item,index)=>{\n      return <input type=\"text\" value={item.name} \n      onChange={this.onHandleChange.bind(this,index)} />\n});\n```  \n\n#### 代码解释\n有的同学应该已经看出区别了，onHandleChange在声明时有两个参数，但在调用时却只传递了一个参数，这就是今天要讲的:\n\n> **在给方法传递新参数时，方法原有的参数会排在新参数之后**\n\n做过reactjs的同学都知道，event这个参数是不需要手动传递的，直接在方法中声明就可以使用，如下代码：\n```jsx\nonChangeHandle(event){\n      let val=event.target.value;\n}\n\nrender(){\n  return (<div>\n    <input type=\"text\" onChange={this.onChangeHandle.bind(this)} />\n</div>)\n}\n```\n\n#### 摘自\n> 作者：不将就人生\n链接：https://www.jianshu.com/p/1026d71d04d6\n來源：简书\n简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。\n","slug":"reactjs中事件传参-关于event","published":1,"updated":"2018-09-10T07:21:40.294Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlxep9g40009aga1m840w670","content":"<h4 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h4><p>我们在事件中通常需要获取控件的值，通常通过event.target.value的方式来取值，在绑定事件时，event参数也不需要传递，在方法中直接使用即可。<br>但是，有些时候需要传入一些其他的参数，比如需要循环绑定一些输入框，在绑定onChange事件时，需要传入索引index和数据源的索引进行对应<br><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onHandleChange(index,event)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> val=event.target.value</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//关键代码</span></span><br><span class=\"line\">source.map(<span class=\"function\">(<span class=\"params\">item,index</span>)=&gt;</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &lt;input type=\"text\" value=&#123;item.name&#125; </span><br><span class=\"line\">      onChange=&#123;this.onHandleChange.bind(this,index)&#125; /&gt;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\">#### 代码解释</span><br><span class=\"line\">有的同学应该已经看出区别了，onHandleChange在声明时有两个参数，但在调用时却只传递了一个参数，这就是今天要讲的:</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; **在给方法传递新参数时，方法原有的参数会排在新参数之后**</span><br><span class=\"line\"></span><br><span class=\"line\">做过reactjs的同学都知道，event这个参数是不需要手动传递的，直接在方法中声明就可以使用，如下代码：</span><br><span class=\"line\">```jsx</span><br><span class=\"line\">onChangeHandle(event)&#123;</span><br><span class=\"line\">      let val=event.target.value;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">render()&#123;</span><br><span class=\"line\">  return (&lt;div&gt;</span><br><span class=\"line\">    &lt;input type=\"text\" onChange=&#123;this.onChangeHandle.bind(this)&#125; /&gt;</span><br><span class=\"line\">&lt;/div&gt;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"摘自\"><a href=\"#摘自\" class=\"headerlink\" title=\"摘自\"></a>摘自</h4><blockquote>\n<p>作者：不将就人生<br>链接：<a href=\"https://www.jianshu.com/p/1026d71d04d6\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/1026d71d04d6</a><br>來源：简书<br>简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h4><p>我们在事件中通常需要获取控件的值，通常通过event.target.value的方式来取值，在绑定事件时，event参数也不需要传递，在方法中直接使用即可。<br>但是，有些时候需要传入一些其他的参数，比如需要循环绑定一些输入框，在绑定onChange事件时，需要传入索引index和数据源的索引进行对应<br><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onHandleChange(index,event)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> val=event.target.value</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//关键代码</span></span><br><span class=\"line\">source.map(<span class=\"function\">(<span class=\"params\">item,index</span>)=&gt;</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &lt;input type=\"text\" value=&#123;item.name&#125; </span><br><span class=\"line\">      onChange=&#123;this.onHandleChange.bind(this,index)&#125; /&gt;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\">#### 代码解释</span><br><span class=\"line\">有的同学应该已经看出区别了，onHandleChange在声明时有两个参数，但在调用时却只传递了一个参数，这就是今天要讲的:</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; **在给方法传递新参数时，方法原有的参数会排在新参数之后**</span><br><span class=\"line\"></span><br><span class=\"line\">做过reactjs的同学都知道，event这个参数是不需要手动传递的，直接在方法中声明就可以使用，如下代码：</span><br><span class=\"line\">```jsx</span><br><span class=\"line\">onChangeHandle(event)&#123;</span><br><span class=\"line\">      let val=event.target.value;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">render()&#123;</span><br><span class=\"line\">  return (&lt;div&gt;</span><br><span class=\"line\">    &lt;input type=\"text\" onChange=&#123;this.onChangeHandle.bind(this)&#125; /&gt;</span><br><span class=\"line\">&lt;/div&gt;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"摘自\"><a href=\"#摘自\" class=\"headerlink\" title=\"摘自\"></a>摘自</h4><blockquote>\n<p>作者：不将就人生<br>链接：<a href=\"https://www.jianshu.com/p/1026d71d04d6\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/1026d71d04d6</a><br>來源：简书<br>简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。</p>\n</blockquote>\n"},{"title":"Hello Hexo Blog","date":"2015-09-03T07:17:54.000Z","description":"本篇文章给大家分享的内容是代码详解React Js 微信分享封装，有着一定的参考价值，有需要的朋友可以参考一下 话不多说，直接上源代码：","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello Hexo Blog\ndate: 2015-09-03 15:17:54\ncategories: \"Hexo教程\" \ntags:\n     \ndescription: 本篇文章给大家分享的内容是代码详解React Js 微信分享封装，有着一定的参考价值，有需要的朋友可以参考一下 话不多说，直接上源代码：\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2018-09-07T07:57:44.205Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlxep9gc000daga1dxoas2n9","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"使用hexo搭建github.io博客","issues":113,"date":"2018-09-07T02:57:11.000Z","_content":"\n### Introduction\n> 回顾一下我三年搭建博客的历程，最初是选择wordpress，Wordpress全部由php编写，数组库采用MySQL。优点：用户只需要将Wordpress的源代码复制到网站根目录下，然后访问网站，之后的安装操作全部在浏览器上完成。即使不是软件行业的人，也可以在几分钟之内完成安装工作。甚至很多虚拟主机供应商都提供了Wordpress的一键式安装工具。用户连上传文件的步骤都省了。缺点：项目太臃肿了，Wordpress耗损CPU严重，不容易操作，运行稍慢。尤其是后期文章数目较多的时候，想要登陆下网站的管理后台，心态简直是抓狂的。loading了好久，有时候还会失败，发一篇文章也很费劲，索性就不维护了。\n后来在github网站上找到一个vue模板：[github地址](https://github.com/ye63/vue-blog-use-github-issues)和[demo预览](https://ye63.com/jy/)二次开发了一下，的确是实现了很多功能，也挺轻便的，样式也可以自定义，博客可以直接写在github的issue，很方便，用了三个月后才发现百度的搜索引擎居然只收录了首页，搜索引擎的基础爬虫的原理就是抓取你的url，然后获取你的html源代码并解析。 而你的页面通常用了vue等js的数据绑定机制来展示页面数据，爬虫获取到的html是你的模型页面而不是最终数据的渲染页面，所以说用js来渲染数据对seo并不友好。而且github api在国内访问速度也没有想象中那么快，可能是github的CDN被墙屏了。\n 使用github.io可以搭建一个自己的博客,把静态文件项目托管到github上,可以写博客,可以使用markdown语法,也可以展示作品.灵活性高.但是有较大的难度,但是这对于一个熟悉git操作的前端开发工程师来说，都不算什么的。重点是hexo和github.io的域名和服务器都是**免费**的。当然也可以选择用自己的服务器和域名。\n\n ### Quick Start\n #### 安装 node,git，注册好github账号\n (网站有很多教程，安装方法这里就不详细展开了，**注意:github账号用户名一定不能有大写.**)\n\n #### 安装hexo:\n ```\n npm install -g hexo\n ```\n \n#### 创建hexo文件夹:\ncmd窗口切换到对应的目录下,然后执行: `hexo init`\n也可以在 E:\\hexo 下右键,选择git bash,在窗口中执行`hexo init`\n自动安装了需要的文件.\n\n#### 安装依赖:\n继续执行: `npm install`\n\n#### 完成本地安装:\n\n继续在 `E:\\hexo` 下执行:  `hexo generate`\n\n继续执行: `hexo server`\n\n然后在打开浏览器 `localhost:4000` ,就可以看到,本地已经安装好了.\n\n#### 在github上创建博客仓库:\n![image](https://user-images.githubusercontent.com/22697565/45201116-7ca05e00-b2a6-11e8-8e6c-8658ee49dc8f.png)\n 跳转的后如下填写:(其中Repository name的格式是 '用户名'.github.io  ),然后点创建仓库，Repository name必须和用户名（Owner）一致，不能有大写字母\n![image](https://user-images.githubusercontent.com/22697565/45201238-1e27af80-b2a7-11e8-8eb4-ad31cfbaf6f6.png)\n![image](https://user-images.githubusercontent.com/22697565/45201369-a73ee680-b2a7-11e8-9c20-8a347e477f0b.png)\n#### 创建SSH keys\n\n##### 监测是否有已经存在的SSH keys:\n打开 `git bash` 终端(可以在  E:\\hexo 下右键打开,也可以直接在开始菜单里打开)\n\n执行:  `$ ls -al ~/.ssh `\n![image](https://user-images.githubusercontent.com/22697565/45201445-f7b64400-b2a7-11e8-91d2-704c587815a6.png)\n\n##### 如果没有的话,就生成一个SSH keys: 写自己的邮箱\n`$ ssh-keygen -t rsa -C \"your_email@example.com\" `\n\n然后会出现:\n```\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/Users/you/.ssh/id_rsa): \n```\n\n就是让你输入SSH keys要保存在哪里,一般不用改,就直接回车就好了.输入一个密码,这个密码后面会用到,所以要记住咯\n\n##### 保存SSH keys:\n创建成功后,他会提示你SSH keys保存在哪里:\n```\nYour identification has been saved in /Users/you/.ssh/id_rsa.\n\n# Your public key has been saved in /Users/you/.ssh/id_rsa.pub.\n\n# The key fingerprint is:\n\n# 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com\n```\n##### 找到SSH keys:\n根据上一步里告诉你的路径,找到保存SSH keys的地方,我的是在 C:\\Users\\2000104591\\.ssh\n\n其中 id_rsa.pub 就是SSH keys 如果为了防止以后找不到,可以把他们自己另存到其它地方\n\n#### 为github仓库添加SSH keys\n\n然后把创建的id_rsa.pub里的内容复制到Key里去,Title部分随便填. 点击'Add key'\n\n添加的过程中,还要再输入一次github的密码\n![image](https://user-images.githubusercontent.com/22697565/45201608-c0946280-b2a8-11e8-94f4-f091267ce8d7.png)\n\n#### 配置_config.yml文件并发布:\n\n在 `E:\\hexo`(文件根目录下) 下,有一个文件叫 _config.yml ,打开它,拉到最底下,做如下修改:　\n\n然后再执行:\n\n`hexo generate`\n\n`hexo deploy`\n\n然后访问: https://ye63.github.io/ (用户名改成自己的),就可以看到了.\n\n#### 快捷命令\n##### hexo 新建一篇文章给它添加分类和标签:\n```\nhexo new \"移动端限制input框只能输入数字\"\n```\n\n##### 通过mou编辑器打开：添加tags和categories\n```hexo \n---\ntitle: title #文章標題\ndate: 2016-06-01 23:47:44 #文章生成時間\ncategories: \"Hexo教程\" #文章分類目錄 可以省略\ntags: #文章标签 可以省略\n     - 标签1\n     - 标签2\ndescription: #你對本頁的描述 可以省略\n---\n```\n\n##### 发布\n```\nhexo clean && hexo g && hexo d\n```\n\n##### 创建新页面\n```\nhexo new page \"about\"\n```\n\n \n\n \n\n\n\n\n\n\n\n","source":"_posts/使用hexo搭建github-io博客.md","raw":"---\ntitle: 使用hexo搭建github.io博客\ncategories: \"Hexo教程\" #文章分類目錄 可以省略,\nissues: 113\ndate: 2018-09-07 10:57:11\ntags:\n---\n\n### Introduction\n> 回顾一下我三年搭建博客的历程，最初是选择wordpress，Wordpress全部由php编写，数组库采用MySQL。优点：用户只需要将Wordpress的源代码复制到网站根目录下，然后访问网站，之后的安装操作全部在浏览器上完成。即使不是软件行业的人，也可以在几分钟之内完成安装工作。甚至很多虚拟主机供应商都提供了Wordpress的一键式安装工具。用户连上传文件的步骤都省了。缺点：项目太臃肿了，Wordpress耗损CPU严重，不容易操作，运行稍慢。尤其是后期文章数目较多的时候，想要登陆下网站的管理后台，心态简直是抓狂的。loading了好久，有时候还会失败，发一篇文章也很费劲，索性就不维护了。\n后来在github网站上找到一个vue模板：[github地址](https://github.com/ye63/vue-blog-use-github-issues)和[demo预览](https://ye63.com/jy/)二次开发了一下，的确是实现了很多功能，也挺轻便的，样式也可以自定义，博客可以直接写在github的issue，很方便，用了三个月后才发现百度的搜索引擎居然只收录了首页，搜索引擎的基础爬虫的原理就是抓取你的url，然后获取你的html源代码并解析。 而你的页面通常用了vue等js的数据绑定机制来展示页面数据，爬虫获取到的html是你的模型页面而不是最终数据的渲染页面，所以说用js来渲染数据对seo并不友好。而且github api在国内访问速度也没有想象中那么快，可能是github的CDN被墙屏了。\n 使用github.io可以搭建一个自己的博客,把静态文件项目托管到github上,可以写博客,可以使用markdown语法,也可以展示作品.灵活性高.但是有较大的难度,但是这对于一个熟悉git操作的前端开发工程师来说，都不算什么的。重点是hexo和github.io的域名和服务器都是**免费**的。当然也可以选择用自己的服务器和域名。\n\n ### Quick Start\n #### 安装 node,git，注册好github账号\n (网站有很多教程，安装方法这里就不详细展开了，**注意:github账号用户名一定不能有大写.**)\n\n #### 安装hexo:\n ```\n npm install -g hexo\n ```\n \n#### 创建hexo文件夹:\ncmd窗口切换到对应的目录下,然后执行: `hexo init`\n也可以在 E:\\hexo 下右键,选择git bash,在窗口中执行`hexo init`\n自动安装了需要的文件.\n\n#### 安装依赖:\n继续执行: `npm install`\n\n#### 完成本地安装:\n\n继续在 `E:\\hexo` 下执行:  `hexo generate`\n\n继续执行: `hexo server`\n\n然后在打开浏览器 `localhost:4000` ,就可以看到,本地已经安装好了.\n\n#### 在github上创建博客仓库:\n![image](https://user-images.githubusercontent.com/22697565/45201116-7ca05e00-b2a6-11e8-8e6c-8658ee49dc8f.png)\n 跳转的后如下填写:(其中Repository name的格式是 '用户名'.github.io  ),然后点创建仓库，Repository name必须和用户名（Owner）一致，不能有大写字母\n![image](https://user-images.githubusercontent.com/22697565/45201238-1e27af80-b2a7-11e8-8eb4-ad31cfbaf6f6.png)\n![image](https://user-images.githubusercontent.com/22697565/45201369-a73ee680-b2a7-11e8-9c20-8a347e477f0b.png)\n#### 创建SSH keys\n\n##### 监测是否有已经存在的SSH keys:\n打开 `git bash` 终端(可以在  E:\\hexo 下右键打开,也可以直接在开始菜单里打开)\n\n执行:  `$ ls -al ~/.ssh `\n![image](https://user-images.githubusercontent.com/22697565/45201445-f7b64400-b2a7-11e8-91d2-704c587815a6.png)\n\n##### 如果没有的话,就生成一个SSH keys: 写自己的邮箱\n`$ ssh-keygen -t rsa -C \"your_email@example.com\" `\n\n然后会出现:\n```\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/Users/you/.ssh/id_rsa): \n```\n\n就是让你输入SSH keys要保存在哪里,一般不用改,就直接回车就好了.输入一个密码,这个密码后面会用到,所以要记住咯\n\n##### 保存SSH keys:\n创建成功后,他会提示你SSH keys保存在哪里:\n```\nYour identification has been saved in /Users/you/.ssh/id_rsa.\n\n# Your public key has been saved in /Users/you/.ssh/id_rsa.pub.\n\n# The key fingerprint is:\n\n# 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com\n```\n##### 找到SSH keys:\n根据上一步里告诉你的路径,找到保存SSH keys的地方,我的是在 C:\\Users\\2000104591\\.ssh\n\n其中 id_rsa.pub 就是SSH keys 如果为了防止以后找不到,可以把他们自己另存到其它地方\n\n#### 为github仓库添加SSH keys\n\n然后把创建的id_rsa.pub里的内容复制到Key里去,Title部分随便填. 点击'Add key'\n\n添加的过程中,还要再输入一次github的密码\n![image](https://user-images.githubusercontent.com/22697565/45201608-c0946280-b2a8-11e8-94f4-f091267ce8d7.png)\n\n#### 配置_config.yml文件并发布:\n\n在 `E:\\hexo`(文件根目录下) 下,有一个文件叫 _config.yml ,打开它,拉到最底下,做如下修改:　\n\n然后再执行:\n\n`hexo generate`\n\n`hexo deploy`\n\n然后访问: https://ye63.github.io/ (用户名改成自己的),就可以看到了.\n\n#### 快捷命令\n##### hexo 新建一篇文章给它添加分类和标签:\n```\nhexo new \"移动端限制input框只能输入数字\"\n```\n\n##### 通过mou编辑器打开：添加tags和categories\n```hexo \n---\ntitle: title #文章標題\ndate: 2016-06-01 23:47:44 #文章生成時間\ncategories: \"Hexo教程\" #文章分類目錄 可以省略\ntags: #文章标签 可以省略\n     - 标签1\n     - 标签2\ndescription: #你對本頁的描述 可以省略\n---\n```\n\n##### 发布\n```\nhexo clean && hexo g && hexo d\n```\n\n##### 创建新页面\n```\nhexo new page \"about\"\n```\n\n \n\n \n\n\n\n\n\n\n\n","slug":"使用hexo搭建github-io博客","published":1,"updated":"2018-09-07T06:43:19.420Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlxep9gi000eaga10nfs000m","content":"<h3 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h3><blockquote>\n<p>回顾一下我三年搭建博客的历程，最初是选择wordpress，Wordpress全部由php编写，数组库采用MySQL。优点：用户只需要将Wordpress的源代码复制到网站根目录下，然后访问网站，之后的安装操作全部在浏览器上完成。即使不是软件行业的人，也可以在几分钟之内完成安装工作。甚至很多虚拟主机供应商都提供了Wordpress的一键式安装工具。用户连上传文件的步骤都省了。缺点：项目太臃肿了，Wordpress耗损CPU严重，不容易操作，运行稍慢。尤其是后期文章数目较多的时候，想要登陆下网站的管理后台，心态简直是抓狂的。loading了好久，有时候还会失败，发一篇文章也很费劲，索性就不维护了。<br>后来在github网站上找到一个vue模板：<a href=\"https://github.com/ye63/vue-blog-use-github-issues\" target=\"_blank\" rel=\"noopener\">github地址</a>和<a href=\"https://ye63.com/jy/\" target=\"_blank\" rel=\"noopener\">demo预览</a>二次开发了一下，的确是实现了很多功能，也挺轻便的，样式也可以自定义，博客可以直接写在github的issue，很方便，用了三个月后才发现百度的搜索引擎居然只收录了首页，搜索引擎的基础爬虫的原理就是抓取你的url，然后获取你的html源代码并解析。 而你的页面通常用了vue等js的数据绑定机制来展示页面数据，爬虫获取到的html是你的模型页面而不是最终数据的渲染页面，所以说用js来渲染数据对seo并不友好。而且github api在国内访问速度也没有想象中那么快，可能是github的CDN被墙屏了。<br> 使用github.io可以搭建一个自己的博客,把静态文件项目托管到github上,可以写博客,可以使用markdown语法,也可以展示作品.灵活性高.但是有较大的难度,但是这对于一个熟悉git操作的前端开发工程师来说，都不算什么的。重点是hexo和github.io的域名和服务器都是<strong>免费</strong>的。当然也可以选择用自己的服务器和域名。</p>\n</blockquote>\n<h3 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h3><h4 id=\"安装-node-git，注册好github账号\"><a href=\"#安装-node-git，注册好github账号\" class=\"headerlink\" title=\"安装 node,git，注册好github账号\"></a>安装 node,git，注册好github账号</h4><p> (网站有很多教程，安装方法这里就不详细展开了，<strong>注意:github账号用户名一定不能有大写.</strong>)</p>\n<h4 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo:\"></a>安装hexo:</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure>\n<h4 id=\"创建hexo文件夹\"><a href=\"#创建hexo文件夹\" class=\"headerlink\" title=\"创建hexo文件夹:\"></a>创建hexo文件夹:</h4><p>cmd窗口切换到对应的目录下,然后执行: <code>hexo init</code><br>也可以在 E:\\hexo 下右键,选择git bash,在窗口中执行<code>hexo init</code><br>自动安装了需要的文件.</p>\n<h4 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖:\"></a>安装依赖:</h4><p>继续执行: <code>npm install</code></p>\n<h4 id=\"完成本地安装\"><a href=\"#完成本地安装\" class=\"headerlink\" title=\"完成本地安装:\"></a>完成本地安装:</h4><p>继续在 <code>E:\\hexo</code> 下执行:  <code>hexo generate</code></p>\n<p>继续执行: <code>hexo server</code></p>\n<p>然后在打开浏览器 <code>localhost:4000</code> ,就可以看到,本地已经安装好了.</p>\n<h4 id=\"在github上创建博客仓库\"><a href=\"#在github上创建博客仓库\" class=\"headerlink\" title=\"在github上创建博客仓库:\"></a>在github上创建博客仓库:</h4><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"https://user-images.githubusercontent.com/22697565/45201116-7ca05e00-b2a6-11e8-8e6c-8658ee49dc8f.png\" alt=\"image\" title=\"\">\n                </div>\n                <div class=\"image-caption\">image</div>\n            </figure>\n<p> 跳转的后如下填写:(其中Repository name的格式是 ‘用户名’.github.io  ),然后点创建仓库，Repository name必须和用户名（Owner）一致，不能有大写字母<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"https://user-images.githubusercontent.com/22697565/45201238-1e27af80-b2a7-11e8-8eb4-ad31cfbaf6f6.png\" alt=\"image\" title=\"\">\n                </div>\n                <div class=\"image-caption\">image</div>\n            </figure><br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"https://user-images.githubusercontent.com/22697565/45201369-a73ee680-b2a7-11e8-9c20-8a347e477f0b.png\" alt=\"image\" title=\"\">\n                </div>\n                <div class=\"image-caption\">image</div>\n            </figure></p>\n<h4 id=\"创建SSH-keys\"><a href=\"#创建SSH-keys\" class=\"headerlink\" title=\"创建SSH keys\"></a>创建SSH keys</h4><h5 id=\"监测是否有已经存在的SSH-keys\"><a href=\"#监测是否有已经存在的SSH-keys\" class=\"headerlink\" title=\"监测是否有已经存在的SSH keys:\"></a>监测是否有已经存在的SSH keys:</h5><p>打开 <code>git bash</code> 终端(可以在  E:\\hexo 下右键打开,也可以直接在开始菜单里打开)</p>\n<p>执行:  <code>$ ls -al ~/.ssh</code><br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"https://user-images.githubusercontent.com/22697565/45201445-f7b64400-b2a7-11e8-91d2-704c587815a6.png\" alt=\"image\" title=\"\">\n                </div>\n                <div class=\"image-caption\">image</div>\n            </figure></p>\n<h5 id=\"如果没有的话-就生成一个SSH-keys-写自己的邮箱\"><a href=\"#如果没有的话-就生成一个SSH-keys-写自己的邮箱\" class=\"headerlink\" title=\"如果没有的话,就生成一个SSH keys: 写自己的邮箱\"></a>如果没有的话,就生成一个SSH keys: 写自己的邮箱</h5><p><code>$ ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code></p>\n<p>然后会出现:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\">Enter file in which to save the key (/Users/you/.ssh/id_rsa):</span><br></pre></td></tr></table></figure></p>\n<p>就是让你输入SSH keys要保存在哪里,一般不用改,就直接回车就好了.输入一个密码,这个密码后面会用到,所以要记住咯</p>\n<h5 id=\"保存SSH-keys\"><a href=\"#保存SSH-keys\" class=\"headerlink\" title=\"保存SSH keys:\"></a>保存SSH keys:</h5><p>创建成功后,他会提示你SSH keys保存在哪里:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Your identification has been saved in /Users/you/.ssh/id_rsa.</span><br><span class=\"line\"></span><br><span class=\"line\"># Your public key has been saved in /Users/you/.ssh/id_rsa.pub.</span><br><span class=\"line\"></span><br><span class=\"line\"># The key fingerprint is:</span><br><span class=\"line\"></span><br><span class=\"line\"># 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"找到SSH-keys\"><a href=\"#找到SSH-keys\" class=\"headerlink\" title=\"找到SSH keys:\"></a>找到SSH keys:</h5><p>根据上一步里告诉你的路径,找到保存SSH keys的地方,我的是在 C:\\Users\\2000104591.ssh</p>\n<p>其中 id_rsa.pub 就是SSH keys 如果为了防止以后找不到,可以把他们自己另存到其它地方</p>\n<h4 id=\"为github仓库添加SSH-keys\"><a href=\"#为github仓库添加SSH-keys\" class=\"headerlink\" title=\"为github仓库添加SSH keys\"></a>为github仓库添加SSH keys</h4><p>然后把创建的id_rsa.pub里的内容复制到Key里去,Title部分随便填. 点击’Add key’</p>\n<p>添加的过程中,还要再输入一次github的密码<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"https://user-images.githubusercontent.com/22697565/45201608-c0946280-b2a8-11e8-94f4-f091267ce8d7.png\" alt=\"image\" title=\"\">\n                </div>\n                <div class=\"image-caption\">image</div>\n            </figure></p>\n<h4 id=\"配置-config-yml文件并发布\"><a href=\"#配置-config-yml文件并发布\" class=\"headerlink\" title=\"配置_config.yml文件并发布:\"></a>配置_config.yml文件并发布:</h4><p>在 <code>E:\\hexo</code>(文件根目录下) 下,有一个文件叫 _config.yml ,打开它,拉到最底下,做如下修改:　</p>\n<p>然后再执行:</p>\n<p><code>hexo generate</code></p>\n<p><code>hexo deploy</code></p>\n<p>然后访问: <a href=\"https://ye63.github.io/\">https://ye63.github.io/</a> (用户名改成自己的),就可以看到了.</p>\n<h4 id=\"快捷命令\"><a href=\"#快捷命令\" class=\"headerlink\" title=\"快捷命令\"></a>快捷命令</h4><h5 id=\"hexo-新建一篇文章给它添加分类和标签\"><a href=\"#hexo-新建一篇文章给它添加分类和标签\" class=\"headerlink\" title=\"hexo 新建一篇文章给它添加分类和标签:\"></a>hexo 新建一篇文章给它添加分类和标签:</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &quot;移动端限制input框只能输入数字&quot;</span><br></pre></td></tr></table></figure>\n<h5 id=\"通过mou编辑器打开：添加tags和categories\"><a href=\"#通过mou编辑器打开：添加tags和categories\" class=\"headerlink\" title=\"通过mou编辑器打开：添加tags和categories\"></a>通过mou编辑器打开：添加tags和categories</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: title #文章標題</span><br><span class=\"line\">date: 2016-06-01 23:47:44 #文章生成時間</span><br><span class=\"line\">categories: &quot;Hexo教程&quot; #文章分類目錄 可以省略</span><br><span class=\"line\">tags: #文章标签 可以省略</span><br><span class=\"line\">     - 标签1</span><br><span class=\"line\">     - 标签2</span><br><span class=\"line\">description: #你對本頁的描述 可以省略</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<h5 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<h5 id=\"创建新页面\"><a href=\"#创建新页面\" class=\"headerlink\" title=\"创建新页面\"></a>创建新页面</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page &quot;about&quot;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h3><blockquote>\n<p>回顾一下我三年搭建博客的历程，最初是选择wordpress，Wordpress全部由php编写，数组库采用MySQL。优点：用户只需要将Wordpress的源代码复制到网站根目录下，然后访问网站，之后的安装操作全部在浏览器上完成。即使不是软件行业的人，也可以在几分钟之内完成安装工作。甚至很多虚拟主机供应商都提供了Wordpress的一键式安装工具。用户连上传文件的步骤都省了。缺点：项目太臃肿了，Wordpress耗损CPU严重，不容易操作，运行稍慢。尤其是后期文章数目较多的时候，想要登陆下网站的管理后台，心态简直是抓狂的。loading了好久，有时候还会失败，发一篇文章也很费劲，索性就不维护了。<br>后来在github网站上找到一个vue模板：<a href=\"https://github.com/ye63/vue-blog-use-github-issues\" target=\"_blank\" rel=\"noopener\">github地址</a>和<a href=\"https://ye63.com/jy/\" target=\"_blank\" rel=\"noopener\">demo预览</a>二次开发了一下，的确是实现了很多功能，也挺轻便的，样式也可以自定义，博客可以直接写在github的issue，很方便，用了三个月后才发现百度的搜索引擎居然只收录了首页，搜索引擎的基础爬虫的原理就是抓取你的url，然后获取你的html源代码并解析。 而你的页面通常用了vue等js的数据绑定机制来展示页面数据，爬虫获取到的html是你的模型页面而不是最终数据的渲染页面，所以说用js来渲染数据对seo并不友好。而且github api在国内访问速度也没有想象中那么快，可能是github的CDN被墙屏了。<br> 使用github.io可以搭建一个自己的博客,把静态文件项目托管到github上,可以写博客,可以使用markdown语法,也可以展示作品.灵活性高.但是有较大的难度,但是这对于一个熟悉git操作的前端开发工程师来说，都不算什么的。重点是hexo和github.io的域名和服务器都是<strong>免费</strong>的。当然也可以选择用自己的服务器和域名。</p>\n</blockquote>\n<h3 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h3><h4 id=\"安装-node-git，注册好github账号\"><a href=\"#安装-node-git，注册好github账号\" class=\"headerlink\" title=\"安装 node,git，注册好github账号\"></a>安装 node,git，注册好github账号</h4><p> (网站有很多教程，安装方法这里就不详细展开了，<strong>注意:github账号用户名一定不能有大写.</strong>)</p>\n<h4 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo:\"></a>安装hexo:</h4> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure>\n<h4 id=\"创建hexo文件夹\"><a href=\"#创建hexo文件夹\" class=\"headerlink\" title=\"创建hexo文件夹:\"></a>创建hexo文件夹:</h4><p>cmd窗口切换到对应的目录下,然后执行: <code>hexo init</code><br>也可以在 E:\\hexo 下右键,选择git bash,在窗口中执行<code>hexo init</code><br>自动安装了需要的文件.</p>\n<h4 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖:\"></a>安装依赖:</h4><p>继续执行: <code>npm install</code></p>\n<h4 id=\"完成本地安装\"><a href=\"#完成本地安装\" class=\"headerlink\" title=\"完成本地安装:\"></a>完成本地安装:</h4><p>继续在 <code>E:\\hexo</code> 下执行:  <code>hexo generate</code></p>\n<p>继续执行: <code>hexo server</code></p>\n<p>然后在打开浏览器 <code>localhost:4000</code> ,就可以看到,本地已经安装好了.</p>\n<h4 id=\"在github上创建博客仓库\"><a href=\"#在github上创建博客仓库\" class=\"headerlink\" title=\"在github上创建博客仓库:\"></a>在github上创建博客仓库:</h4><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"https://user-images.githubusercontent.com/22697565/45201116-7ca05e00-b2a6-11e8-8e6c-8658ee49dc8f.png\" alt=\"image\" title=\"\">\n                </div>\n                <div class=\"image-caption\">image</div>\n            </figure>\n<p> 跳转的后如下填写:(其中Repository name的格式是 ‘用户名’.github.io  ),然后点创建仓库，Repository name必须和用户名（Owner）一致，不能有大写字母<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"https://user-images.githubusercontent.com/22697565/45201238-1e27af80-b2a7-11e8-8eb4-ad31cfbaf6f6.png\" alt=\"image\" title=\"\">\n                </div>\n                <div class=\"image-caption\">image</div>\n            </figure><br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"https://user-images.githubusercontent.com/22697565/45201369-a73ee680-b2a7-11e8-9c20-8a347e477f0b.png\" alt=\"image\" title=\"\">\n                </div>\n                <div class=\"image-caption\">image</div>\n            </figure></p>\n<h4 id=\"创建SSH-keys\"><a href=\"#创建SSH-keys\" class=\"headerlink\" title=\"创建SSH keys\"></a>创建SSH keys</h4><h5 id=\"监测是否有已经存在的SSH-keys\"><a href=\"#监测是否有已经存在的SSH-keys\" class=\"headerlink\" title=\"监测是否有已经存在的SSH keys:\"></a>监测是否有已经存在的SSH keys:</h5><p>打开 <code>git bash</code> 终端(可以在  E:\\hexo 下右键打开,也可以直接在开始菜单里打开)</p>\n<p>执行:  <code>$ ls -al ~/.ssh</code><br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"https://user-images.githubusercontent.com/22697565/45201445-f7b64400-b2a7-11e8-91d2-704c587815a6.png\" alt=\"image\" title=\"\">\n                </div>\n                <div class=\"image-caption\">image</div>\n            </figure></p>\n<h5 id=\"如果没有的话-就生成一个SSH-keys-写自己的邮箱\"><a href=\"#如果没有的话-就生成一个SSH-keys-写自己的邮箱\" class=\"headerlink\" title=\"如果没有的话,就生成一个SSH keys: 写自己的邮箱\"></a>如果没有的话,就生成一个SSH keys: 写自己的邮箱</h5><p><code>$ ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code></p>\n<p>然后会出现:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\">Enter file in which to save the key (/Users/you/.ssh/id_rsa):</span><br></pre></td></tr></table></figure></p>\n<p>就是让你输入SSH keys要保存在哪里,一般不用改,就直接回车就好了.输入一个密码,这个密码后面会用到,所以要记住咯</p>\n<h5 id=\"保存SSH-keys\"><a href=\"#保存SSH-keys\" class=\"headerlink\" title=\"保存SSH keys:\"></a>保存SSH keys:</h5><p>创建成功后,他会提示你SSH keys保存在哪里:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Your identification has been saved in /Users/you/.ssh/id_rsa.</span><br><span class=\"line\"></span><br><span class=\"line\"># Your public key has been saved in /Users/you/.ssh/id_rsa.pub.</span><br><span class=\"line\"></span><br><span class=\"line\"># The key fingerprint is:</span><br><span class=\"line\"></span><br><span class=\"line\"># 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"找到SSH-keys\"><a href=\"#找到SSH-keys\" class=\"headerlink\" title=\"找到SSH keys:\"></a>找到SSH keys:</h5><p>根据上一步里告诉你的路径,找到保存SSH keys的地方,我的是在 C:\\Users\\2000104591.ssh</p>\n<p>其中 id_rsa.pub 就是SSH keys 如果为了防止以后找不到,可以把他们自己另存到其它地方</p>\n<h4 id=\"为github仓库添加SSH-keys\"><a href=\"#为github仓库添加SSH-keys\" class=\"headerlink\" title=\"为github仓库添加SSH keys\"></a>为github仓库添加SSH keys</h4><p>然后把创建的id_rsa.pub里的内容复制到Key里去,Title部分随便填. 点击’Add key’</p>\n<p>添加的过程中,还要再输入一次github的密码<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"https://user-images.githubusercontent.com/22697565/45201608-c0946280-b2a8-11e8-94f4-f091267ce8d7.png\" alt=\"image\" title=\"\">\n                </div>\n                <div class=\"image-caption\">image</div>\n            </figure></p>\n<h4 id=\"配置-config-yml文件并发布\"><a href=\"#配置-config-yml文件并发布\" class=\"headerlink\" title=\"配置_config.yml文件并发布:\"></a>配置_config.yml文件并发布:</h4><p>在 <code>E:\\hexo</code>(文件根目录下) 下,有一个文件叫 _config.yml ,打开它,拉到最底下,做如下修改:　</p>\n<p>然后再执行:</p>\n<p><code>hexo generate</code></p>\n<p><code>hexo deploy</code></p>\n<p>然后访问: <a href=\"https://ye63.github.io/\">https://ye63.github.io/</a> (用户名改成自己的),就可以看到了.</p>\n<h4 id=\"快捷命令\"><a href=\"#快捷命令\" class=\"headerlink\" title=\"快捷命令\"></a>快捷命令</h4><h5 id=\"hexo-新建一篇文章给它添加分类和标签\"><a href=\"#hexo-新建一篇文章给它添加分类和标签\" class=\"headerlink\" title=\"hexo 新建一篇文章给它添加分类和标签:\"></a>hexo 新建一篇文章给它添加分类和标签:</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &quot;移动端限制input框只能输入数字&quot;</span><br></pre></td></tr></table></figure>\n<h5 id=\"通过mou编辑器打开：添加tags和categories\"><a href=\"#通过mou编辑器打开：添加tags和categories\" class=\"headerlink\" title=\"通过mou编辑器打开：添加tags和categories\"></a>通过mou编辑器打开：添加tags和categories</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: title #文章標題</span><br><span class=\"line\">date: 2016-06-01 23:47:44 #文章生成時間</span><br><span class=\"line\">categories: &quot;Hexo教程&quot; #文章分類目錄 可以省略</span><br><span class=\"line\">tags: #文章标签 可以省略</span><br><span class=\"line\">     - 标签1</span><br><span class=\"line\">     - 标签2</span><br><span class=\"line\">description: #你對本頁的描述 可以省略</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<h5 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>\n<h5 id=\"创建新页面\"><a href=\"#创建新页面\" class=\"headerlink\" title=\"创建新页面\"></a>创建新页面</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page &quot;about&quot;</span><br></pre></td></tr></table></figure>\n"},{"title":"合并数组的相同的key值，并且计算相同key值的个数","date":"2018-08-30T07:33:19.000Z","issues":108,"_content":"\n#### 需求：\n合并数组的相同的key值，并且计算相同key值的个数\n#### 场景：\n根据list数组的每一项的key值coupon_sn合并数组，并且计数\n#### js代码\n##### json数组：\n```json\nlet list = [{\n\t\"id\": 5899,\n\t\"is_use\": 0,\n\t\"use_time\": null,\n\t\"expired_time\": \"2018-12-31 00:00:00\",\n\t\"coupon\": {\n\t\t\"coupon_sn\": \"1\",\n\t\t\"name\": \"满减\",\n\t\t\"type\": 2,\n\t\t\"count\": 99993,\n\t\t\"receive_count\": 6,\n\t\t\"is_fare\": 0,\n\t\t\"available_money\": \"2000.00\",\n\t\t\"reduce_money\": \"100.00\",\n\t\t\"discount\": \"1.000\",\n\t\t\"receive_start_time\": \"2018-07-27 00:00:00\",\n\t\t\"receive_end_time\": \"2020-12-31 00:00:00\",\n\t\t\"info\": \"\",\n\t\t\"created_at\": \"2018-07-27 21:22:51\",\n\t\t\"restriction_description\": \"仅限非板材使用\"\n\t}\n}, {\n\t\"id\": 5899,\n\t\"is_use\": 0,\n\t\"use_time\": null,\n\t\"expired_time\": \"2018-12-31 00:00:00\",\n\t\"coupon\": {\n\t\t\"coupon_sn\": \"2\",\n\t\t\"name\": \"满减\",\n\t\t\"type\": 2,\n\t\t\"count\": 99993,\n\t\t\"receive_count\": 6,\n\t\t\"is_fare\": 0,\n\t\t\"available_money\": \"2000.00\",\n\t\t\"reduce_money\": \"100.00\",\n\t\t\"discount\": \"1.000\",\n\t\t\"receive_start_time\": \"2018-07-27 00:00:00\",\n\t\t\"receive_end_time\": \"2020-12-31 00:00:00\",\n\t\t\"info\": \"\",\n\t\t\"created_at\": \"2018-07-27 21:22:51\",\n\t\t\"restriction_description\": \"仅限非板材使用\"\n\t}\n}, {\n\t\"id\": 5899,\n\t\"is_use\": 0,\n\t\"use_time\": null,\n\t\"expired_time\": \"2018-12-31 00:00:00\",\n\t\"coupon\": {\n\t\t\"coupon_sn\": \"2\",\n\t\t\"name\": \"满减\",\n\t\t\"type\": 2,\n\t\t\"count\": 99993,\n\t\t\"receive_count\": 6,\n\t\t\"is_fare\": 0,\n\t\t\"available_money\": \"2000.00\",\n\t\t\"reduce_money\": \"100.00\",\n\t\t\"discount\": \"1.000\",\n\t\t\"receive_start_time\": \"2018-07-27 00:00:00\",\n\t\t\"receive_end_time\": \"2020-12-31 00:00:00\",\n\t\t\"info\": \"\",\n\t\t\"created_at\": \"2018-07-27 21:22:51\",\n\t\t\"restriction_description\": \"仅限非板材使用\"\n\t}\n}]\n```\n\n##### js代码\n```js\n let hash = {\n\tcoupon: {},\n}, i = 0, res = [];\nlist.forEach(function(item ) {\n\tlet coupon_sn = item.coupon.coupon_sn;\n\tif (hash[coupon_sn]) {\n\t\tif (!res[hash[coupon_sn] - 1].count) {\n\t\t\tres[hash[coupon_sn] - 1].count = 1\n\t\t}\n\t\tres[hash[coupon_sn] - 1].count += 1\n\t} else {\n\t\thash[coupon_sn] = ++i && res.push({\n\t\t\t\"count\": 1,\n\t\t\t\"id\": item.id,\n\t\t\t\"is_use\": item.is_use,\n\t\t\t\"use_time\": item.use_time,\n\t\t\t\"expired_time\": item.expired_time,\n\t\t\t\"coupon\": item.coupon\n\t\t})\n\t}\n});\nconsole.log(res);\n```\n\n","source":"_posts/合并数组的相同的key值，并且计算相同key值的个数.md","raw":"---\ntitle: 合并数组的相同的key值，并且计算相同key值的个数\ndate: 2018-08-30 15:33:19\ncategories: \"前端\" \ntags: [js代码片段]\nissues: 108\n---\n\n#### 需求：\n合并数组的相同的key值，并且计算相同key值的个数\n#### 场景：\n根据list数组的每一项的key值coupon_sn合并数组，并且计数\n#### js代码\n##### json数组：\n```json\nlet list = [{\n\t\"id\": 5899,\n\t\"is_use\": 0,\n\t\"use_time\": null,\n\t\"expired_time\": \"2018-12-31 00:00:00\",\n\t\"coupon\": {\n\t\t\"coupon_sn\": \"1\",\n\t\t\"name\": \"满减\",\n\t\t\"type\": 2,\n\t\t\"count\": 99993,\n\t\t\"receive_count\": 6,\n\t\t\"is_fare\": 0,\n\t\t\"available_money\": \"2000.00\",\n\t\t\"reduce_money\": \"100.00\",\n\t\t\"discount\": \"1.000\",\n\t\t\"receive_start_time\": \"2018-07-27 00:00:00\",\n\t\t\"receive_end_time\": \"2020-12-31 00:00:00\",\n\t\t\"info\": \"\",\n\t\t\"created_at\": \"2018-07-27 21:22:51\",\n\t\t\"restriction_description\": \"仅限非板材使用\"\n\t}\n}, {\n\t\"id\": 5899,\n\t\"is_use\": 0,\n\t\"use_time\": null,\n\t\"expired_time\": \"2018-12-31 00:00:00\",\n\t\"coupon\": {\n\t\t\"coupon_sn\": \"2\",\n\t\t\"name\": \"满减\",\n\t\t\"type\": 2,\n\t\t\"count\": 99993,\n\t\t\"receive_count\": 6,\n\t\t\"is_fare\": 0,\n\t\t\"available_money\": \"2000.00\",\n\t\t\"reduce_money\": \"100.00\",\n\t\t\"discount\": \"1.000\",\n\t\t\"receive_start_time\": \"2018-07-27 00:00:00\",\n\t\t\"receive_end_time\": \"2020-12-31 00:00:00\",\n\t\t\"info\": \"\",\n\t\t\"created_at\": \"2018-07-27 21:22:51\",\n\t\t\"restriction_description\": \"仅限非板材使用\"\n\t}\n}, {\n\t\"id\": 5899,\n\t\"is_use\": 0,\n\t\"use_time\": null,\n\t\"expired_time\": \"2018-12-31 00:00:00\",\n\t\"coupon\": {\n\t\t\"coupon_sn\": \"2\",\n\t\t\"name\": \"满减\",\n\t\t\"type\": 2,\n\t\t\"count\": 99993,\n\t\t\"receive_count\": 6,\n\t\t\"is_fare\": 0,\n\t\t\"available_money\": \"2000.00\",\n\t\t\"reduce_money\": \"100.00\",\n\t\t\"discount\": \"1.000\",\n\t\t\"receive_start_time\": \"2018-07-27 00:00:00\",\n\t\t\"receive_end_time\": \"2020-12-31 00:00:00\",\n\t\t\"info\": \"\",\n\t\t\"created_at\": \"2018-07-27 21:22:51\",\n\t\t\"restriction_description\": \"仅限非板材使用\"\n\t}\n}]\n```\n\n##### js代码\n```js\n let hash = {\n\tcoupon: {},\n}, i = 0, res = [];\nlist.forEach(function(item ) {\n\tlet coupon_sn = item.coupon.coupon_sn;\n\tif (hash[coupon_sn]) {\n\t\tif (!res[hash[coupon_sn] - 1].count) {\n\t\t\tres[hash[coupon_sn] - 1].count = 1\n\t\t}\n\t\tres[hash[coupon_sn] - 1].count += 1\n\t} else {\n\t\thash[coupon_sn] = ++i && res.push({\n\t\t\t\"count\": 1,\n\t\t\t\"id\": item.id,\n\t\t\t\"is_use\": item.is_use,\n\t\t\t\"use_time\": item.use_time,\n\t\t\t\"expired_time\": item.expired_time,\n\t\t\t\"coupon\": item.coupon\n\t\t})\n\t}\n});\nconsole.log(res);\n```\n\n","slug":"合并数组的相同的key值，并且计算相同key值的个数","published":1,"updated":"2018-09-10T02:35:26.390Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlxep9h3000iaga1f6et2q41","content":"<h4 id=\"需求：\"><a href=\"#需求：\" class=\"headerlink\" title=\"需求：\"></a>需求：</h4><p>合并数组的相同的key值，并且计算相同key值的个数</p>\n<h4 id=\"场景：\"><a href=\"#场景：\" class=\"headerlink\" title=\"场景：\"></a>场景：</h4><p>根据list数组的每一项的key值coupon_sn合并数组，并且计数</p>\n<h4 id=\"js代码\"><a href=\"#js代码\" class=\"headerlink\" title=\"js代码\"></a>js代码</h4><h5 id=\"json数组：\"><a href=\"#json数组：\" class=\"headerlink\" title=\"json数组：\"></a>json数组：</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let list = [&#123;</span><br><span class=\"line\">\t\"id\": 5899,</span><br><span class=\"line\">\t\"is_use\": 0,</span><br><span class=\"line\">\t\"use_time\": null,</span><br><span class=\"line\">\t\"expired_time\": \"2018-12-31 00:00:00\",</span><br><span class=\"line\">\t\"coupon\": &#123;</span><br><span class=\"line\">\t\t\"coupon_sn\": \"1\",</span><br><span class=\"line\">\t\t\"name\": \"满减\",</span><br><span class=\"line\">\t\t\"type\": 2,</span><br><span class=\"line\">\t\t\"count\": 99993,</span><br><span class=\"line\">\t\t\"receive_count\": 6,</span><br><span class=\"line\">\t\t\"is_fare\": 0,</span><br><span class=\"line\">\t\t\"available_money\": \"2000.00\",</span><br><span class=\"line\">\t\t\"reduce_money\": \"100.00\",</span><br><span class=\"line\">\t\t\"discount\": \"1.000\",</span><br><span class=\"line\">\t\t\"receive_start_time\": \"2018-07-27 00:00:00\",</span><br><span class=\"line\">\t\t\"receive_end_time\": \"2020-12-31 00:00:00\",</span><br><span class=\"line\">\t\t\"info\": \"\",</span><br><span class=\"line\">\t\t\"created_at\": \"2018-07-27 21:22:51\",</span><br><span class=\"line\">\t\t\"restriction_description\": \"仅限非板材使用\"</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;, &#123;</span><br><span class=\"line\">\t\"id\": 5899,</span><br><span class=\"line\">\t\"is_use\": 0,</span><br><span class=\"line\">\t\"use_time\": null,</span><br><span class=\"line\">\t\"expired_time\": \"2018-12-31 00:00:00\",</span><br><span class=\"line\">\t\"coupon\": &#123;</span><br><span class=\"line\">\t\t\"coupon_sn\": \"2\",</span><br><span class=\"line\">\t\t\"name\": \"满减\",</span><br><span class=\"line\">\t\t\"type\": 2,</span><br><span class=\"line\">\t\t\"count\": 99993,</span><br><span class=\"line\">\t\t\"receive_count\": 6,</span><br><span class=\"line\">\t\t\"is_fare\": 0,</span><br><span class=\"line\">\t\t\"available_money\": \"2000.00\",</span><br><span class=\"line\">\t\t\"reduce_money\": \"100.00\",</span><br><span class=\"line\">\t\t\"discount\": \"1.000\",</span><br><span class=\"line\">\t\t\"receive_start_time\": \"2018-07-27 00:00:00\",</span><br><span class=\"line\">\t\t\"receive_end_time\": \"2020-12-31 00:00:00\",</span><br><span class=\"line\">\t\t\"info\": \"\",</span><br><span class=\"line\">\t\t\"created_at\": \"2018-07-27 21:22:51\",</span><br><span class=\"line\">\t\t\"restriction_description\": \"仅限非板材使用\"</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;, &#123;</span><br><span class=\"line\">\t\"id\": 5899,</span><br><span class=\"line\">\t\"is_use\": 0,</span><br><span class=\"line\">\t\"use_time\": null,</span><br><span class=\"line\">\t\"expired_time\": \"2018-12-31 00:00:00\",</span><br><span class=\"line\">\t\"coupon\": &#123;</span><br><span class=\"line\">\t\t\"coupon_sn\": \"2\",</span><br><span class=\"line\">\t\t\"name\": \"满减\",</span><br><span class=\"line\">\t\t\"type\": 2,</span><br><span class=\"line\">\t\t\"count\": 99993,</span><br><span class=\"line\">\t\t\"receive_count\": 6,</span><br><span class=\"line\">\t\t\"is_fare\": 0,</span><br><span class=\"line\">\t\t\"available_money\": \"2000.00\",</span><br><span class=\"line\">\t\t\"reduce_money\": \"100.00\",</span><br><span class=\"line\">\t\t\"discount\": \"1.000\",</span><br><span class=\"line\">\t\t\"receive_start_time\": \"2018-07-27 00:00:00\",</span><br><span class=\"line\">\t\t\"receive_end_time\": \"2020-12-31 00:00:00\",</span><br><span class=\"line\">\t\t\"info\": \"\",</span><br><span class=\"line\">\t\t\"created_at\": \"2018-07-27 21:22:51\",</span><br><span class=\"line\">\t\t\"restriction_description\": \"仅限非板材使用\"</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure>\n<h5 id=\"js代码-1\"><a href=\"#js代码-1\" class=\"headerlink\" title=\"js代码\"></a>js代码</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">let</span> hash = &#123;</span><br><span class=\"line\">\tcoupon: &#123;&#125;,</span><br><span class=\"line\">&#125;, i = <span class=\"number\">0</span>, res = [];</span><br><span class=\"line\">list.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item </span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> coupon_sn = item.coupon.coupon_sn;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hash[coupon_sn]) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!res[hash[coupon_sn] - <span class=\"number\">1</span>].count) &#123;</span><br><span class=\"line\">\t\t\tres[hash[coupon_sn] - <span class=\"number\">1</span>].count = <span class=\"number\">1</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tres[hash[coupon_sn] - <span class=\"number\">1</span>].count += <span class=\"number\">1</span></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\thash[coupon_sn] = ++i &amp;&amp; res.push(&#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"count\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"id\"</span>: item.id,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"is_use\"</span>: item.is_use,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"use_time\"</span>: item.use_time,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"expired_time\"</span>: item.expired_time,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"coupon\"</span>: item.coupon</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"需求：\"><a href=\"#需求：\" class=\"headerlink\" title=\"需求：\"></a>需求：</h4><p>合并数组的相同的key值，并且计算相同key值的个数</p>\n<h4 id=\"场景：\"><a href=\"#场景：\" class=\"headerlink\" title=\"场景：\"></a>场景：</h4><p>根据list数组的每一项的key值coupon_sn合并数组，并且计数</p>\n<h4 id=\"js代码\"><a href=\"#js代码\" class=\"headerlink\" title=\"js代码\"></a>js代码</h4><h5 id=\"json数组：\"><a href=\"#json数组：\" class=\"headerlink\" title=\"json数组：\"></a>json数组：</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let list = [&#123;</span><br><span class=\"line\">\t\"id\": 5899,</span><br><span class=\"line\">\t\"is_use\": 0,</span><br><span class=\"line\">\t\"use_time\": null,</span><br><span class=\"line\">\t\"expired_time\": \"2018-12-31 00:00:00\",</span><br><span class=\"line\">\t\"coupon\": &#123;</span><br><span class=\"line\">\t\t\"coupon_sn\": \"1\",</span><br><span class=\"line\">\t\t\"name\": \"满减\",</span><br><span class=\"line\">\t\t\"type\": 2,</span><br><span class=\"line\">\t\t\"count\": 99993,</span><br><span class=\"line\">\t\t\"receive_count\": 6,</span><br><span class=\"line\">\t\t\"is_fare\": 0,</span><br><span class=\"line\">\t\t\"available_money\": \"2000.00\",</span><br><span class=\"line\">\t\t\"reduce_money\": \"100.00\",</span><br><span class=\"line\">\t\t\"discount\": \"1.000\",</span><br><span class=\"line\">\t\t\"receive_start_time\": \"2018-07-27 00:00:00\",</span><br><span class=\"line\">\t\t\"receive_end_time\": \"2020-12-31 00:00:00\",</span><br><span class=\"line\">\t\t\"info\": \"\",</span><br><span class=\"line\">\t\t\"created_at\": \"2018-07-27 21:22:51\",</span><br><span class=\"line\">\t\t\"restriction_description\": \"仅限非板材使用\"</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;, &#123;</span><br><span class=\"line\">\t\"id\": 5899,</span><br><span class=\"line\">\t\"is_use\": 0,</span><br><span class=\"line\">\t\"use_time\": null,</span><br><span class=\"line\">\t\"expired_time\": \"2018-12-31 00:00:00\",</span><br><span class=\"line\">\t\"coupon\": &#123;</span><br><span class=\"line\">\t\t\"coupon_sn\": \"2\",</span><br><span class=\"line\">\t\t\"name\": \"满减\",</span><br><span class=\"line\">\t\t\"type\": 2,</span><br><span class=\"line\">\t\t\"count\": 99993,</span><br><span class=\"line\">\t\t\"receive_count\": 6,</span><br><span class=\"line\">\t\t\"is_fare\": 0,</span><br><span class=\"line\">\t\t\"available_money\": \"2000.00\",</span><br><span class=\"line\">\t\t\"reduce_money\": \"100.00\",</span><br><span class=\"line\">\t\t\"discount\": \"1.000\",</span><br><span class=\"line\">\t\t\"receive_start_time\": \"2018-07-27 00:00:00\",</span><br><span class=\"line\">\t\t\"receive_end_time\": \"2020-12-31 00:00:00\",</span><br><span class=\"line\">\t\t\"info\": \"\",</span><br><span class=\"line\">\t\t\"created_at\": \"2018-07-27 21:22:51\",</span><br><span class=\"line\">\t\t\"restriction_description\": \"仅限非板材使用\"</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;, &#123;</span><br><span class=\"line\">\t\"id\": 5899,</span><br><span class=\"line\">\t\"is_use\": 0,</span><br><span class=\"line\">\t\"use_time\": null,</span><br><span class=\"line\">\t\"expired_time\": \"2018-12-31 00:00:00\",</span><br><span class=\"line\">\t\"coupon\": &#123;</span><br><span class=\"line\">\t\t\"coupon_sn\": \"2\",</span><br><span class=\"line\">\t\t\"name\": \"满减\",</span><br><span class=\"line\">\t\t\"type\": 2,</span><br><span class=\"line\">\t\t\"count\": 99993,</span><br><span class=\"line\">\t\t\"receive_count\": 6,</span><br><span class=\"line\">\t\t\"is_fare\": 0,</span><br><span class=\"line\">\t\t\"available_money\": \"2000.00\",</span><br><span class=\"line\">\t\t\"reduce_money\": \"100.00\",</span><br><span class=\"line\">\t\t\"discount\": \"1.000\",</span><br><span class=\"line\">\t\t\"receive_start_time\": \"2018-07-27 00:00:00\",</span><br><span class=\"line\">\t\t\"receive_end_time\": \"2020-12-31 00:00:00\",</span><br><span class=\"line\">\t\t\"info\": \"\",</span><br><span class=\"line\">\t\t\"created_at\": \"2018-07-27 21:22:51\",</span><br><span class=\"line\">\t\t\"restriction_description\": \"仅限非板材使用\"</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure>\n<h5 id=\"js代码-1\"><a href=\"#js代码-1\" class=\"headerlink\" title=\"js代码\"></a>js代码</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">let</span> hash = &#123;</span><br><span class=\"line\">\tcoupon: &#123;&#125;,</span><br><span class=\"line\">&#125;, i = <span class=\"number\">0</span>, res = [];</span><br><span class=\"line\">list.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item </span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> coupon_sn = item.coupon.coupon_sn;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (hash[coupon_sn]) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!res[hash[coupon_sn] - <span class=\"number\">1</span>].count) &#123;</span><br><span class=\"line\">\t\t\tres[hash[coupon_sn] - <span class=\"number\">1</span>].count = <span class=\"number\">1</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tres[hash[coupon_sn] - <span class=\"number\">1</span>].count += <span class=\"number\">1</span></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\thash[coupon_sn] = ++i &amp;&amp; res.push(&#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"count\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"id\"</span>: item.id,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"is_use\"</span>: item.is_use,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"use_time\"</span>: item.use_time,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"expired_time\"</span>: item.expired_time,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"coupon\"</span>: item.coupon</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res);</span><br></pre></td></tr></table></figure>\n"},{"title":"错误码：events.js:183 throw er; // Unhandled 'error' event—解决办法","date":"2018-08-30T14:48:30.000Z","issues":109,"_content":"\n#### 控制台报错：\n```\nHash: 78f0873c3eb47a64bfae\nVersion: webpack 1.14.0\nTime: 16ms\nwebpack: Compiled successfully.\nevents.js:183\n      throw er; // Unhandled 'error' event\n      ^\n\nError: listen EADDRINUSE 127.0.0.1:8080\n    at Object._errnoException (util.js:1022:11)\n    at _exceptionWithHostPort (util.js:1044:20)\n    at Server.setupListenHandle [as _listen2] (net.js:1367:14)\n    at listenInCluster (net.js:1408:12)\n    at GetAddrInfoReqWrap.doListen [as callback] (net.js:1517:7)\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:97:10)\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! webpack-demos@1.0.0 dev: `webpack-dev-server --devtool eval --progress --colors`\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the webpack-demos@1.0.0 dev script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     C:\\Users\\qian\\AppData\\Roaming\\npm-cache\\_logs\\2018-08-30T14_46_37_546Z-debug.log\n```\n\n#### 错误原因： \n端口号被占用\n\n\n#### 解决方案 \n1.Win+R,cmd查询使用的端口号是否被占用：\nnetstat  -aon|findstr  \"8080\"\n按回车显示占用8080端口对应的程序的PID号；\n2.根据PID号找到对应的程序：继续输入命令：\ntasklist|findstr \"15008\"\n按回车后显示出占用该端口的程序；\n3.按快捷键“Ctrl+Shift+Esc”调出Windows任务管理器，根据PID/\n程序对应名称结束该程序进程即可。","source":"_posts/错误码：events-js-183-throw-er-Unhandled-error-event—解决办法.md","raw":"---\ntitle: '错误码：events.js:183 throw er; // Unhandled ''error'' event—解决办法'\ndate: 2018-08-30 22:48:30\ntags: \n    - npm\nissues: 109\n---\n\n#### 控制台报错：\n```\nHash: 78f0873c3eb47a64bfae\nVersion: webpack 1.14.0\nTime: 16ms\nwebpack: Compiled successfully.\nevents.js:183\n      throw er; // Unhandled 'error' event\n      ^\n\nError: listen EADDRINUSE 127.0.0.1:8080\n    at Object._errnoException (util.js:1022:11)\n    at _exceptionWithHostPort (util.js:1044:20)\n    at Server.setupListenHandle [as _listen2] (net.js:1367:14)\n    at listenInCluster (net.js:1408:12)\n    at GetAddrInfoReqWrap.doListen [as callback] (net.js:1517:7)\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:97:10)\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! webpack-demos@1.0.0 dev: `webpack-dev-server --devtool eval --progress --colors`\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the webpack-demos@1.0.0 dev script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     C:\\Users\\qian\\AppData\\Roaming\\npm-cache\\_logs\\2018-08-30T14_46_37_546Z-debug.log\n```\n\n#### 错误原因： \n端口号被占用\n\n\n#### 解决方案 \n1.Win+R,cmd查询使用的端口号是否被占用：\nnetstat  -aon|findstr  \"8080\"\n按回车显示占用8080端口对应的程序的PID号；\n2.根据PID号找到对应的程序：继续输入命令：\ntasklist|findstr \"15008\"\n按回车后显示出占用该端口的程序；\n3.按快捷键“Ctrl+Shift+Esc”调出Windows任务管理器，根据PID/\n程序对应名称结束该程序进程即可。","slug":"错误码：events-js-183-throw-er-Unhandled-error-event—解决办法","published":1,"updated":"2018-09-10T02:46:31.706Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlxep9h8000kaga1a2r1ag97","content":"<h4 id=\"控制台报错：\"><a href=\"#控制台报错：\" class=\"headerlink\" title=\"控制台报错：\"></a>控制台报错：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hash: 78f0873c3eb47a64bfae</span><br><span class=\"line\">Version: webpack 1.14.0</span><br><span class=\"line\">Time: 16ms</span><br><span class=\"line\">webpack: Compiled successfully.</span><br><span class=\"line\">events.js:183</span><br><span class=\"line\">      throw er; // Unhandled &apos;error&apos; event</span><br><span class=\"line\">      ^</span><br><span class=\"line\"></span><br><span class=\"line\">Error: listen EADDRINUSE 127.0.0.1:8080</span><br><span class=\"line\">    at Object._errnoException (util.js:1022:11)</span><br><span class=\"line\">    at _exceptionWithHostPort (util.js:1044:20)</span><br><span class=\"line\">    at Server.setupListenHandle [as _listen2] (net.js:1367:14)</span><br><span class=\"line\">    at listenInCluster (net.js:1408:12)</span><br><span class=\"line\">    at GetAddrInfoReqWrap.doListen [as callback] (net.js:1517:7)</span><br><span class=\"line\">    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:97:10)</span><br><span class=\"line\">npm ERR! code ELIFECYCLE</span><br><span class=\"line\">npm ERR! errno 1</span><br><span class=\"line\">npm ERR! webpack-demos@1.0.0 dev: `webpack-dev-server --devtool eval --progress --colors`</span><br><span class=\"line\">npm ERR! Exit status 1</span><br><span class=\"line\">npm ERR!</span><br><span class=\"line\">npm ERR! Failed at the webpack-demos@1.0.0 dev script.</span><br><span class=\"line\">npm ERR! This is probably not a problem with npm. There is likely additional logging output above.</span><br><span class=\"line\"></span><br><span class=\"line\">npm ERR! A complete log of this run can be found in:</span><br><span class=\"line\">npm ERR!     C:\\Users\\qian\\AppData\\Roaming\\npm-cache\\_logs\\2018-08-30T14_46_37_546Z-debug.log</span><br></pre></td></tr></table></figure>\n<h4 id=\"错误原因：\"><a href=\"#错误原因：\" class=\"headerlink\" title=\"错误原因：\"></a>错误原因：</h4><p>端口号被占用</p>\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><p>1.Win+R,cmd查询使用的端口号是否被占用：<br>netstat  -aon|findstr  “8080”<br>按回车显示占用8080端口对应的程序的PID号；<br>2.根据PID号找到对应的程序：继续输入命令：<br>tasklist|findstr “15008”<br>按回车后显示出占用该端口的程序；<br>3.按快捷键“Ctrl+Shift+Esc”调出Windows任务管理器，根据PID/<br>程序对应名称结束该程序进程即可。</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"控制台报错：\"><a href=\"#控制台报错：\" class=\"headerlink\" title=\"控制台报错：\"></a>控制台报错：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hash: 78f0873c3eb47a64bfae</span><br><span class=\"line\">Version: webpack 1.14.0</span><br><span class=\"line\">Time: 16ms</span><br><span class=\"line\">webpack: Compiled successfully.</span><br><span class=\"line\">events.js:183</span><br><span class=\"line\">      throw er; // Unhandled &apos;error&apos; event</span><br><span class=\"line\">      ^</span><br><span class=\"line\"></span><br><span class=\"line\">Error: listen EADDRINUSE 127.0.0.1:8080</span><br><span class=\"line\">    at Object._errnoException (util.js:1022:11)</span><br><span class=\"line\">    at _exceptionWithHostPort (util.js:1044:20)</span><br><span class=\"line\">    at Server.setupListenHandle [as _listen2] (net.js:1367:14)</span><br><span class=\"line\">    at listenInCluster (net.js:1408:12)</span><br><span class=\"line\">    at GetAddrInfoReqWrap.doListen [as callback] (net.js:1517:7)</span><br><span class=\"line\">    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:97:10)</span><br><span class=\"line\">npm ERR! code ELIFECYCLE</span><br><span class=\"line\">npm ERR! errno 1</span><br><span class=\"line\">npm ERR! webpack-demos@1.0.0 dev: `webpack-dev-server --devtool eval --progress --colors`</span><br><span class=\"line\">npm ERR! Exit status 1</span><br><span class=\"line\">npm ERR!</span><br><span class=\"line\">npm ERR! Failed at the webpack-demos@1.0.0 dev script.</span><br><span class=\"line\">npm ERR! This is probably not a problem with npm. There is likely additional logging output above.</span><br><span class=\"line\"></span><br><span class=\"line\">npm ERR! A complete log of this run can be found in:</span><br><span class=\"line\">npm ERR!     C:\\Users\\qian\\AppData\\Roaming\\npm-cache\\_logs\\2018-08-30T14_46_37_546Z-debug.log</span><br></pre></td></tr></table></figure>\n<h4 id=\"错误原因：\"><a href=\"#错误原因：\" class=\"headerlink\" title=\"错误原因：\"></a>错误原因：</h4><p>端口号被占用</p>\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><p>1.Win+R,cmd查询使用的端口号是否被占用：<br>netstat  -aon|findstr  “8080”<br>按回车显示占用8080端口对应的程序的PID号；<br>2.根据PID号找到对应的程序：继续输入命令：<br>tasklist|findstr “15008”<br>按回车后显示出占用该端口的程序；<br>3.按快捷键“Ctrl+Shift+Esc”调出Windows任务管理器，根据PID/<br>程序对应名称结束该程序进程即可。</p>\n"},{"title":"移动端限制input框只能输入数字","date":"2018-09-03T08:56:58.000Z","issues":111,"description":"在安卓端设置input类型为number，可限制键盘只输入数字，在ios端，要加入pattern验证输入字段的模式，才能限制数字输入","_content":"\nhtml5 中，input 的 type 属性规定 input 元素的类型。\n```html\n<input type=\"value\">\n```\n\n有很多选项，详细可以参考[HTML 5 type 属性](http://www.w3school.com.cn/html5/att_input_type.asp)\n\n但是在移动端，还要区分是安卓用户，还是ios用户，所以这样写：\n\n```html\n<input class=\"num_input\" type='number' pattern=\"[0-9]*\"/>\n```\n\n在安卓端设置input类型为number，可限制键盘只输入数字，在ios端，要加入pattern验证输入字段的模式，才能限制数字输入。\n\n另： `autofocus=\"autofocus\"`可以自动对焦。\n","source":"_posts/移动端限制input框只能输入数字.md","raw":"---\ntitle: 移动端限制input框只能输入数字\ndate: 2018-09-03 16:56:58\ncategories: \"前端\" \nissues: 111\ntags: \n     - html5\ndescription: 在安卓端设置input类型为number，可限制键盘只输入数字，在ios端，要加入pattern验证输入字段的模式，才能限制数字输入\n---\n\nhtml5 中，input 的 type 属性规定 input 元素的类型。\n```html\n<input type=\"value\">\n```\n\n有很多选项，详细可以参考[HTML 5 type 属性](http://www.w3school.com.cn/html5/att_input_type.asp)\n\n但是在移动端，还要区分是安卓用户，还是ios用户，所以这样写：\n\n```html\n<input class=\"num_input\" type='number' pattern=\"[0-9]*\"/>\n```\n\n在安卓端设置input类型为number，可限制键盘只输入数字，在ios端，要加入pattern验证输入字段的模式，才能限制数字输入。\n\n另： `autofocus=\"autofocus\"`可以自动对焦。\n","slug":"移动端限制input框只能输入数字","published":1,"updated":"2018-09-07T07:59:12.151Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlxep9hg000oaga1ljfz134a","content":"<p>html5 中，input 的 type 属性规定 input 元素的类型。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"value\"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>有很多选项，详细可以参考<a href=\"http://www.w3school.com.cn/html5/att_input_type.asp\" target=\"_blank\" rel=\"noopener\">HTML 5 type 属性</a></p>\n<p>但是在移动端，还要区分是安卓用户，还是ios用户，所以这样写：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">\"num_input\"</span> <span class=\"attr\">type</span>=<span class=\"string\">'number'</span> <span class=\"attr\">pattern</span>=<span class=\"string\">\"[0-9]*\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在安卓端设置input类型为number，可限制键盘只输入数字，在ios端，要加入pattern验证输入字段的模式，才能限制数字输入。</p>\n<p>另： <code>autofocus=&quot;autofocus&quot;</code>可以自动对焦。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>html5 中，input 的 type 属性规定 input 元素的类型。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"value\"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>有很多选项，详细可以参考<a href=\"http://www.w3school.com.cn/html5/att_input_type.asp\" target=\"_blank\" rel=\"noopener\">HTML 5 type 属性</a></p>\n<p>但是在移动端，还要区分是安卓用户，还是ios用户，所以这样写：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">\"num_input\"</span> <span class=\"attr\">type</span>=<span class=\"string\">'number'</span> <span class=\"attr\">pattern</span>=<span class=\"string\">\"[0-9]*\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在安卓端设置input类型为number，可限制键盘只输入数字，在ios端，要加入pattern验证输入字段的模式，才能限制数字输入。</p>\n<p>另： <code>autofocus=&quot;autofocus&quot;</code>可以自动对焦。</p>\n"},{"title":"怎么把数组倒置，又不影响原来数组，reverse不行","date":"2018-08-18T15:33:00.000Z","issues":105,"_content":"\n### 情景：\n怎么把数组倒置，又不影响原来数组，reverse不行，会把原数组也给反过来。\n```js\nvar arr = [\"1\",\"2\",\"3\",\"4\"];\nvar bbb = arr.reverse()\nconsole.log(arr); //[\"4\", \"3\", \"2\", \"1\"]\nconsole.log(bbb); //[\"4\", \"3\", \"2\", \"1\"]\n```\n\n直接改的话bbb和arr指向是同一个数组对象。reverse改变的是数组对象，a指向它，所以改变了，要改变就要让其指向不同\n\n### 解决方案\n```js\nvar arr = [\"1\",\"2\",\"3\",\"4\"];\n//列举4个解决方案\nvar bbb = [...arr].reverse() //方法1\nvar bbb = [].concat(arr).reverse()  //方法2\nvar bbb = Object.assign([],arr).reverse()//方法3\nvar bbb = arr.slice().reverse()//方法4\nconsole.log(arr); \nconsole.log(bbb); \n```\n\n ES6语法很方便~","source":"_posts/怎么把数组倒置，又不影响原来数组，reverse不行.md","raw":"---\ntitle: 怎么把数组倒置，又不影响原来数组，reverse不行\ndate: 2018-08-18 23:33\ntags: [js代码片段]\nissues: 105\n---\n\n### 情景：\n怎么把数组倒置，又不影响原来数组，reverse不行，会把原数组也给反过来。\n```js\nvar arr = [\"1\",\"2\",\"3\",\"4\"];\nvar bbb = arr.reverse()\nconsole.log(arr); //[\"4\", \"3\", \"2\", \"1\"]\nconsole.log(bbb); //[\"4\", \"3\", \"2\", \"1\"]\n```\n\n直接改的话bbb和arr指向是同一个数组对象。reverse改变的是数组对象，a指向它，所以改变了，要改变就要让其指向不同\n\n### 解决方案\n```js\nvar arr = [\"1\",\"2\",\"3\",\"4\"];\n//列举4个解决方案\nvar bbb = [...arr].reverse() //方法1\nvar bbb = [].concat(arr).reverse()  //方法2\nvar bbb = Object.assign([],arr).reverse()//方法3\nvar bbb = arr.slice().reverse()//方法4\nconsole.log(arr); \nconsole.log(bbb); \n```\n\n ES6语法很方便~","slug":"怎么把数组倒置，又不影响原来数组，reverse不行","published":1,"updated":"2018-09-10T06:32:00.399Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlxep9hk000qaga1beanrdt3","content":"<h3 id=\"情景：\"><a href=\"#情景：\" class=\"headerlink\" title=\"情景：\"></a>情景：</h3><p>怎么把数组倒置，又不影响原来数组，reverse不行，会把原数组也给反过来。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">\"1\"</span>,<span class=\"string\">\"2\"</span>,<span class=\"string\">\"3\"</span>,<span class=\"string\">\"4\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> bbb = arr.reverse()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">//[\"4\", \"3\", \"2\", \"1\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(bbb); <span class=\"comment\">//[\"4\", \"3\", \"2\", \"1\"]</span></span><br></pre></td></tr></table></figure></p>\n<p>直接改的话bbb和arr指向是同一个数组对象。reverse改变的是数组对象，a指向它，所以改变了，要改变就要让其指向不同</p>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">\"1\"</span>,<span class=\"string\">\"2\"</span>,<span class=\"string\">\"3\"</span>,<span class=\"string\">\"4\"</span>];</span><br><span class=\"line\"><span class=\"comment\">//列举4个解决方案</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bbb = [...arr].reverse() <span class=\"comment\">//方法1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bbb = [].concat(arr).reverse()  <span class=\"comment\">//方法2</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bbb = <span class=\"built_in\">Object</span>.assign([],arr).reverse()<span class=\"comment\">//方法3</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bbb = arr.slice().reverse()<span class=\"comment\">//方法4</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); </span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(bbb);</span><br></pre></td></tr></table></figure>\n<p> ES6语法很方便~</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"情景：\"><a href=\"#情景：\" class=\"headerlink\" title=\"情景：\"></a>情景：</h3><p>怎么把数组倒置，又不影响原来数组，reverse不行，会把原数组也给反过来。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">\"1\"</span>,<span class=\"string\">\"2\"</span>,<span class=\"string\">\"3\"</span>,<span class=\"string\">\"4\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> bbb = arr.reverse()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">//[\"4\", \"3\", \"2\", \"1\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(bbb); <span class=\"comment\">//[\"4\", \"3\", \"2\", \"1\"]</span></span><br></pre></td></tr></table></figure></p>\n<p>直接改的话bbb和arr指向是同一个数组对象。reverse改变的是数组对象，a指向它，所以改变了，要改变就要让其指向不同</p>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">\"1\"</span>,<span class=\"string\">\"2\"</span>,<span class=\"string\">\"3\"</span>,<span class=\"string\">\"4\"</span>];</span><br><span class=\"line\"><span class=\"comment\">//列举4个解决方案</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bbb = [...arr].reverse() <span class=\"comment\">//方法1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bbb = [].concat(arr).reverse()  <span class=\"comment\">//方法2</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bbb = <span class=\"built_in\">Object</span>.assign([],arr).reverse()<span class=\"comment\">//方法3</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bbb = arr.slice().reverse()<span class=\"comment\">//方法4</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); </span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(bbb);</span><br></pre></td></tr></table></figure>\n<p> ES6语法很方便~</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjlxep9ev0000aga16ioc2k0v","category_id":"cjlxep9fk0004aga143qxil76","_id":"cjlxep9gl000faga1q9fbxdbd"},{"post_id":"cjlxep9fa0002aga1cicf896a","category_id":"cjlxep9g9000aaga1ebhs4pnd","_id":"cjlxep9hc000maga1t1denzfu"},{"post_id":"cjlxep9h3000iaga1f6et2q41","category_id":"cjlxep9g9000aaga1ebhs4pnd","_id":"cjlxep9hm000raga1zdyso4fb"},{"post_id":"cjlxep9fr0006aga17801psii","category_id":"cjlxep9g9000aaga1ebhs4pnd","_id":"cjlxep9hp000uaga1xhtjk94f"},{"post_id":"cjlxep9hg000oaga1ljfz134a","category_id":"cjlxep9g9000aaga1ebhs4pnd","_id":"cjlxep9hq000waga1vqvtoor3"},{"post_id":"cjlxep9fz0008aga1xgfky4zb","category_id":"cjlxep9g9000aaga1ebhs4pnd","_id":"cjlxep9ht000zaga1qh8y43jf"},{"post_id":"cjlxep9gc000daga1dxoas2n9","category_id":"cjlxep9hn000saga1c5u36apt","_id":"cjlxep9hx0012aga193uc7yzc"},{"post_id":"cjlxep9gi000eaga10nfs000m","category_id":"cjlxep9hn000saga1c5u36apt","_id":"cjlxep9i00015aga1vwhacstu"}],"PostTag":[{"post_id":"cjlxep9ev0000aga16ioc2k0v","tag_id":"cjlxep9fp0005aga1wl7e52ii","_id":"cjlxep9gc000caga1yredwnrt"},{"post_id":"cjlxep9fa0002aga1cicf896a","tag_id":"cjlxep9ga000baga1evbrig2b","_id":"cjlxep9h6000jaga1mbgr1naw"},{"post_id":"cjlxep9fr0006aga17801psii","tag_id":"cjlxep9gn000haga17f8cbunx","_id":"cjlxep9hi000paga1mkv8b9a8"},{"post_id":"cjlxep9fz0008aga1xgfky4zb","tag_id":"cjlxep9hd000naga1jsvtnkxz","_id":"cjlxep9hp000vaga18e7opa6l"},{"post_id":"cjlxep9hk000qaga1beanrdt3","tag_id":"cjlxep9hd000naga1jsvtnkxz","_id":"cjlxep9hs000yaga11e7ttr7c"},{"post_id":"cjlxep9g40009aga1m840w670","tag_id":"cjlxep9ho000taga1zj4r42i1","_id":"cjlxep9hw0011aga1u01vs3zd"},{"post_id":"cjlxep9h3000iaga1f6et2q41","tag_id":"cjlxep9hd000naga1jsvtnkxz","_id":"cjlxep9i00014aga1b4gy5iha"},{"post_id":"cjlxep9h8000kaga1a2r1ag97","tag_id":"cjlxep9hx0013aga1uqgn68mq","_id":"cjlxep9i30017aga1vkliyw50"},{"post_id":"cjlxep9hg000oaga1ljfz134a","tag_id":"cjlxep9i10016aga15ge60cz9","_id":"cjlxep9i50018aga1rhc7rkb7"}],"Tag":[{"name":"优质文章分享","_id":"cjlxep9fp0005aga1wl7e52ii"},{"name":"node","_id":"cjlxep9ga000baga1evbrig2b"},{"name":"React","_id":"cjlxep9gn000haga17f8cbunx"},{"name":"js代码片段","_id":"cjlxep9hd000naga1jsvtnkxz"},{"name":"react","_id":"cjlxep9ho000taga1zj4r42i1"},{"name":"npm","_id":"cjlxep9hx0013aga1uqgn68mq"},{"name":"html5","_id":"cjlxep9i10016aga15ge60cz9"}]}}
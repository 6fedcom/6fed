<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>前端迷 (front-end fan)</title>
  
  <subtitle>frank，前端开发爱好者，沉迷前端，无法自拔,欢迎一切技术交流（不局限于前端），邮箱fanqianweb@gmail.com</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ru23.com/"/>
  <updated>2018-11-09T07:29:49.512Z</updated>
  <id>https://ru23.com/</id>
  
  <author>
    <name>frank</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>save-dev 和--save的区别</title>
    <link href="https://ru23.com/note/3c8059e3.html"/>
    <id>https://ru23.com/note/3c8059e3.html</id>
    <published>2018-11-09T07:29:08.000Z</published>
    <updated>2018-11-09T07:29:49.512Z</updated>
    
    <content type="html"><![CDATA[<p>–save 会把依赖包名称添加到 package.json 文件 dependencies 键下，</p><p>devDependencies 下列出的模块，是我们<strong>开发</strong>时用的，比如 我们安装 js的压缩包gulp-uglify 时我们采用的是 “npm install –save-dev gulp-uglify ” 命令安装，因为我们在发布后用不到它，而只是在我们开发才用到它</p><p>–save-dev 则添加到 package.json 文件 devDependencies 键</p><p>dependencies 下的模块，则是我们<strong>发布后</strong>还需要依赖的模块，譬如像jQuery库或者Angular框架类似的，我们在开发完后后肯定还要依赖它们，否则就运行不了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;–save 会把依赖包名称添加到 package.json 文件 dependencies 键下，&lt;/p&gt;
&lt;p&gt;devDependencies 下列出的模块，是我们&lt;strong&gt;开发&lt;/strong&gt;时用的，比如 我们安装 js的压缩包gulp-uglify 时我们采用
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
  </entry>
  
  <entry>
    <title>vue组件之间传值</title>
    <link href="https://ru23.com/note/8b0c3b50.html"/>
    <id>https://ru23.com/note/8b0c3b50.html</id>
    <published>2018-11-09T07:25:13.000Z</published>
    <updated>2018-11-09T07:29:49.518Z</updated>
    
    <content type="html"><![CDATA[<p>vue2.0组件之间的传值</p><p>“down”—&gt;指的是下的意思，即父组件向子组件传值，用props；“up”—&gt;指的是上的意思，即子组件想父组件传值，用emit。</p><h3 id="1-子组件向父组件的传值："><a href="#1-子组件向父组件的传值：" class="headerlink" title="1.子组件向父组件的传值："></a>1.子组件向父组件的传值：</h3><p><em>Child.vue</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;child&quot;&gt;</span><br><span class="line">    &lt;h1&gt;子组件&lt;/h1&gt;</span><br><span class="line">    &lt;button v-on:click=&quot;childToParent&quot;&gt;想父组件传值&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default&#123;</span><br><span class="line">    name: &apos;child&apos;,</span><br><span class="line">    data()&#123;</span><br><span class="line">      return &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      childToParent()&#123;</span><br><span class="line">        this.$emit(&quot;childToParentMsg&quot;, &quot;子组件向父组件传值&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p><em>parent.vue</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;parent&quot;&gt;</span><br><span class="line">    &lt;h1&gt;父组件&lt;/h1&gt;</span><br><span class="line">    &lt;Child v-on:childToParentMsg=&quot;showChildToParentMsg&quot; &gt;&lt;/Child&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import Child from &apos;./child/Child.vue&apos;</span><br><span class="line">  export default&#123;</span><br><span class="line">      name:&quot;parent&quot;,</span><br><span class="line">    data()&#123;</span><br><span class="line">      return &#123;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      showChildToParentMsg:function(data)&#123;</span><br><span class="line">        alert(&quot;父组件显示信息：&quot;+data)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;Child&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h3 id="2-父组件向子组件传值"><a href="#2-父组件向子组件传值" class="headerlink" title="2.父组件向子组件传值"></a>2.父组件向子组件传值</h3><p><em>parent.vue</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;parent&quot;&gt;</span><br><span class="line">    &lt;h1&gt;父组件&lt;/h1&gt;</span><br><span class="line">    &lt;Child v-bind:parentToChild=&quot;parentMsg&quot;&gt;&lt;/Child&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import Child from &apos;./child/Child.vue&apos;</span><br><span class="line">  export default&#123;</span><br><span class="line">     name:&quot;parent&quot;,</span><br><span class="line">    data()&#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        parentMsg:&apos;父组件向子组件传值&apos;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;Child&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><em>child.vue</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;child&quot;&gt;</span><br><span class="line">    &lt;h1&gt;子组件&lt;/h1&gt;</span><br><span class="line">    &lt;span&gt;子组件显示信息：&#123;&#123;parentToChild&#125;&#125;&lt;/span&gt;&lt;br&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default&#123;</span><br><span class="line">    name: &apos;child&apos;,</span><br><span class="line">    data()&#123;</span><br><span class="line">      return &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    props:[&quot;parentToChild&quot;]</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="3-采用eventBus-js传值—兄弟组件间的传值"><a href="#3-采用eventBus-js传值—兄弟组件间的传值" class="headerlink" title="3.采用eventBus.js传值—兄弟组件间的传值"></a>3.采用eventBus.js传值—兄弟组件间的传值</h3><p><em>eventBus.js</em><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'Vue'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vue()</span><br></pre></td></tr></table></figure></p><p><em>App.vue</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;secondChild&gt;&lt;/secondChild&gt;</span><br><span class="line">    &lt;firstChild&gt;&lt;/firstChild&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import FirstChild from &apos;./components/FirstChild&apos;</span><br><span class="line">import SecondChild from &apos;./components/SecondChild&apos;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;app&apos;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    FirstChild,</span><br><span class="line">    SecondChild,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p><em>FirstChild.vue</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;firstChild&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; placeholder=&quot;请输入文字&quot; v-model=&quot;message&quot;&gt;</span><br><span class="line">    &lt;button @click=&quot;showMessage&quot;&gt;向组件传值&lt;/button&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;span&gt;&#123;&#123;message&#125;&#125;&lt;/span&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import bus from &apos;../assets/eventBus&apos;;</span><br><span class="line">  export default&#123;</span><br><span class="line">    name: &apos;firstChild&apos;,</span><br><span class="line">    data () &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        message: &apos;你好&apos;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      showMessage () &#123;</span><br><span class="line">       alert(this.message)</span><br><span class="line">        bus.$emit(&apos;userDefinedEvent&apos;, this.message);//传值</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p><em>SecondChild.vue</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div id=&quot;SecondChild&quot;&gt;</span><br><span class="line">        &lt;h1&gt;&#123;&#123;message&#125;&#125;&lt;/h1&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import bus from &apos;../assets/eventBus&apos;;</span><br><span class="line">    export default&#123;</span><br><span class="line">        name:&apos;SecondChild&apos;,</span><br><span class="line">        data()&#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                message: &apos;&apos;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        mounted()&#123;</span><br><span class="line">            var self = this;</span><br><span class="line">            bus.$on(&apos;userDefinedEvent&apos;,function(message)&#123;</span><br><span class="line">                self.message = message;//接值</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;vue2.0组件之间的传值&lt;/p&gt;
&lt;p&gt;“down”—&amp;gt;指的是下的意思，即父组件向子组件传值，用props；“up”—&amp;gt;指的是上的意思，即子组件想父组件传值，用emit。&lt;/p&gt;
&lt;h3 id=&quot;1-子组件向父组件的传值：&quot;&gt;&lt;a href=&quot;#1-子组件向父
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="vue" scheme="https://ru23.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>$nextTick的作用</title>
    <link href="https://ru23.com/note/891492f1.html"/>
    <id>https://ru23.com/note/891492f1.html</id>
    <published>2018-11-09T07:23:02.000Z</published>
    <updated>2018-11-09T07:29:49.509Z</updated>
    
    <content type="html"><![CDATA[<p>请看如下一段代码：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    list: []</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.get()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    get: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.$http.get(<span class="string">'/api/article'</span>).then(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.list = res.data.data.list</span><br><span class="line">        <span class="comment">// ref  list 引用了ul元素，我想把第一个li颜色变为红色</span></span><br><span class="line">        <span class="keyword">this</span>.$refs.list.getElementsByTagName(<span class="string">'li'</span>)[<span class="number">0</span>].style.color = <span class="string">'red'</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>在获取到数据后赋值给数据模型中list属性，然后想引用ul元素找到第一个li把它的颜色变为红色，但是事实上，这个要报错了，我们知道，在执行这句话时，ul下面并没有li，也就是说刚刚进行的赋值操作，当前并没有引起视图层的更新。因此，在这样的情况下，vue给我们提供了$nextTick方法，如果我们想对未来更新后的视图进行操作，我们只需要把要执行的函数传递给this.$nextTick方法，vue就会给我们做这个工作。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> that.$nextTick(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.$http.get(<span class="string">"/api/article"</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">this</span>.list = res.data.data.list;</span><br><span class="line">            <span class="comment">// ref  list 引用了ul元素，我想把第一个li颜色变为红色</span></span><br><span class="line">             <span class="keyword">this</span>.$refs.list.getElementsByTagName(<span class="string">"li"</span>)[<span class="number">0</span>].style.color =<span class="string">"red"</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>  这就是一个this.$nextTick的实现，其中利用了优雅降序的巧妙手法，使代码尽可能优化。而且还提供了promise的写法，虽然我们不经常用，但是有总比没有好。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;请看如下一段代码：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;b
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="vue" scheme="https://ru23.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>html5 Drop 事件详解（摘自w3school）</title>
    <link href="https://ru23.com/note/40559693.html"/>
    <id>https://ru23.com/note/40559693.html</id>
    <published>2018-11-09T07:22:12.000Z</published>
    <updated>2018-11-10T01:15:54.530Z</updated>
    
    <content type="html"><![CDATA[<h3 id="设置元素为可拖放"><a href="#设置元素为可拖放" class="headerlink" title="设置元素为可拖放"></a>设置元素为可拖放</h3><p>首先，为了使元素可拖动，把 draggable 属性设置为 true ：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">draggable</span>=<span class="string">"true"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="拖动什么-ondragstart-和-setData"><a href="#拖动什么-ondragstart-和-setData" class="headerlink" title="拖动什么 - ondragstart 和 setData()"></a>拖动什么 - ondragstart 和 setData()</h3><p>然后，规定当元素被拖动时，会发生什么。<br>在上面的例子中，ondragstart 属性调用了一个函数，drag(event)，它规定了被拖动的数据。<br>dataTransfer.setData() 方法设置被拖数据的数据类型和值：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drag</span>(<span class="params">ev</span>) </span>&#123;</span><br><span class="line">ev.dataTransfer.setData(<span class="string">"Text"</span>, ev.target.id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在这个例子中，数据类型是 “Text”，值是可拖动元素的 id (“drag1”)。</p><h3 id="放到何处-ondragover"><a href="#放到何处-ondragover" class="headerlink" title="放到何处 - ondragover"></a>放到何处 - ondragover</h3><p>ondragover 事件规定在何处放置被拖动的数据。<br>默认地，无法将数据/元素放置到其他元素中。如果需要设置允许放置，我们必须阻止对元素的默认处理方式。<br>这要通过调用 ondragover 事件的 event.preventDefault() 方法：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">event.preventDefault()</span><br></pre></td></tr></table></figure></p><h3 id="进行放置-ondrop"><a href="#进行放置-ondrop" class="headerlink" title="进行放置 - ondrop"></a>进行放置 - ondrop</h3><p>当放置被拖数据时，会发生 drop 事件。<br>在上面的例子中，ondrop 属性调用了一个函数，drop(event)：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drop</span>(<span class="params">ev</span>) </span>&#123;</span><br><span class="line">ev.preventDefault();</span><br><span class="line"><span class="keyword">var</span> data = ev.dataTransfer.getData(<span class="string">"Text"</span>);</span><br><span class="line">ev.target.appendChild(<span class="built_in">document</span>.getElementById(data));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>代码解释：</strong></p><ol><li>调用 preventDefault() 来避免浏览器对数据的默认处理（drop 事件的默认行为是以链接形式打开）</li><li>通过 dataTransfer.getData(“Text”) 方法获得被拖的数据。该方法将返回在 setData() 方法中设置为相同类型的任何数据。</li><li>被拖数据是被拖元素的 id (“drag1”)</li><li>把被拖元素追加到放置元素（目标元素）中</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;设置元素为可拖放&quot;&gt;&lt;a href=&quot;#设置元素为可拖放&quot; class=&quot;headerlink&quot; title=&quot;设置元素为可拖放&quot;&gt;&lt;/a&gt;设置元素为可拖放&lt;/h3&gt;&lt;p&gt;首先，为了使元素可拖动，把 draggable 属性设置为 true ：&lt;br&gt;&lt;figur
      
    
    </summary>
    
    
      <category term="html5" scheme="https://ru23.com/tags/html5/"/>
    
  </entry>
  
  <entry>
    <title>vue.js 兄弟组件传值</title>
    <link href="https://ru23.com/note/83060485.html"/>
    <id>https://ru23.com/note/83060485.html</id>
    <published>2018-11-09T07:20:45.000Z</published>
    <updated>2018-11-09T07:29:49.514Z</updated>
    
    <content type="html"><![CDATA[<p>1、兄弟之间传递数据需要借助于事件车，通过事件车的方式传递数据</p><p>2、创建一个Vue的实例，让各个兄弟共用同一个事件机制。</p><p>3、传递数据方，通过一个事件触发bus.$emit(方法名，传递的数据)。</p><p>4、接收数据方，通过mounted(){}触发bus.$on(方法名，function(接收数据的参数){用该组件的数据接收传递过来的数据})，此时函数中的this已经发生了改变，可以使用箭头函数。</p><p>源码：</p><p>我们可以创建一个单独的js文件<strong>eventVue.js,</strong>内容如下<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vue</span><br></pre></td></tr></table></figure></p><p>假如父组件如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">     &lt;components-a&gt;&lt;/components-a&gt;</span><br><span class="line">     &lt;components-b&gt;&lt;/components-b&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure></p><p><strong>组件a</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">      &lt;div class=&quot;components-a&quot;&gt;</span><br><span class="line">           &lt;button @click=&quot;abtn&quot;&gt;A按钮&lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import eventVue from &apos;../../js/event.js&apos;</span><br><span class="line">export default &#123;</span><br><span class="line">    ...</span><br><span class="line">      methods:&#123;</span><br><span class="line">           abtn:function()&#123;</span><br><span class="line">                   eventVue .$emit(&quot;myFun&quot;,&quot;组件A的值&quot;)   //$emit这个方法会触发一个事件</span><br><span class="line">           &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p><strong>组件b</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">     &lt;div class=&quot;components-a&quot;&gt;</span><br><span class="line">         &lt;div&gt;&#123;&#123;btext&#125;&#125;&lt;/div&gt;</span><br><span class="line">     &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import eventVue from &apos;../../js/event.js&apos;</span><br><span class="line">export default &#123;</span><br><span class="line">    ....</span><br><span class="line">   created:function()&#123;</span><br><span class="line">       this.bbtn();</span><br><span class="line">   &#125;,</span><br><span class="line">   methods:&#123;</span><br><span class="line">       bbtn:function()&#123;</span><br><span class="line">            eventVue .$on(&quot;myFun&quot;,(message)=&gt;&#123;   //这里最好用箭头函数，不然this指向有问题</span><br><span class="line">                 this.btext = message      </span><br><span class="line">            &#125;)</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、兄弟之间传递数据需要借助于事件车，通过事件车的方式传递数据&lt;/p&gt;
&lt;p&gt;2、创建一个Vue的实例，让各个兄弟共用同一个事件机制。&lt;/p&gt;
&lt;p&gt;3、传递数据方，通过一个事件触发bus.$emit(方法名，传递的数据)。&lt;/p&gt;
&lt;p&gt;4、接收数据方，通过mounted
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="vue" scheme="https://ru23.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>韦博英语教师端vue踩坑记录（2）</title>
    <link href="https://ru23.com/note/a9e5fae8.html"/>
    <id>https://ru23.com/note/a9e5fae8.html</id>
    <published>2018-11-09T07:12:15.000Z</published>
    <updated>2018-11-09T07:29:49.530Z</updated>
    
    <content type="html"><![CDATA[<h3 id="vue项目在nginx中部署"><a href="#vue项目在nginx中部署" class="headerlink" title="vue项目在nginx中部署"></a>vue项目在nginx中部署</h3><p><strong>nginx的配置文件：</strong><br>添加如下server<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 7070;</span><br><span class="line">server_name localhost;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_page 500 502 503 504 / 50x.html;</span><br><span class="line">location = /50x.html &#123;</span><br><span class="line">        root html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        root /data / xytest / project / zkview - ui / dist;</span><br><span class="line">index index.html;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">try_files $uri $uri / @router;</span><br><span class="line">index index.html;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">location@router &#123;</span><br><span class="line">rewrite ^ . * $ / index.html last;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>添加完成后热加载nginx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx - s reload</span><br></pre></td></tr></table></figure></p><p>nginx如何正确配置部署在子目录的vue项目（History模式）<br><strong>Q1：Vue项目用Webpack打包后放到服务器上，但访问是404页面？</strong><br>原因是vue的项目为单页应用，路由找不到所致。所以要在nginx服务器配置对所有的路径或者文件夹进行跳转。重定向到首页index下，这样就都能找到路由了。<br>nginx配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">  try_files $uri $uri/ /index.html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>因为项目是子项目，所以不能放在根目录下，index.html需要放在一个新建的teacher目录 </p><p><strong>Q2：配置好nginx后，发现这样虽然不会404，但是页面全部转到了根目录的index.html，访问的是空白页面？</strong></p><p>于是调整了nginx和vue-router的配置如下：<br>nginx配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">###教师端 vue项目</span><br><span class="line">location /teacher/ &#123;</span><br><span class="line">    index  index.html index.htm index.php;</span><br><span class="line">    try_files $uri $uri/ /teacher/index.html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>vue路由配置<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">routes: [&#123;</span><br><span class="line">path: <span class="string">'/teacher/login'</span>,</span><br><span class="line">name: <span class="string">'Login'</span>,</span><br><span class="line">component: Login,</span><br><span class="line">meta: &#123;</span><br><span class="line">title: <span class="string">'教师端登录中心'</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">path: <span class="string">'/teacher/courseCenter'</span>,</span><br><span class="line">name: <span class="string">'CourseCenter'</span>,</span><br><span class="line">component: CourseCenter,</span><br><span class="line">meta: &#123;</span><br><span class="line">title: <span class="string">'CourseCenter'</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure></p><blockquote><p>拓展：<br>apache 做web服务器的虚拟空间，开启.htaccess文件支持,也可以解决vue项目配置子目录的问题。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">  Options +FollowSymlinks</span><br><span class="line">  RewriteEngine On</span><br><span class="line">  </span><br><span class="line">  RewriteCond %&#123;REQUEST_URI&#125; ^/(teacher|teacher/.*)$</span><br><span class="line">  RewriteRule ^/teacher/index\.html$ - [L,NC]</span><br><span class="line">  </span><br><span class="line">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">  RewriteRule ^(teacher|teacher/.*)$ teacher/index.html [L]</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure><h3 id="element-ui-的-upload组件的clearFiles方法调用方法"><a href="#element-ui-的-upload组件的clearFiles方法调用方法" class="headerlink" title="element-ui 的 upload组件的clearFiles方法调用方法"></a>element-ui 的 upload组件的clearFiles方法调用方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-button @click=&quot;clearUploadedImage&quot;&gt;重新上传&lt;/el-button&gt;</span><br><span class="line">    &lt;el-upload ref=&quot;upload&quot;&gt;&lt;/el-upload&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    clearUploadedImage () &#123;</span><br><span class="line">      this.$refs.upload.clearFiles();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="vue模板初始化报错："><a href="#vue模板初始化报错：" class="headerlink" title="vue模板初始化报错："></a>vue模板初始化报错：</h3><p>vue模板初始化报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Failed to compile with 2 errors                                                                                                                                                                                                                                                           21:49:02</span><br><span class="line"> error  in ./src/App.vue</span><br><span class="line"></span><br><span class="line">Module build failed: Error: No parser and no file path given, couldn&apos;t infer a parser.</span><br><span class="line">    at normalize (path\node_modules\prettier\index.js:7051:13)</span><br><span class="line">    at formatWithCursor (path\node_modules\prettier\index.js:10370:12)</span><br><span class="line">    at path\node_modules\prettier\index.js:31115:15</span><br><span class="line">    at Object.format (path\node_modules\prettier\index.js:31134:12)</span><br><span class="line">    at Object.module.exports (path\node_modules\vue-loader\lib\template-compiler\index.js:80:23)</span><br><span class="line"></span><br><span class="line"> @ ./src/App.vue 11:0-354</span><br><span class="line"> @ ./src/main.js</span><br><span class="line"> @ multi (webpack)-dev-server/client?http://localhost:8080 webpack/hot/dev-server ./src/main.js</span><br><span class="line"></span><br><span class="line"> error  in ./src/components/HelloWorld.vue</span><br><span class="line"></span><br><span class="line">Module build failed: Error: No parser and no file path given, couldn&apos;t infer a parser.</span><br><span class="line">    at normalize (path\node_modules\prettier\index.js:7051:13)</span><br><span class="line">    at formatWithCursor (path\node_modules\prettier\index.js:10370:12)</span><br><span class="line">    at path\node_modules\prettier\index.js:31115:15</span><br><span class="line">    at Object.format (path\node_modules\prettier\index.js:31134:12)</span><br><span class="line">    at Object.module.exports (path\node_modules\vue-loader\lib\template-compiler\index.js:80:23)</span><br></pre></td></tr></table></figure><p>Prettier has caused this regression in their 1.13.0 update which occurred today. Downgrade to the previous version to fix this error:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev prettier@1.12.0</span><br><span class="line"></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure></p><p>That should do the trick.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;vue项目在nginx中部署&quot;&gt;&lt;a href=&quot;#vue项目在nginx中部署&quot; class=&quot;headerlink&quot; title=&quot;vue项目在nginx中部署&quot;&gt;&lt;/a&gt;vue项目在nginx中部署&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;nginx的配置文件：&lt;/s
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
  </entry>
  
  <entry>
    <title>vue watch监听对象及对应值的变化(computed)</title>
    <link href="https://ru23.com/note/4560708.html"/>
    <id>https://ru23.com/note/4560708.html</id>
    <published>2018-11-09T06:56:17.000Z</published>
    <updated>2018-11-09T07:29:49.516Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
  </entry>
  
  <entry>
    <title>如何修改ElementUI源码</title>
    <link href="https://ru23.com/note/2d4f9329.html"/>
    <id>https://ru23.com/note/2d4f9329.html</id>
    <published>2018-11-09T06:23:59.000Z</published>
    <updated>2018-11-09T07:29:49.525Z</updated>
    
    <content type="html"><![CDATA[<p>在使用element-ui的时候，有些功能不能满足我们的需求，就需要修改源码来满足。阅读官方给的教程，对于我这小菜鸟过于简略，结合自己的实践整理一下修改方法：</p><p>克隆element官方的仓库到本地<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/ElemeFE/element.git</span><br></pre></td></tr></table></figure></p><p>下载到本地之后安装依赖包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd element &amp;&amp; npm install</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure></p><p>依赖包安装成后在 默认会在 <a href="http://localhost:8085/" target="_blank" rel="noopener">http://localhost:8085/</a> 打开本地网页，会看到element首页</p><p>进入element文件夹，packages文件夹就是我们要修改源码的目录文件夹<br>比如我们进入 button文件夹里面的src文件，找到button.vue，我们修改class=”el-button”，添加class=”el-button el-button-customize”一个自定义的class,然后保存。切换本地element首页，找到button组件，可以用审查元素查看，就会看到class=”el-button el-button-customize”已经被修改了。</p><p>切换到命令行工具 执行<br>npm run dist</p><p>命令行执行完毕，会在element文件夹里面生成lib文件夹</p><p>复制lib文件夹到自己的项目目录<br>找到node_modules并进入,找到element-ui文件夹替换里面的lib文件夹</p><p>验证是否成功<br>进入自己的项目文件目录，打开并运行项目，然后找到任意的button组件，验证button是否添加了自定义的el-button-customize 。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在使用element-ui的时候，有些功能不能满足我们的需求，就需要修改源码来满足。阅读官方给的教程，对于我这小菜鸟过于简略，结合自己的实践整理一下修改方法：&lt;/p&gt;
&lt;p&gt;克隆element官方的仓库到本地&lt;br&gt;&lt;figure class=&quot;highlight plai
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="vue" scheme="https://ru23.com/tags/vue/"/>
    
      <category term="elementUI" scheme="https://ru23.com/tags/elementUI/"/>
    
  </entry>
  
  <entry>
    <title>ie和safari浏览器new Date(yyyy-MM-dd HH:mm:ss )为NaN的解决方案</title>
    <link href="https://ru23.com/note/f192b16c.html"/>
    <id>https://ru23.com/note/f192b16c.html</id>
    <published>2018-11-09T06:22:27.000Z</published>
    <updated>2018-11-09T07:29:49.506Z</updated>
    
    <content type="html"><![CDATA[<p>今天碰到一个bug，在Safari浏览器里从日历选择器里面获取时间的时候，传给后台会报错，经排查发现，通过IE开发者工具控制台执行js代码，new Date(“2018-04-03 13:11:12”).getTime() 在IE下和Safari会返回NaN，而其他浏览器可以正常返回毫秒数。<br>chorme<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://user-images.githubusercontent.com/22697565/38230382-2911a2b2-3740-11e8-8ff1-ae8dbbb27098.png" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure></p><p>ie和safari<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://user-images.githubusercontent.com/22697565/38230404-41cc0b62-3740-11e8-9cb6-f2b14a0a4cb4.png" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure></p><p>由于毫秒数在IE浏览器下没有正确获得，所以在之后的计算中，计算结果为undefined</p><p></p><h3>解决方案</h3><p></p><h4>方法1：自定义一个NewDate方法，通过调用NewDate方法获得毫秒数</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NewDate</span>(<span class="params">str</span>)</span>&#123;  </span><br><span class="line">  <span class="keyword">if</span>(!str)&#123;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">  &#125;  </span><br><span class="line">  arr=str.split(<span class="string">" "</span>);  </span><br><span class="line">  d=arr[<span class="number">0</span>].split(<span class="string">"-"</span>);  </span><br><span class="line">  t=arr[<span class="number">1</span>].split(<span class="string">":"</span>);  </span><br><span class="line">  <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();   </span><br><span class="line">  date.setUTCFullYear(d[<span class="number">0</span>], d[<span class="number">1</span>] - <span class="number">1</span>, d[<span class="number">2</span>]);   </span><br><span class="line">  date.setUTCHours(t[<span class="number">0</span>], t[<span class="number">1</span>], t[<span class="number">2</span>], <span class="number">0</span>);   </span><br><span class="line">  <span class="keyword">return</span> date;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h4>方法2：通过Date.parse()方法</h4><br>parse() 方法可解析一个日期时间字符串，并返回 1970/1/1 午夜距离该日期时间的毫秒数。<br>由于parse()方法参数的日期格式为yyyy/MM/dd，所以需要将现有的日期格式通过replace()方法将日期字符串替换成yyyy/MM/dd格式。<p></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date=<span class="string">"2014-01-01 12:11:12"</span>;  </span><br><span class="line"><span class="built_in">Date</span>.parse(date.replace(<span class="regexp">/-/g</span>,<span class="string">"/"</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天碰到一个bug，在Safari浏览器里从日历选择器里面获取时间的时候，传给后台会报错，经排查发现，通过IE开发者工具控制台执行js代码，new Date(“2018-04-03 13:11:12”).getTime() 在IE下和Safari会返回NaN，而其他浏览器可
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="javascript" scheme="https://ru23.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>韦博微信端项目微信内置浏览器播放视频碰到的问题</title>
    <link href="https://ru23.com/note/75c16ddd.html"/>
    <id>https://ru23.com/note/75c16ddd.html</id>
    <published>2018-11-09T06:17:46.000Z</published>
    <updated>2018-11-10T03:01:03.397Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1.如何小窗不全屏( 亲测安卓微信 ios下通用)</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span>  <span class="attr">src</span>=<span class="string">""</span>  <span class="attr">controls</span>=<span class="string">""</span> <span class="attr">x5-playsinline</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag"> <span class="attr">playsinline</span>=<span class="string">""</span> <span class="attr">webkit-playsinline</span>=<span class="string">""</span> <span class="attr">poster</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag"> <span class="attr">preload</span>=<span class="string">"auto"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>2.页面打开自动播放</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  使用微信的wx.ready事件</span></span><br><span class="line"><span class="keyword">var</span> wx = <span class="built_in">require</span>(<span class="string">'weixin-js-sdk'</span>);</span><br><span class="line">wx.config(&#123;</span><br><span class="line">    <span class="comment">// 配置信息, 即使不正确也能使用 wx.ready</span></span><br><span class="line">    debug: <span class="literal">false</span>,</span><br><span class="line">    appId: <span class="string">''</span>,</span><br><span class="line">    timestamp: <span class="number">1</span>,</span><br><span class="line">    nonceStr: <span class="string">''</span>,</span><br><span class="line">    signature: <span class="string">''</span>,</span><br><span class="line">    jsApiList: []</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">wx.ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'media'</span>).play(); <span class="comment">//video标签id=media</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>3.React-js设置video的playsinline属性</strong></p><p>最近的应该项目用到了video标签，发现这类标签的属性，在jsx定义根本不起作用~<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">class</span>=<span class="string">"video"</span> <span class="attr">x-webkit-airplay</span>=<span class="string">"true"</span>  <span class="attr">webkit-playsinline</span>=<span class="string">"true"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">src</span>=<span class="string">"https://teenagercdn.speakhi.com/front/web/static/video/login.mp4"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>就可以了，但是在react-js里面 webkit-playsinline这样写似乎没有作用，应该如何写？</p><p><a href="https://github.com/facebook/react/issues/140" target="_blank" rel="noopener">参考</a></p><p><strong>方案1：</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">video</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props) &#123; </span><br><span class="line">        <span class="keyword">super</span>(props);</span><br><span class="line">        <span class="keyword">this</span>.state=&#123;</span><br><span class="line">      </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    componentWillMount() &#123;</span><br><span class="line">         Util.weixinTitle(<span class="string">"视频播放"</span>);</span><br><span class="line">         <span class="keyword">const</span> that=<span class="keyword">this</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    componentDidMount()&#123;</span><br><span class="line">        <span class="keyword">let</span> videoPlayer=<span class="built_in">document</span>.getElementById(<span class="string">'videoCtrl'</span>);</span><br><span class="line">        videoPlayer.setAttribute(<span class="string">'x5-playsinline'</span> ,<span class="string">''</span>)</span><br><span class="line">        videoPlayer.setAttribute(<span class="string">'playsinline'</span> ,<span class="string">''</span>)</span><br><span class="line">        videoPlayer.setAttribute(<span class="string">'webkit-playsinline'</span> ,<span class="string">''</span>)        </span><br><span class="line">    &#125;</span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">const</span> that=<span class="keyword">this</span>;</span><br><span class="line">   </span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div className=<span class="string">'bg-black'</span>&gt;</span><br><span class="line">                 </span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        )</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">export default video</span></span><br></pre></td></tr></table></figure></p><p><strong>方案2. react自带的设置私有属性方法</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></span><br><span class="line"></span><br><span class="line">React.registerCustomAttributePrefix(<span class="string">'e-'</span>);</span><br><span class="line">React.registerCustomAttributePrefix(<span class="string">'ng-'</span>);</span><br></pre></td></tr></table></figure><h3 id="html5-video微信浏览器视频不能自动播放"><a href="#html5-video微信浏览器视频不能自动播放" class="headerlink" title="html5 video微信浏览器视频不能自动播放"></a>html5 video微信浏览器视频不能自动播放</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">preload</span>=<span class="string">"preload"</span> <span class="attr">controls</span> <span class="attr">id</span>=<span class="string">"car_audio"</span> <span class="attr">src</span>=<span class="string">"http://media.xitaoinfo.com/ei_zamenjiehunba.mp3"</span> <span class="attr">loop</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">"video"</span> <span class="attr">controls</span>=<span class="string">""</span> <span class="attr">preload</span>=<span class="string">"none"</span> <span class="attr">mediagroup</span>=<span class="string">"myVideoGroup"</span> <span class="attr">poster</span>=<span class="string">"http://media.w3.org/2010/05/sintel/poster.png"</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">source</span> <span class="attr">id</span>=<span class="string">"mp4"</span> <span class="attr">src</span>=<span class="string">"http://media.w3.org/2010/05/sintel/trailer.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">source</span> <span class="attr">id</span>=<span class="string">"webm"</span> <span class="attr">src</span>=<span class="string">"http://media.w3.org/2010/05/sintel/trailer.webm"</span> <span class="attr">type</span>=<span class="string">"video/webm"</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">source</span> <span class="attr">id</span>=<span class="string">"ogv"</span> <span class="attr">src</span>=<span class="string">"http://media.w3.org/2010/05/sintel/trailer.ogv"</span> <span class="attr">type</span>=<span class="string">"video/ogg"</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Your user agent does not support the HTML5 Video element.<span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!-- 必须加在微信api资源 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://res.wx.qq.com/open/js/jweixin-1.0.0.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"> </span></span><br><span class="line"><span class="javascript">     <span class="comment">//一般情况下，这样就可以自动播放了，但是一些奇葩iPhone机不可以 </span></span></span><br><span class="line"><span class="javascript">     <span class="built_in">document</span>.getElementById(<span class="string">'car_audio'</span>).play(); </span></span><br><span class="line"><span class="javascript">    <span class="comment">//必须在微信Weixin JSAPI的WeixinJSBridgeReady才能生效 </span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.addEventListener(<span class="string">"WeixinJSBridgeReady"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; </span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">'car_audio'</span>).play(); </span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">'video'</span>).play(); </span></span><br><span class="line"><span class="javascript">    &#125;, <span class="literal">false</span>); </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="移动端阻止视频自动全屏"><a href="#移动端阻止视频自动全屏" class="headerlink" title="移动端阻止视频自动全屏"></a>移动端阻止视频自动全屏</h3><p><strong>阻止 ios视频自动全屏的代码</strong><br>添加 playsinline 和 webkit-playsinline=”true”；<br>例如:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video id=<span class="string">"video"</span> playsinline  webkit-playsinline &gt;<span class="xml"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><blockquote><p>备注：<br>1、此方法仅仅针对 ios有效（safari、微信都有效）。<br>2、playsinline属性针对ios 10以上系统有效。<br>3、webkit-playsinline属性针对ios10以下系统有效。<br>4、安卓目前没有办法（机型不一样自带浏览器也效果也不一样，有一部分浏览器是可以小窗播放的。）</p></blockquote><p><strong>阻止安卓版微信 视频自动全屏的代码</strong><br>添加 x5-playsinline<br>例如:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video id=<span class="string">"video"</span> x5-playsinline &gt;<span class="xml"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><blockquote><p>备注：此方法仅仅针对安卓版微信有效。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;1.如何小窗不全屏( 亲测安卓微信 ios下通用)&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/spa
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="微信开发，踩过的坑" scheme="https://ru23.com/tags/%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%EF%BC%8C%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>韦博成人项目webuploader上传文件的一系列坑总结</title>
    <link href="https://ru23.com/note/2bf1a5b6.html"/>
    <id>https://ru23.com/note/2bf1a5b6.html</id>
    <published>2018-11-09T06:16:01.000Z</published>
    <updated>2018-11-10T07:00:28.791Z</updated>
    
    <content type="html"><![CDATA[<h3 id="坑1：new-FormData-FormData对象的作用及用法"><a href="#坑1：new-FormData-FormData对象的作用及用法" class="headerlink" title="坑1：new FormData() - FormData对象的作用及用法"></a>坑1：new FormData() - FormData对象的作用及用法</h3><h4 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FormData 对象的使用：</span><br><span class="line">1.用一些键值对来模拟一系列表单控件：即把form中所有表单元素的name与value组装成</span><br><span class="line">一个queryString</span><br><span class="line">2. 异步上传二进制文件。</span><br></pre></td></tr></table></figure><h4 id="二、使用"><a href="#二、使用" class="headerlink" title="二、使用"></a>二、使用</h4><p>1.FormData对象的操作方法，全部在原型中，自己本身没任何的属性及方法。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://user-images.githubusercontent.com/22697565/39160831-291476d4-47a0-11e8-9820-0dbf99e92a4a.png" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><p><strong>1、append()</strong></p><p>append()方法用于向 FormData 对象中添加键值对：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fd.append(<span class="string">'key1'</span>,<span class="string">"value1"</span>);</span><br><span class="line">fd.append(<span class="string">'key2'</span>,<span class="string">"value2"</span>);</span><br></pre></td></tr></table></figure><p>fd是 FormData 对象，可以新建的空的对象，也可以是已经包含 form 表单或其他键值对。</p><p><strong>2、set()</strong></p><p>设置对应的键 key 对应的值 value(s)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fd.set(<span class="string">'key1'</span>,<span class="string">"value1"</span>);</span><br><span class="line">fd.set(<span class="string">'key2'</span>,<span class="string">"value2"</span>);</span><br></pre></td></tr></table></figure><p>看起来跟append() 方法有点类似，这两者的区别就是，当指定的 key 值存在时，append()方法是将新增的添加的所以的键值对最后，而set()方法将会覆盖前面的设置的键值对。还是通过实例来对比，我们在前面的 form 的基础上 append() 或 set() 新的键值对：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fd.append(<span class="string">'name'</span>,<span class="string">"will"</span>);</span><br></pre></td></tr></table></figure><p>有两个key为name的键值对：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://user-images.githubusercontent.com/22697565/39161290-93da87ae-47a2-11e8-97ce-a12961039b37.png" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fd.set(<span class="string">'name'</span>,<span class="string">"will"</span>);</span><br></pre></td></tr></table></figure><p>只有一个key为name的键值对：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://user-images.githubusercontent.com/22697565/39161302-a021ec50-47a2-11e8-8cec-7381bfd243e9.png" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure></p><p>以上就是 append() 和 set() 的区别。如果设置的key值不存在，那么两者的效果是一样的。</p><p><strong>3、delete()</strong></p><p>接收一个参数，表示你要删除的 key 值的名字，如果有多个相同 key 值，会一并删除：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fd.append(<span class="string">'name'</span>,<span class="string">'will'</span>);</span><br><span class="line">fd.delete(<span class="string">'name'</span>);</span><br></pre></td></tr></table></figure><p>form 中的 name 信息以及通过append() 新增的name 的信息都被删除了。</p><p><strong>4、get() 和 getAll()</strong></p><p>接收一个参数，表示需要查找的 key 的名称，返回第一个该 key 对应的 value 值。如果有多个相同的 key， 而且要返回所有的这个 key 对应的 value 值。</p><p>同样以上面的 form 表单为基础：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fd.append(<span class="string">'name'</span>,<span class="string">'will'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(fd.get(<span class="string">'name'</span>)); <span class="comment">// sean</span></span><br><span class="line"> </span><br><span class="line">fd.append(<span class="string">'name'</span>,<span class="string">'will'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(fd.getAll(<span class="string">'name'</span>)); <span class="comment">// ["sean", "will"]</span></span><br></pre></td></tr></table></figure><p><strong>5、has()</strong></p><p>该方法也接收一个参数，同样是 key 的名称，返回一个Boolean 值， 用来判断FormData 对象是否含有该 key。以上面的form为例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(fd.has(<span class="string">'name'</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(fd.has(<span class="string">'Name'</span>)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p><strong>6、keys()</strong></p><p>该方法不需要接收参数，返回一个迭代器，通过这个迭代器，我们可以遍历FormData 对象中所有的 key。以上面的form为例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">of</span> fd.keys()) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(key); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name</span><br><span class="line">gender</span><br><span class="line">number</span><br><span class="line">photo</span><br></pre></td></tr></table></figure><p><strong>7、values()</strong></p><p>有遍历 key 的迭代，当然也就少不了遍历 value 的迭代器了。values()就是遍历value 的迭代器，用法与 keys() 类似：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> value <span class="keyword">of</span> fd.values()) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://user-images.githubusercontent.com/22697565/39161320-b2c89a48-47a2-11e8-87d0-43f0d22b8812.png" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure></p><p><strong>8、entries()</strong></p><p>有遍历 key 的迭代器，也有遍历 value 的迭代器，为何不搞一个两者一起的呢！entries()就是返回一个包含键值对的迭代器：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> pair <span class="keyword">of</span> fd.entries()) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(pair[<span class="number">0</span>]+ <span class="string">', '</span>+ pair[<span class="number">1</span>]); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://user-images.githubusercontent.com/22697565/39161365-ec6d92d0-47a2-11e8-8362-3b8d520b2354.png" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure></p><p>2.使用FormData对象发送文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">HTML部分</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            姓名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            文件：<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"file"</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"保存"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">JS部分</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">'[type=button]'</span>);</span><br><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 文件元素</span></span><br><span class="line">    <span class="keyword">var</span> file = <span class="built_in">document</span>.querySelector(<span class="string">'[type=file]'</span>);</span><br><span class="line">    <span class="comment">// 通过FormData将文件转成二进制数据</span></span><br><span class="line">    <span class="keyword">var</span> formData = <span class="keyword">new</span> FormData();</span><br><span class="line">    <span class="comment">// 将文件转二进制</span></span><br><span class="line">    *****注意<span class="number">2</span>******</span><br><span class="line">    formData.append(<span class="string">'upload'</span>, file.files[<span class="number">0</span>]);</span><br><span class="line">    *****注意<span class="number">1</span>******</span><br><span class="line">    <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest;</span><br><span class="line">    xhr.open(<span class="string">'post'</span>, <span class="string">'file.php'</span>);</span><br><span class="line">    <span class="comment">// 监听上传进度</span></span><br><span class="line">    xhr.upload.onprogress = <span class="function"><span class="keyword">function</span> (<span class="params">ev</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 事件对象</span></span><br><span class="line">    <span class="comment">// console.log(ev);</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> percent = (ev.loaded / ev.total) * <span class="number">100</span> + <span class="string">'%'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(percent);</span><br><span class="line"></span><br><span class="line">        progress.style.width = percent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    xhr.send(formData);</span><br><span class="line"></span><br><span class="line">    xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>) &#123;</span><br><span class="line">                    <span class="comment">//</span></span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意1：使用jQuery</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> $.ajax(&#123;</span><br><span class="line">    url: <span class="string">'file.php'</span>,</span><br><span class="line">    type: <span class="string">'POST'</span>,</span><br><span class="line">    data: formdata,                    <span class="comment">// 上传formdata封装的数据</span></span><br><span class="line">    dataType: <span class="string">'JSON'</span>,</span><br><span class="line">    cache: <span class="literal">false</span>,                      <span class="comment">// 不缓存</span></span><br><span class="line">    processData: <span class="literal">false</span>,                <span class="comment">// jQuery不要去处理发送的数据</span></span><br><span class="line">    contentType: <span class="literal">false</span>,                <span class="comment">// jQuery不要去设置Content-Type请求头</span></span><br><span class="line">    success:<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;           <span class="comment">//成功回调</span></span><br><span class="line">        <span class="built_in">console</span>.log(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>注意2：参数</strong><br>new FormData的参数是一个DOM对象，而非jQuery对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> formData = <span class="keyword">new</span> FormData($(<span class="string">"#file"</span>)[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><h4 id="三、jQuery的参数序列化方法serialize"><a href="#三、jQuery的参数序列化方法serialize" class="headerlink" title="三、jQuery的参数序列化方法serialize()"></a>三、jQuery的参数序列化方法serialize()</h4><p>序列表表格内容为字符串，用于 Ajax 请求。<br>$(“form”).serialize()</p><h3 id="坑2：webuploader-上传传自定义参数"><a href="#坑2：webuploader-上传传自定义参数" class="headerlink" title="坑2：webuploader 上传传自定义参数"></a>坑2：webuploader 上传传自定义参数</h3><p><br><br>@WebUploader 是由百度开发的一个上传文件的框架，简单上传文件可以查看官网的两个demo。<br>由于自己需要上传用户信息，和用户照片，直接使用官网的demo，只能得到图片，于是花了一下午时间研究了一下WebUploader。</p><p>   我们可以通过设置FormData内的值，来实现图片和信息一起传入服务器中。<br>这里需要注意一点，formdata内的值不能在WebUploader实例化式赋值，因为在此时赋值时，表单信息为空，所以得到的值一直为空</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://user-images.githubusercontent.com/22697565/39161837-38068308-47a5-11e8-8c4f-5f0fee6be362.png" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><h5 id="全局设置"><a href="#全局设置" class="headerlink" title="全局设置"></a>全局设置</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化的时候直接添加  </span></span><br><span class="line"><span class="keyword">var</span> uploader = <span class="keyword">new</span> WebUploader.Uploader(&#123;  </span><br><span class="line">    ...  </span><br><span class="line">    formData: &#123;  </span><br><span class="line">        uid: <span class="number">123</span>  </span><br><span class="line">    &#125;  </span><br><span class="line">    ...  </span><br><span class="line">&#125;);  </span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化以后添加  </span></span><br><span class="line">uploader.options.formData.uid = <span class="number">123</span>;</span><br></pre></td></tr></table></figure><h4 id="局部设置"><a href="#局部设置" class="headerlink" title="局部设置"></a>局部设置</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">uploader.on( <span class="string">'uploadBeforeSend'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> block, data </span>) </span>&#123;  </span><br><span class="line">    <span class="comment">// block为分块数据。  </span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// file为分块对应的file对象。  </span></span><br><span class="line">    <span class="keyword">var</span> file = block.file;  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 修改data可以控制发送哪些携带数据。  </span></span><br><span class="line">    data.uid = <span class="number">123</span>;  </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;坑1：new-FormData-FormData对象的作用及用法&quot;&gt;&lt;a href=&quot;#坑1：new-FormData-FormData对象的作用及用法&quot; class=&quot;headerlink&quot; title=&quot;坑1：new FormData() - FormData
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="踩过的坑" scheme="https://ru23.com/tags/%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>11月份整理的知识点</title>
    <link href="https://ru23.com/note/16840463.html"/>
    <id>https://ru23.com/note/16840463.html</id>
    <published>2018-11-08T08:18:57.000Z</published>
    <updated>2018-11-10T10:05:40.383Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
  </entry>
  
  <entry>
    <title>js异步编程（草稿）</title>
    <link href="https://ru23.com/note/580ae11.html"/>
    <id>https://ru23.com/note/580ae11.html</id>
    <published>2018-11-07T09:54:01.000Z</published>
    <updated>2018-11-08T08:18:16.784Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
  </entry>
  
  <entry>
    <title>头条2018秋招面试题</title>
    <link href="https://ru23.com/note/7c193027.html"/>
    <id>https://ru23.com/note/7c193027.html</id>
    <published>2018-11-06T09:01:07.000Z</published>
    <updated>2018-11-09T06:20:56.848Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h3><h4 id="1-css3特性中的transform：translateZ-0-有什么作用"><a href="#1-css3特性中的transform：translateZ-0-有什么作用" class="headerlink" title="1.css3特性中的transform：translateZ(0)有什么作用"></a>1.css3特性中的transform：translateZ(0)有什么作用</h4><p><strong>答案：</strong><br>gpu加速,提高浏览器渲染的性能</p><hr><h4 id="2-列举三种禁止浏览器缓存的头字段，并写出响应的设置值"><a href="#2-列举三种禁止浏览器缓存的头字段，并写出响应的设置值" class="headerlink" title="2.列举三种禁止浏览器缓存的头字段，并写出响应的设置值"></a>2.列举三种禁止浏览器缓存的头字段，并写出响应的设置值</h4><p>Expires：告诉浏览器把回送的资源缓存多长时间 -1或0则是不缓存<br><strong>简要：添加Expires头能有效的利用浏览器的缓存能力来改善页面的性能，能在后续的页面中有效避免很多不必要的Http请求，WEB服务器使用Expires头来告诉Web客户端它可以使用一个组件的当前副本，直到指定的时间为止。</strong><br>例如：Expires：Thu，15 Apr  2010  20：00：00  GMT;  他告诉浏览器缓存有效性持续到2010年4月15日为止，在这个时间之内相同的请求使用缓存，这个时间之外使用http请求。</p><p>Cache-Control：no-cache<br>Cathe-Control：max-age=315360000</p><p>Expires有一个非常大的缺陷，它使用一个固定的时间，要求服务器与客户端的时钟保持严格的同步，并且这一天到来后，服务器还得重新设定新的时间。<br>HTTP1.1引入了Cathe-Control，它使用max-age指定组件被缓存多久，从请求开始在max-age时间内浏览器使用缓存，之外的使用请求，这样就可以消除Expires的限制，<br>如果对浏览器兼容性要求很高的话，可以两个都使用。</p><p>Pragma：no-cache</p><hr><h4 id="3-精确获取页面元素位置的方式有哪些"><a href="#3-精确获取页面元素位置的方式有哪些" class="headerlink" title="3.精确获取页面元素位置的方式有哪些"></a>3.精确获取页面元素位置的方式有哪些</h4><p>那就是使用getBoundingClientRect()方法。它返回一个对象，其中包含了left、right、top、bottom四个属性，分别对应了该元素的左上角和右下角相对于浏览器窗口（viewport）左上角的距离。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> X= <span class="keyword">this</span>.getBoundingClientRect().left;</span><br><span class="line"><span class="keyword">var</span> Y =<span class="keyword">this</span>.getBoundingClientRect().top;</span><br><span class="line"><span class="comment">//再加上滚动距离，就可以得到绝对位置</span></span><br><span class="line"><span class="keyword">var</span> X= <span class="keyword">this</span>.getBoundingClientRect().left+<span class="built_in">document</span>.documentElement.scrollLeft;</span><br><span class="line"><span class="keyword">var</span> Y =<span class="keyword">this</span>.getBoundingClientRect().top+<span class="built_in">document</span>.documentElement.scrollTop;</span><br></pre></td></tr></table></figure></p><hr><h4 id="4-正则从2018-10-07T11-48-47-Asia-zh-cn-提取出来结果-2018-10-07-11-48-47"><a href="#4-正则从2018-10-07T11-48-47-Asia-zh-cn-提取出来结果-2018-10-07-11-48-47" class="headerlink" title="4.正则从2018-10-07T11:48:47 Asia/zh-cn 提取出来结果[2018,10,07,11,48,47]"></a>4.正则从2018-10-07T11:48:47 Asia/zh-cn 提取出来结果[2018,10,07,11,48,47]</h4><p><strong>思路：</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">"2018-10-07T11:48:47 Asia/zh-cn"</span>;</span><br><span class="line"><span class="comment">// step1 正则截取空格以后的字符串 ;</span></span><br><span class="line">str = str.match(<span class="regexp">/(\S*) /</span>)[<span class="number">1</span>]</span><br><span class="line"><span class="comment">// step2 正则replace掉符号-和T </span></span><br><span class="line">str = str.replace(<span class="regexp">/-|\T|\:/g</span>, <span class="string">","</span>)</span><br><span class="line">str =str.split(<span class="string">","</span>)</span><br></pre></td></tr></table></figure></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/11/reg.jpg" alt="正则替换" title="">                </div>                <div class="image-caption">正则替换</div>            </figure><p><strong>拓展：</strong><br>1、js截取两个字符串之间的内容：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"aaabbbcccdddeeefff"</span>;</span><br><span class="line">str = str.match(<span class="regexp">/aaa(\S*)fff/</span>)[<span class="number">1</span>];</span><br><span class="line">alert(str);<span class="comment">//结果bbbcccdddeee</span></span><br></pre></td></tr></table></figure></p><p>2、js截取某个字符串前面的内容：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"aaabbbcccdddeeefff"</span>;</span><br><span class="line">tr = str.match(<span class="regexp">/(\S*)fff/</span>)[<span class="number">1</span>];</span><br><span class="line">alert(str);<span class="comment">//结果aaabbbcccddd</span></span><br></pre></td></tr></table></figure></p><p>3、js截取某个字符串后面的内容：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"aaabbbcccdddeeefff"</span>;</span><br><span class="line">str = str.match(<span class="regexp">/aaa(\S*)/</span>)[<span class="number">1</span>];</span><br><span class="line">alert(str);<span class="comment">//结果bbbcccdddeeefff</span></span><br></pre></td></tr></table></figure></p><hr><h4 id="5-如何判断object是数组类型？"><a href="#5-如何判断object是数组类型？" class="headerlink" title="5.如何判断object是数组类型？"></a>5.如何判断object是数组类型？</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="keyword">typeof</span> <span class="number">1</span>);                <span class="comment">// 返回字符串"number" </span></span><br><span class="line">alert(<span class="keyword">typeof</span> <span class="string">"1"</span>);              <span class="comment">// 返回字符串"string" </span></span><br><span class="line">alert(<span class="keyword">typeof</span> <span class="literal">true</span>);             <span class="comment">// 返回字符串"boolean" </span></span><br><span class="line">alert(<span class="keyword">typeof</span> &#123;&#125;);               <span class="comment">// 返回字符串"object" </span></span><br><span class="line">alert(<span class="keyword">typeof</span> []);               <span class="comment">// 返回字符串"object " </span></span><br><span class="line">alert(<span class="keyword">typeof</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;);     <span class="comment">// 返回字符串"function" </span></span><br><span class="line">alert(<span class="keyword">typeof</span> <span class="literal">null</span>);             <span class="comment">// 返回字符串"object" </span></span><br><span class="line">alert(<span class="keyword">typeof</span> <span class="literal">undefined</span>);        <span class="comment">// 返回字符串"undefined"</span></span><br></pre></td></tr></table></figure><p>其中，typeof {}和typeof []的结果都是object，那么问题来了，我怎么通过typeof去判断一个对象是不是数组类型呢？</p><p>对象是对象，数组也是对象，js中万物皆对象，很显然，通过简单的typeof运算符是不能够达到目的，我们得换个方法。</p><p>1、从原型入手，Array.prototype.isPrototypeOf(obj);</p><p>利用isPrototypeOf()方法，判定Array是不是在obj的原型链中，如果是，则返回true,否则false。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/11/isarray1.png" alt="判断object是数组类型" title="">                </div>                <div class="image-caption">判断object是数组类型</div>            </figure><p>2.Array.isArray()方法。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>.isArray([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Array</span>.isArray(&#123;<span class="attr">foo</span>: <span class="number">123</span>&#125;); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="string">'foobar'</span>);   <span class="comment">// false</span></span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">undefined</span>);  <span class="comment">// false</span></span><br></pre></td></tr></table></figure></p><h3 id="编程题"><a href="#编程题" class="headerlink" title="编程题"></a>编程题</h3><hr><h5 id="1-已知数据结构users，请实现语法支持user-unique能够按照name字段去重，并输出结构为：-“a”-”b”"><a href="#1-已知数据结构users，请实现语法支持user-unique能够按照name字段去重，并输出结构为：-“a”-”b”" class="headerlink" title="1.已知数据结构users，请实现语法支持user.unique能够按照name字段去重，并输出结构为：[“a”,”b”]"></a>1.已知数据结构users，请实现语法支持user.unique能够按照name字段去重，并输出结构为：[“a”,”b”]</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> users=[&#123;</span><br><span class="line">   id:<span class="number">1</span>,<span class="attr">name</span>:<span class="string">"a"</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">   id:<span class="number">2</span>,<span class="attr">name</span>:<span class="string">"a"</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">   id:<span class="number">3</span>,<span class="attr">name</span>:<span class="string">"b"</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">   id:<span class="number">4</span>,<span class="attr">name</span>:<span class="string">"v"</span></span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>.prototype.unique = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> res;</span><br><span class="line">    <span class="keyword">this</span>.map(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>[item.id - <span class="number">1</span>] = item.name</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// ES6里新添加了两个很好用的东西，set和Array.from</span></span><br><span class="line">    <span class="comment">// set是一种新的数据结构，它可以接收一个数组或者是类数组对象，自动去重其中的重复项目。</span></span><br><span class="line">    res=<span class="keyword">new</span> <span class="built_in">Set</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"new Set对象"</span>,res)</span><br><span class="line">    <span class="comment">// 但是这里大家可以看到，set返回的是一个对象，但是我们想要的是数组啊。</span></span><br><span class="line">    <span class="comment">// 这回，就该轮到Array.from出场了，它的作用，就是可以把类数组对象、可迭代对象转化为数组。</span></span><br><span class="line">    res=<span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>(<span class="keyword">this</span>));</span><br><span class="line">    <span class="keyword">return</span>  res<span class="comment">//es6 数组去重</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(users.unique());</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/11/unique.png" alt="去重" title="">                </div>                <div class="image-caption">去重</div>            </figure><hr><h5 id="2-已知如下对象，请基于es6的proxy方法设计一个属性拦截读取操作的例子，要求实现去访问目标对象example中不存在的属性时，抛出错误：Property-“-property-”-does-not-exist"><a href="#2-已知如下对象，请基于es6的proxy方法设计一个属性拦截读取操作的例子，要求实现去访问目标对象example中不存在的属性时，抛出错误：Property-“-property-”-does-not-exist" class="headerlink" title="2.已知如下对象，请基于es6的proxy方法设计一个属性拦截读取操作的例子，要求实现去访问目标对象example中不存在的属性时，抛出错误：Property “$(property)” does not exist"></a>2.已知如下对象，请基于es6的proxy方法设计一个属性拦截读取操作的例子，要求实现去访问目标对象example中不存在的属性时，抛出错误：Property “$(property)” does not exist</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> man=&#123;</span><br><span class="line">    name:<span class="string">'jscoder'</span>,</span><br><span class="line">    age:<span class="number">22</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">//补全代码</span></span><br><span class="line"><span class="keyword">const</span> proxy = <span class="keyword">new</span> <span class="built_in">Proxy</span>(...)</span><br><span class="line">proxy.name <span class="comment">//"jscoder"</span></span><br><span class="line">proxy.age <span class="comment">//22</span></span><br><span class="line">proxy.location <span class="comment">//Property "$(property)" does not exist</span></span><br></pre></td></tr></table></figure><p><strong>考点</strong><br>es6 javascript的Proxy 实例的方法 ,<code>get()</code> get方法用于拦截某个属性的读取操作。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> man = &#123;</span><br><span class="line">name:<span class="string">'jscoder'</span>,</span><br><span class="line">    age:<span class="number">22</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> proxy = <span class="keyword">new</span> <span class="built_in">Proxy</span>(man, &#123;</span><br><span class="line">get: <span class="function"><span class="keyword">function</span>(<span class="params">target, property</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(property <span class="keyword">in</span> target) &#123;</span><br><span class="line"><span class="keyword">return</span> target[property];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">ReferenceError</span>(<span class="string">`Property <span class="subst">$&#123;property&#125;</span> does not exist.`</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(proxy.name)</span><br><span class="line"><span class="built_in">console</span>.log(proxy.age)</span><br><span class="line"><span class="built_in">console</span>.log(proxy.location)</span><br></pre></td></tr></table></figure><p>Proxy 实例的方法的其他方法参考这个链接，很详细<br><a href="https://blog.csdn.net/qq_30100043/article/details/53443017" target="_blank" rel="noopener">https://blog.csdn.net/qq_30100043/article/details/53443017</a></p><hr><h5 id="3-给出如下虚拟dom的数据结构，如何实现简单的虚拟dom，渲染到目标dom树"><a href="#3-给出如下虚拟dom的数据结构，如何实现简单的虚拟dom，渲染到目标dom树" class="headerlink" title="3.给出如下虚拟dom的数据结构，如何实现简单的虚拟dom，渲染到目标dom树"></a>3.给出如下虚拟dom的数据结构，如何实现简单的虚拟dom，渲染到目标dom树</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//样例数据</span></span><br><span class="line"><span class="keyword">let</span> demoNode = (&#123;</span><br><span class="line">    tagName: <span class="string">'ul'</span>,</span><br><span class="line">    props: &#123;<span class="string">'class'</span>: <span class="string">'list'</span>&#125;,</span><br><span class="line">    children: [</span><br><span class="line">        (&#123;<span class="attr">tagName</span>: <span class="string">'li'</span>, <span class="attr">children</span>: [<span class="string">'douyin'</span>]&#125;),</span><br><span class="line">        (&#123;<span class="attr">tagName</span>: <span class="string">'li'</span>, <span class="attr">children</span>: [<span class="string">'toutiao'</span>]&#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>//构建一个render函数，将demoNode对象渲染为以下dom<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>douyin<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>toutiao<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>看到虚拟DOM，是不是感觉很玄乎，但是剥开它华丽的外衣，也就那样:</p><ol><li>通过JavaScript来构建虚拟的DOM树结构，并将其呈现到页面中；</li><li>当数据改变，引起DOM树结构发生改变，从而生成一颗新的虚拟DOM树，将其与之前的DOM对比，将变化部分应用到真实的DOM树中，即页面中。<br>通过上面的介绍，下面，我们就来实现一个简单的虚拟DOM，并将其与真实的DOM关联。</li></ol><p><strong>构建虚拟DOM</strong></p><p>虚拟DOM，其实就是用JavaScript对象来构建DOM树，如上ul组件模版，其树形结构如下：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/11/domtree.png" alt="DOM树" title="">                </div>                <div class="image-caption">DOM树</div>            </figure><br>通过JavaScript，我们可以很容易构建它，如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> elem = Element(&#123;</span><br><span class="line">    tagName: <span class="string">'ul'</span>,</span><br><span class="line">    props: &#123;<span class="string">'class'</span>: <span class="string">'list'</span>&#125;,</span><br><span class="line">    children: [</span><br><span class="line">        Element(&#123;<span class="attr">tagName</span>: <span class="string">'li'</span>, <span class="attr">children</span>: [<span class="string">'item1'</span>]&#125;),</span><br><span class="line">        Element(&#123;<span class="attr">tagName</span>: <span class="string">'li'</span>, <span class="attr">children</span>: [<span class="string">'item2'</span>]&#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><blockquote><p>note：Element为一个构造函数，返回一个Element对象。为了更清晰的呈现虚拟DOM结构，我们省略了new，而在Element中实现。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @Params:</span></span><br><span class="line"><span class="comment">*     tagName(string)(requered)</span></span><br><span class="line"><span class="comment">*     props(object)(optional)</span></span><br><span class="line"><span class="comment">*     children(array)(optional)</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Element</span>(<span class="params">&#123;tagName, props, children&#125;</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="keyword">this</span> <span class="keyword">instanceof</span> Element))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Element(&#123;tagName, props, children&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.tagName = tagName;</span><br><span class="line">    <span class="keyword">this</span>.props = props || &#123;&#125;;</span><br><span class="line">    <span class="keyword">this</span>.children = children || [];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了，通过Element我们可以任意地构建虚拟DOM树了。但是有个问题，虚拟的终归是虚拟的，我们得将其呈现到页面中，不然，没卵用。。</p><p>怎么呈现呢？</p><p>从上面得知，这是一颗树嘛，那我们就通过遍历，逐个节点地创建真实DOM节点:</p><p>　　1. createElement;</p><p>　　2. createTextNode.</p><p>怎么遍历呢？</p><p>因为这是一颗树嘛，对于树形结构无外乎两种遍历：</p><p>　　1. 深度优先遍历(DFS)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/11/shendubianli.png" alt="深度优先遍历" title="">                </div>                <div class="image-caption">深度优先遍历</div>            </figure><p>　　2. 广度优先遍历(BFS)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/11/guangdubianli.png" alt="广度优先遍历" title="">                </div>                <div class="image-caption">广度优先遍历</div>            </figure><p>针对实际情况，我们得采用DFS，为什么呢？</p><p>因为我们得将子节点append到父节点中</p><p>好了，那我们采用DFS，就来实现一个render函数吧，如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Element.prototype.render = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> el = <span class="built_in">document</span>.createElement(<span class="keyword">this</span>.tagName),</span><br><span class="line">        props = <span class="keyword">this</span>.props,</span><br><span class="line">        propName,</span><br><span class="line">        propValue;</span><br><span class="line">    <span class="keyword">for</span>(propName <span class="keyword">in</span> props)&#123;</span><br><span class="line">        propValue = props[propName];</span><br><span class="line">        el.setAttribute(propName, propValue);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.children.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">child</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> childEl = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(child <span class="keyword">instanceof</span> Element)&#123;</span><br><span class="line">            childEl = child.render();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            childEl = <span class="built_in">document</span>.createTextNode(child);</span><br><span class="line">        &#125;</span><br><span class="line">        el.appendChild(childEl);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> el;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>此时，我们就可以轻松地将虚拟DOM呈现到指定真实DOM中啦。假设，我们将上诉ul虚拟DOM呈现到页面body中，如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> elem = Element(&#123;</span><br><span class="line">    tagName: <span class="string">'ul'</span>,</span><br><span class="line">    props: &#123;<span class="string">'class'</span>: <span class="string">'list'</span>&#125;,</span><br><span class="line">    children: [</span><br><span class="line">        Element(&#123;<span class="attr">tagName</span>: <span class="string">'li'</span>, <span class="attr">children</span>: [<span class="string">'item1'</span>]&#125;),</span><br><span class="line">        Element(&#123;<span class="attr">tagName</span>: <span class="string">'li'</span>, <span class="attr">children</span>: [<span class="string">'item2'</span>]&#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">'body'</span>).appendChild(elem.render());</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;简答题&quot;&gt;&lt;a href=&quot;#简答题&quot; class=&quot;headerlink&quot; title=&quot;简答题&quot;&gt;&lt;/a&gt;简答题&lt;/h3&gt;&lt;h4 id=&quot;1-css3特性中的transform：translateZ-0-有什么作用&quot;&gt;&lt;a href=&quot;#1-css3特性中的t
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
  </entry>
  
  <entry>
    <title>Node Sass could not find a binding for W64-bit and Node.js 6.x</title>
    <link href="https://ru23.com/note/a3acb1c1.html"/>
    <id>https://ru23.com/note/a3acb1c1.html</id>
    <published>2018-11-06T06:14:22.000Z</published>
    <updated>2018-11-06T06:46:47.864Z</updated>
    
    <content type="html"><![CDATA[<p>ERROR in ./src/app/css/index.scss<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Module build failed: Error: Missing binding D:\projects\living\user-platform\project\node_modules</span><br><span class="line">-x64-48\binding.node</span><br><span class="line">Node Sass could not find a binding for your current environment: Windows 64-bit with Node.js 6.x</span><br></pre></td></tr></table></figure></p><p>The problem was up since I had installed Node.js 7.x previously, and node-sass was build on Node.js 7.x version.</p><p>So:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm rebuild node-sass</span><br></pre></td></tr></table></figure></p><p>It’s been solved.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ERROR in ./src/app/css/index.scss&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;s
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="npm" scheme="https://ru23.com/tags/npm/"/>
    
      <category term="踩过的坑" scheme="https://ru23.com/tags/%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>Eslint静态代码检查</title>
    <link href="https://ru23.com/note/35a7a4a2.html"/>
    <id>https://ru23.com/note/35a7a4a2.html</id>
    <published>2018-11-06T06:04:59.000Z</published>
    <updated>2018-11-06T06:46:47.867Z</updated>
    
    <content type="html"><![CDATA[<p>Eslint 对于每一个开发者而言都是非常值得使用的，这样会强制你写出高质量且整洁的代码，所以建议大家将Eslint集成进入，来提高项目的质量。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g eslint</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ eslint --init</span><br></pre></td></tr></table></figure><p>将会生成.eslintrc.js文件,执行检查src目录下的main.js单文件的命令</p><p>eslint src/main.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eslint src/main.js</span><br></pre></td></tr></table></figure></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>ESLint的配置最重要的是规则的配置，具体的格式如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;quotes&quot;: [2, &quot;double&quot;]</span><br><span class="line"># 第一部分是规则名</span><br><span class="line"># 第二部分是表示级别：0-不验证；1-警告；2-错误</span><br></pre></td></tr></table></figure></p><p>在 package.json 中添加 eslintConfig 配置块</p><p>直接在代码文件中定义<br>配置文件中的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;extends&quot;: &quot;eslint:recommended&quot;</span><br></pre></td></tr></table></figure></p><p>表示使用默认的规则进行校验，如果自定义规则需要将此设置去掉！</p><h5 id="1-文件中关闭验证"><a href="#1-文件中关闭验证" class="headerlink" title="1.文件中关闭验证"></a>1.文件中关闭验证</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*eslint-disable */</span></span><br><span class="line"><span class="comment">//suppress all warnings between comments</span></span><br><span class="line">alert(<span class="string">'foo'</span>);</span><br><span class="line"><span class="comment">/*eslint-enable */</span></span><br></pre></td></tr></table></figure><h5 id="文件中指定规则不验证"><a href="#文件中指定规则不验证" class="headerlink" title="文件中指定规则不验证"></a>文件中指定规则不验证</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*eslint-disable no-alert, no-console */</span></span><br><span class="line">alert(<span class="string">'foo'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'bar'</span>);</span><br><span class="line"><span class="comment">/*eslint-enable no-alert */</span></span><br></pre></td></tr></table></figure><p>.eslintrc.js 范例<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="string">"env"</span>: &#123;</span><br><span class="line">        <span class="string">"browser"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"es6"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"node"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"extends"</span>: <span class="string">"eslint:recommended"</span>,</span><br><span class="line">    <span class="string">"parserOptions"</span>: &#123;</span><br><span class="line">        <span class="string">"ecmaFeatures"</span>: &#123;</span><br><span class="line">            <span class="string">"jsx"</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"ecmaVersion"</span>: <span class="number">2018</span>,</span><br><span class="line">        <span class="string">"sourceType"</span>: <span class="string">"module"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"plugins"</span>: [</span><br><span class="line">        <span class="string">"react"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"rules"</span>: &#123;</span><br><span class="line">        <span class="string">"no-alert"</span>: <span class="number">0</span>, <span class="comment">//禁止使用alert confirm prompt</span></span><br><span class="line">        <span class="string">"no-array-constructor"</span>: <span class="number">2</span>, <span class="comment">//禁止使用数组构造器</span></span><br><span class="line">        <span class="string">"no-bitwise"</span>: <span class="number">0</span>, <span class="comment">//禁止使用按位运算符</span></span><br><span class="line">        <span class="string">"no-caller"</span>: <span class="number">1</span>, <span class="comment">//禁止使用arguments.caller或arguments.callee</span></span><br><span class="line">        <span class="string">"no-catch-shadow"</span>: <span class="number">2</span>, <span class="comment">//禁止catch子句参数与外部作用域变量同名</span></span><br><span class="line">        <span class="string">"no-class-assign"</span>: <span class="number">2</span>, <span class="comment">//禁止给类赋值</span></span><br><span class="line">        <span class="string">"no-cond-assign"</span>: <span class="number">2</span>, <span class="comment">//禁止在条件表达式中使用赋值语句</span></span><br><span class="line">        <span class="string">"no-console"</span>: <span class="number">2</span>, <span class="comment">//禁止使用console</span></span><br><span class="line">        <span class="string">"no-const-assign"</span>: <span class="number">2</span>, <span class="comment">//禁止修改const声明的变量</span></span><br><span class="line">        <span class="string">"no-constant-condition"</span>: <span class="number">2</span>, <span class="comment">//禁止在条件中使用常量表达式 if(true) if(1)</span></span><br><span class="line">        <span class="string">"no-continue"</span>: <span class="number">0</span>, <span class="comment">//禁止使用continue</span></span><br><span class="line">        <span class="string">"no-control-regex"</span>: <span class="number">2</span>, <span class="comment">//禁止在正则表达式中使用控制字符</span></span><br><span class="line">        <span class="string">"no-debugger"</span>: <span class="number">2</span>, <span class="comment">//禁止使用debugger</span></span><br><span class="line">        <span class="string">"no-delete-var"</span>: <span class="number">2</span>, <span class="comment">//不能对var声明的变量使用delete操作符</span></span><br><span class="line">        <span class="string">"no-div-regex"</span>: <span class="number">1</span>, <span class="comment">//不能使用看起来像除法的正则表达式/=foo/</span></span><br><span class="line">        <span class="string">"no-dupe-keys"</span>: <span class="number">2</span>, <span class="comment">//在创建对象字面量时不允许键重复 &#123;a:1,a:1&#125;</span></span><br><span class="line">        <span class="string">"no-dupe-args"</span>: <span class="number">2</span>, <span class="comment">//函数参数不能重复</span></span><br><span class="line">        <span class="string">"no-duplicate-case"</span>: <span class="number">2</span>, <span class="comment">//switch中的case标签不能重复</span></span><br><span class="line">        <span class="string">"no-else-return"</span>: <span class="number">2</span>, <span class="comment">//如果if语句里面有return,后面不能跟else语句</span></span><br><span class="line">        <span class="string">"no-empty"</span>: <span class="number">2</span>, <span class="comment">//块语句中的内容不能为空</span></span><br><span class="line">        <span class="string">"no-empty-character-class"</span>: <span class="number">2</span>, <span class="comment">//正则表达式中的[]内容不能为空</span></span><br><span class="line">        <span class="string">"no-empty-label"</span>: <span class="number">2</span>, <span class="comment">//禁止使用空label</span></span><br><span class="line">        <span class="string">"no-eq-null"</span>: <span class="number">2</span>, <span class="comment">//禁止对null使用==或!=运算符</span></span><br><span class="line">        <span class="string">"no-eval"</span>: <span class="number">1</span>, <span class="comment">//禁止使用eval</span></span><br><span class="line">        <span class="string">"no-ex-assign"</span>: <span class="number">2</span>, <span class="comment">//禁止给catch语句中的异常参数赋值</span></span><br><span class="line">        <span class="string">"no-extend-native"</span>: <span class="number">2</span>, <span class="comment">//禁止扩展native对象</span></span><br><span class="line">        <span class="string">"no-extra-bind"</span>: <span class="number">2</span>, <span class="comment">//禁止不必要的函数绑定</span></span><br><span class="line">        <span class="string">"no-extra-boolean-cast"</span>: <span class="number">2</span>, <span class="comment">//禁止不必要的bool转换</span></span><br><span class="line">        <span class="string">"no-extra-parens"</span>: <span class="number">2</span>, <span class="comment">//禁止非必要的括号</span></span><br><span class="line">        <span class="string">"no-extra-semi"</span>: <span class="number">2</span>, <span class="comment">//禁止多余的冒号</span></span><br><span class="line">        <span class="string">"no-fallthrough"</span>: <span class="number">1</span>, <span class="comment">//禁止switch穿透</span></span><br><span class="line">        <span class="string">"no-floating-decimal"</span>: <span class="number">2</span>, <span class="comment">//禁止省略浮点数中的0 .5 3.</span></span><br><span class="line">        <span class="string">"no-func-assign"</span>: <span class="number">2</span>, <span class="comment">//禁止重复的函数声明</span></span><br><span class="line">        <span class="string">"no-implicit-coercion"</span>: <span class="number">1</span>, <span class="comment">//禁止隐式转换</span></span><br><span class="line">        <span class="string">"no-implied-eval"</span>: <span class="number">2</span>, <span class="comment">//禁止使用隐式eval</span></span><br><span class="line">        <span class="string">"no-inline-comments"</span>: <span class="number">0</span>, <span class="comment">//禁止行内备注</span></span><br><span class="line">        <span class="string">"no-inner-declarations"</span>: [<span class="number">2</span>, <span class="string">"functions"</span>], <span class="comment">//禁止在块语句中使用声明（变量或函数）</span></span><br><span class="line">        <span class="string">"no-invalid-regexp"</span>: <span class="number">2</span>, <span class="comment">//禁止无效的正则表达式</span></span><br><span class="line">        <span class="string">"no-invalid-this"</span>: <span class="number">2</span>, <span class="comment">//禁止无效的this，只能用在构造器，类，对象字面量</span></span><br><span class="line">        <span class="string">"no-irregular-whitespace"</span>: <span class="number">2</span>, <span class="comment">//不能有不规则的空格</span></span><br><span class="line">        <span class="string">"no-iterator"</span>: <span class="number">2</span>, <span class="comment">//禁止使用__iterator__ 属性</span></span><br><span class="line">        <span class="string">"no-label-var"</span>: <span class="number">2</span>, <span class="comment">//label名不能与var声明的变量名相同</span></span><br><span class="line">        <span class="string">"no-labels"</span>: <span class="number">2</span>, <span class="comment">//禁止标签声明</span></span><br><span class="line">        <span class="string">"no-lone-blocks"</span>: <span class="number">2</span>, <span class="comment">//禁止不必要的嵌套块</span></span><br><span class="line">        <span class="string">"no-lonely-if"</span>: <span class="number">2</span>, <span class="comment">//禁止else语句内只有if语句</span></span><br><span class="line">        <span class="string">"no-loop-func"</span>: <span class="number">1</span>, <span class="comment">//禁止在循环中使用函数（如果没有引用外部变量不形成闭包就可以）</span></span><br><span class="line">        <span class="string">"no-mixed-requires"</span>: [<span class="number">0</span>, <span class="literal">false</span>], <span class="comment">//声明时不能混用声明类型</span></span><br><span class="line">        <span class="string">"no-mixed-spaces-and-tabs"</span>: [<span class="number">2</span>, <span class="literal">false</span>], <span class="comment">//禁止混用tab和空格</span></span><br><span class="line">        <span class="string">"linebreak-style"</span>: [<span class="number">0</span>, <span class="string">"windows"</span>], <span class="comment">//换行风格</span></span><br><span class="line">        <span class="string">"no-multi-spaces"</span>: <span class="number">1</span>, <span class="comment">//不能用多余的空格</span></span><br><span class="line">        <span class="string">"no-multi-str"</span>: <span class="number">2</span>, <span class="comment">//字符串不能用\换行</span></span><br><span class="line">        <span class="string">"no-multiple-empty-lines"</span>: [<span class="number">1</span>, &#123; <span class="string">"max"</span>: <span class="number">2</span> &#125;], <span class="comment">//空行最多不能超过2行</span></span><br><span class="line">        <span class="string">"no-native-reassign"</span>: <span class="number">2</span>, <span class="comment">//不能重写native对象</span></span><br><span class="line">        <span class="string">"no-negated-in-lhs"</span>: <span class="number">2</span>, <span class="comment">//in 操作符的左边不能有!</span></span><br><span class="line">        <span class="string">"no-nested-ternary"</span>: <span class="number">0</span>, <span class="comment">//禁止使用嵌套的三目运算</span></span><br><span class="line">        <span class="string">"no-new"</span>: <span class="number">1</span>, <span class="comment">//禁止在使用new构造一个实例后不赋值</span></span><br><span class="line">        <span class="string">"no-new-func"</span>: <span class="number">1</span>, <span class="comment">//禁止使用new Function</span></span><br><span class="line">        <span class="string">"no-new-object"</span>: <span class="number">2</span>, <span class="comment">//禁止使用new Object()</span></span><br><span class="line">        <span class="string">"no-new-require"</span>: <span class="number">2</span>, <span class="comment">//禁止使用new require</span></span><br><span class="line">        <span class="string">"no-new-wrappers"</span>: <span class="number">2</span>, <span class="comment">//禁止使用new创建包装实例，new String new Boolean new Number</span></span><br><span class="line">        <span class="string">"no-obj-calls"</span>: <span class="number">2</span>, <span class="comment">//不能调用内置的全局对象，比如Math() JSON()</span></span><br><span class="line">        <span class="string">"no-octal"</span>: <span class="number">2</span>, <span class="comment">//禁止使用八进制数字</span></span><br><span class="line">        <span class="string">"no-octal-escape"</span>: <span class="number">2</span>, <span class="comment">//禁止使用八进制转义序列</span></span><br><span class="line">        <span class="string">"no-param-reassign"</span>: <span class="number">2</span>, <span class="comment">//禁止给参数重新赋值</span></span><br><span class="line">        <span class="string">"no-path-concat"</span>: <span class="number">0</span>, <span class="comment">//node中不能使用__dirname或__filename做路径拼接</span></span><br><span class="line">        <span class="string">"no-plusplus"</span>: <span class="number">0</span>, <span class="comment">//禁止使用++，--</span></span><br><span class="line">        <span class="string">"no-process-env"</span>: <span class="number">0</span>, <span class="comment">//禁止使用process.env</span></span><br><span class="line">        <span class="string">"no-process-exit"</span>: <span class="number">0</span>, <span class="comment">//禁止使用process.exit()</span></span><br><span class="line">        <span class="string">"no-proto"</span>: <span class="number">2</span>, <span class="comment">//禁止使用__proto__属性</span></span><br><span class="line">        <span class="string">"no-redeclare"</span>: <span class="number">2</span>, <span class="comment">//禁止重复声明变量</span></span><br><span class="line">        <span class="string">"no-regex-spaces"</span>: <span class="number">2</span>, <span class="comment">//禁止在正则表达式字面量中使用多个空格 /foo bar/</span></span><br><span class="line">        <span class="string">"no-restricted-modules"</span>: <span class="number">0</span>, <span class="comment">//如果禁用了指定模块，使用就会报错</span></span><br><span class="line">        <span class="string">"no-return-assign"</span>: <span class="number">1</span>, <span class="comment">//return 语句中不能有赋值表达式</span></span><br><span class="line">        <span class="string">"no-script-url"</span>: <span class="number">0</span>, <span class="comment">//禁止使用javascript:void(0)</span></span><br><span class="line">        <span class="string">"no-self-compare"</span>: <span class="number">2</span>, <span class="comment">//不能比较自身</span></span><br><span class="line">        <span class="string">"no-sequences"</span>: <span class="number">0</span>, <span class="comment">//禁止使用逗号运算符</span></span><br><span class="line">        <span class="string">"no-shadow"</span>: <span class="number">2</span>, <span class="comment">//外部作用域中的变量不能与它所包含的作用域中的变量或参数同名</span></span><br><span class="line">        <span class="string">"no-shadow-restricted-names"</span>: <span class="number">2</span>, <span class="comment">//严格模式中规定的限制标识符不能作为声明时的变量名使用</span></span><br><span class="line">        <span class="string">"no-spaced-func"</span>: <span class="number">2</span>, <span class="comment">//函数调用时 函数名与()之间不能有空格</span></span><br><span class="line">        <span class="string">"no-sparse-arrays"</span>: <span class="number">2</span>, <span class="comment">//禁止稀疏数组， [1,,2]</span></span><br><span class="line">        <span class="string">"no-sync"</span>: <span class="number">0</span>, <span class="comment">//nodejs 禁止同步方法</span></span><br><span class="line">        <span class="string">"no-ternary"</span>: <span class="number">0</span>, <span class="comment">//禁止使用三目运算符</span></span><br><span class="line">        <span class="string">"no-trailing-spaces"</span>: <span class="number">1</span>, <span class="comment">//一行结束后面不要有空格</span></span><br><span class="line">        <span class="string">"no-this-before-super"</span>: <span class="number">0</span>, <span class="comment">//在调用super()之前不能使用this或super</span></span><br><span class="line">        <span class="string">"no-throw-literal"</span>: <span class="number">2</span>, <span class="comment">//禁止抛出字面量错误 throw "error";</span></span><br><span class="line">        <span class="string">"no-undef"</span>: <span class="number">1</span>, <span class="comment">//不能有未定义的变量</span></span><br><span class="line">        <span class="string">"no-undef-init"</span>: <span class="number">2</span>, <span class="comment">//变量初始化时不能直接给它赋值为undefined</span></span><br><span class="line">        <span class="string">"no-undefined"</span>: <span class="number">2</span>, <span class="comment">//不能使用undefined</span></span><br><span class="line">        <span class="string">"no-unexpected-multiline"</span>: <span class="number">2</span>, <span class="comment">//避免多行表达式</span></span><br><span class="line">        <span class="string">"no-underscore-dangle"</span>: <span class="number">1</span>, <span class="comment">//标识符不能以_开头或结尾</span></span><br><span class="line">        <span class="string">"no-unneeded-ternary"</span>: <span class="number">2</span>, <span class="comment">//禁止不必要的嵌套 var isYes = answer === 1 ? true : false;</span></span><br><span class="line">        <span class="string">"no-unreachable"</span>: <span class="number">2</span>, <span class="comment">//不能有无法执行的代码</span></span><br><span class="line">        <span class="string">"no-unused-expressions"</span>: <span class="number">2</span>, <span class="comment">//禁止无用的表达式</span></span><br><span class="line">        <span class="string">"no-unused-vars"</span>: [<span class="number">2</span>, &#123; <span class="string">"vars"</span>: <span class="string">"all"</span>, <span class="string">"args"</span>: <span class="string">"after-used"</span> &#125;], <span class="comment">//不能有声明后未被使用的变量或参数</span></span><br><span class="line">        <span class="string">"no-use-before-define"</span>: <span class="number">2</span>, <span class="comment">//未定义前不能使用</span></span><br><span class="line">        <span class="string">"no-useless-call"</span>: <span class="number">2</span>, <span class="comment">//禁止不必要的call和apply</span></span><br><span class="line">        <span class="string">"no-void"</span>: <span class="number">2</span>, <span class="comment">//禁用void操作符</span></span><br><span class="line">        <span class="string">"no-var"</span>: <span class="number">0</span>, <span class="comment">//禁用var，用let和const代替</span></span><br><span class="line">        <span class="string">"no-warning-comments"</span>: [<span class="number">1</span>, &#123; <span class="string">"terms"</span>: [<span class="string">"todo"</span>, <span class="string">"fixme"</span>, <span class="string">"xxx"</span>], <span class="string">"location"</span>: <span class="string">"start"</span> &#125;], <span class="comment">//不能有警告备注</span></span><br><span class="line">        <span class="string">"no-with"</span>: <span class="number">2</span>, <span class="comment">//禁用with</span></span><br><span class="line"></span><br><span class="line">        <span class="string">"array-bracket-spacing"</span>: [<span class="number">2</span>, <span class="string">"never"</span>], <span class="comment">//是否允许非空数组里面有多余的空格</span></span><br><span class="line">        <span class="string">"arrow-parens"</span>: <span class="number">0</span>, <span class="comment">//箭头函数用小括号括起来</span></span><br><span class="line">        <span class="string">"arrow-spacing"</span>: <span class="number">0</span>, <span class="comment">//=&gt;的前/后括号</span></span><br><span class="line">        <span class="string">"accessor-pairs"</span>: <span class="number">0</span>, <span class="comment">//在对象中使用getter/setter</span></span><br><span class="line">        <span class="string">"block-scoped-var"</span>: <span class="number">0</span>, <span class="comment">//块语句中使用var</span></span><br><span class="line">        <span class="string">"brace-style"</span>: [<span class="number">1</span>, <span class="string">"1tbs"</span>], <span class="comment">//大括号风格</span></span><br><span class="line">        <span class="string">"callback-return"</span>: <span class="number">1</span>, <span class="comment">//避免多次调用回调什么的</span></span><br><span class="line">        <span class="string">"camelcase"</span>: <span class="number">2</span>, <span class="comment">//强制驼峰法命名</span></span><br><span class="line">        <span class="string">"comma-dangle"</span>: [<span class="number">2</span>, <span class="string">"never"</span>], <span class="comment">//对象字面量项尾不能有逗号</span></span><br><span class="line">        <span class="string">"comma-spacing"</span>: <span class="number">0</span>, <span class="comment">//逗号前后的空格</span></span><br><span class="line">        <span class="string">"comma-style"</span>: [<span class="number">2</span>, <span class="string">"last"</span>], <span class="comment">//逗号风格，换行时在行首还是行尾</span></span><br><span class="line">        <span class="string">"complexity"</span>: [<span class="number">0</span>, <span class="number">11</span>], <span class="comment">//循环复杂度</span></span><br><span class="line">        <span class="string">"computed-property-spacing"</span>: [<span class="number">0</span>, <span class="string">"never"</span>], <span class="comment">//是否允许计算后的键名什么的</span></span><br><span class="line">        <span class="string">"consistent-return"</span>: <span class="number">0</span>, <span class="comment">//return 后面是否允许省略</span></span><br><span class="line">        <span class="string">"consistent-this"</span>: [<span class="number">2</span>, <span class="string">"that"</span>], <span class="comment">//this别名</span></span><br><span class="line">        <span class="string">"constructor-super"</span>: <span class="number">0</span>, <span class="comment">//非派生类不能调用super，派生类必须调用super</span></span><br><span class="line">        <span class="string">"curly"</span>: [<span class="number">2</span>, <span class="string">"all"</span>], <span class="comment">//必须使用 if()&#123;&#125; 中的&#123;&#125;</span></span><br><span class="line">        <span class="string">"default-case"</span>: <span class="number">2</span>, <span class="comment">//switch语句最后必须有default</span></span><br><span class="line">        <span class="string">"dot-location"</span>: <span class="number">0</span>, <span class="comment">//对象访问符的位置，换行的时候在行首还是行尾</span></span><br><span class="line">        <span class="string">"dot-notation"</span>: [<span class="number">0</span>, &#123; <span class="string">"allowKeywords"</span>: <span class="literal">true</span> &#125;], <span class="comment">//避免不必要的方括号</span></span><br><span class="line">        <span class="string">"eol-last"</span>: <span class="number">0</span>, <span class="comment">//文件以单一的换行符结束</span></span><br><span class="line">        <span class="string">"eqeqeq"</span>: <span class="number">2</span>, <span class="comment">//必须使用全等</span></span><br><span class="line">        <span class="string">"func-names"</span>: <span class="number">0</span>, <span class="comment">//函数表达式必须有名字</span></span><br><span class="line">        <span class="string">"func-style"</span>: [<span class="number">0</span>, <span class="string">"declaration"</span>], <span class="comment">//函数风格，规定只能使用函数声明/函数表达式</span></span><br><span class="line">        <span class="string">"generator-star-spacing"</span>: <span class="number">0</span>, <span class="comment">//生成器函数*的前后空格</span></span><br><span class="line">        <span class="string">"guard-for-in"</span>: <span class="number">0</span>, <span class="comment">//for in循环要用if语句过滤</span></span><br><span class="line">        <span class="string">"handle-callback-err"</span>: <span class="number">0</span>, <span class="comment">//nodejs 处理错误</span></span><br><span class="line">        <span class="string">"id-length"</span>: <span class="number">0</span>, <span class="comment">//变量名长度</span></span><br><span class="line">        <span class="string">"indent"</span>: [<span class="number">2</span>, <span class="number">4</span>], <span class="comment">//缩进风格</span></span><br><span class="line">        <span class="string">"init-declarations"</span>: <span class="number">0</span>, <span class="comment">//声明时必须赋初值</span></span><br><span class="line">        <span class="string">"key-spacing"</span>: [<span class="number">0</span>, &#123; <span class="string">"beforeColon"</span>: <span class="literal">false</span>, <span class="string">"afterColon"</span>: <span class="literal">true</span> &#125;], <span class="comment">//对象字面量中冒号的前后空格</span></span><br><span class="line">        <span class="string">"lines-around-comment"</span>: <span class="number">0</span>, <span class="comment">//行前/行后备注</span></span><br><span class="line">        <span class="string">"max-depth"</span>: [<span class="number">0</span>, <span class="number">4</span>], <span class="comment">//嵌套块深度</span></span><br><span class="line">        <span class="string">"max-len"</span>: [<span class="number">0</span>, <span class="number">80</span>, <span class="number">4</span>], <span class="comment">//字符串最大长度</span></span><br><span class="line">        <span class="string">"max-nested-callbacks"</span>: [<span class="number">0</span>, <span class="number">2</span>], <span class="comment">//回调嵌套深度</span></span><br><span class="line">        <span class="string">"max-params"</span>: [<span class="number">0</span>, <span class="number">3</span>], <span class="comment">//函数最多只能有3个参数</span></span><br><span class="line">        <span class="string">"max-statements"</span>: [<span class="number">0</span>, <span class="number">10</span>], <span class="comment">//函数内最多有几个声明</span></span><br><span class="line">        <span class="string">"new-cap"</span>: <span class="number">2</span>, <span class="comment">//函数名首行大写必须使用new方式调用，首行小写必须用不带new方式调用</span></span><br><span class="line">        <span class="string">"new-parens"</span>: <span class="number">2</span>, <span class="comment">//new时必须加小括号</span></span><br><span class="line">        <span class="string">"newline-after-var"</span>: <span class="number">2</span>, <span class="comment">//变量声明后是否需要空一行</span></span><br><span class="line">        <span class="string">"object-curly-spacing"</span>: [<span class="number">0</span>, <span class="string">"never"</span>], <span class="comment">//大括号内是否允许不必要的空格</span></span><br><span class="line">        <span class="string">"object-shorthand"</span>: <span class="number">0</span>, <span class="comment">//强制对象字面量缩写语法</span></span><br><span class="line">        <span class="string">"one-var"</span>: <span class="number">1</span>, <span class="comment">//连续声明</span></span><br><span class="line">        <span class="string">"operator-assignment"</span>: [<span class="number">0</span>, <span class="string">"always"</span>], <span class="comment">//赋值运算符 += -=什么的</span></span><br><span class="line">        <span class="string">"operator-linebreak"</span>: [<span class="number">2</span>, <span class="string">"after"</span>], <span class="comment">//换行时运算符在行尾还是行首</span></span><br><span class="line">        <span class="string">"padded-blocks"</span>: <span class="number">0</span>, <span class="comment">//块语句内行首行尾是否要空行</span></span><br><span class="line">        <span class="string">"prefer-const"</span>: <span class="number">0</span>, <span class="comment">//首选const</span></span><br><span class="line">        <span class="string">"prefer-spread"</span>: <span class="number">0</span>, <span class="comment">//首选展开运算</span></span><br><span class="line">        <span class="string">"prefer-reflect"</span>: <span class="number">0</span>, <span class="comment">//首选Reflect的方法</span></span><br><span class="line">        <span class="string">"quotes"</span>: [<span class="number">1</span>, <span class="string">"single"</span>], <span class="comment">//引号类型 `` "" ''</span></span><br><span class="line">        <span class="string">"quote-props"</span>: [<span class="number">2</span>, <span class="string">"always"</span>], <span class="comment">//对象字面量中的属性名是否强制双引号</span></span><br><span class="line">        <span class="string">"radix"</span>: <span class="number">2</span>, <span class="comment">//parseInt必须指定第二个参数</span></span><br><span class="line">        <span class="string">"id-match"</span>: <span class="number">0</span>, <span class="comment">//命名检测</span></span><br><span class="line">        <span class="string">"require-yield"</span>: <span class="number">0</span>, <span class="comment">//生成器函数必须有yield</span></span><br><span class="line">        <span class="string">"semi"</span>: [<span class="number">2</span>, <span class="string">"always"</span>], <span class="comment">//语句强制分号结尾</span></span><br><span class="line">        <span class="string">"semi-spacing"</span>: [<span class="number">0</span>, &#123; <span class="string">"before"</span>: <span class="literal">false</span>, <span class="string">"after"</span>: <span class="literal">true</span> &#125;], <span class="comment">//分号前后空格</span></span><br><span class="line">        <span class="string">"sort-vars"</span>: <span class="number">0</span>, <span class="comment">//变量声明时排序</span></span><br><span class="line">        <span class="string">"space-after-keywords"</span>: [<span class="number">0</span>, <span class="string">"always"</span>], <span class="comment">//关键字后面是否要空一格</span></span><br><span class="line">        <span class="string">"space-before-blocks"</span>: [<span class="number">0</span>, <span class="string">"always"</span>], <span class="comment">//不以新行开始的块&#123;前面要不要有空格</span></span><br><span class="line">        <span class="string">"space-before-function-paren"</span>: [<span class="number">0</span>, <span class="string">"always"</span>], <span class="comment">//函数定义时括号前面要不要有空格</span></span><br><span class="line">        <span class="string">"space-in-parens"</span>: [<span class="number">0</span>, <span class="string">"never"</span>], <span class="comment">//小括号里面要不要有空格</span></span><br><span class="line">        <span class="string">"space-infix-ops"</span>: <span class="number">0</span>, <span class="comment">//中缀操作符周围要不要有空格</span></span><br><span class="line">        <span class="string">"space-return-throw-case"</span>: <span class="number">2</span>, <span class="comment">//return throw case后面要不要加空格</span></span><br><span class="line">        <span class="string">"space-unary-ops"</span>: [<span class="number">0</span>, &#123; <span class="string">"words"</span>: <span class="literal">true</span>, <span class="string">"nonwords"</span>: <span class="literal">false</span> &#125;], <span class="comment">//一元运算符的前/后要不要加空格</span></span><br><span class="line">        <span class="string">"spaced-comment"</span>: <span class="number">0</span>, <span class="comment">//注释风格要不要有空格什么的</span></span><br><span class="line">        <span class="string">"strict"</span>: <span class="number">2</span>, <span class="comment">//使用严格模式</span></span><br><span class="line">        <span class="string">"use-isnan"</span>: <span class="number">2</span>, <span class="comment">//禁止比较时使用NaN，只能用isNaN()</span></span><br><span class="line">        <span class="string">"valid-jsdoc"</span>: <span class="number">0</span>, <span class="comment">//jsdoc规则</span></span><br><span class="line">        <span class="string">"valid-typeof"</span>: <span class="number">2</span>, <span class="comment">//必须使用合法的typeof的值</span></span><br><span class="line">        <span class="string">"vars-on-top"</span>: <span class="number">2</span>, <span class="comment">//var必须放在作用域顶部</span></span><br><span class="line">        <span class="string">"wrap-iife"</span>: [<span class="number">2</span>, <span class="string">"inside"</span>], <span class="comment">//立即执行函数表达式的小括号风格</span></span><br><span class="line">        <span class="string">"wrap-regex"</span>: <span class="number">0</span>, <span class="comment">//正则表达式字面量用小括号包起来</span></span><br><span class="line">        <span class="string">"yoda"</span>: [<span class="number">2</span>, <span class="string">"never"</span>] <span class="comment">//禁止尤达条件</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Eslint 对于每一个开发者而言都是非常值得使用的，这样会强制你写出高质量且整洁的代码，所以建议大家将Eslint集成进入，来提高项目的质量。&lt;/p&gt;
&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="eslint" scheme="https://ru23.com/tags/eslint/"/>
    
      <category term="前端优化" scheme="https://ru23.com/tags/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>解决.vue文件代码过长的问题</title>
    <link href="https://ru23.com/note/511d4361.html"/>
    <id>https://ru23.com/note/511d4361.html</id>
    <published>2018-11-06T06:04:11.000Z</published>
    <updated>2018-11-06T06:46:47.871Z</updated>
    
    <content type="html"><![CDATA[<p>在工作中，用vue进行开发的，后来发现.vue文件中的逻辑处理特别多的话，那么会导致代码会特别长，即使你打了标签，都觉得写起来很不方便，所以就引发了我的思考，能不能把js和scss单独拎出去，vue文件只是负责写html的，后来我就在网上一顿查啊，终于，功夫不负有心人，让我给查到了，下面我就给大家演示一下把vue文件的html、scss、js如何分开写：</p><p>首先先在vue统计目录下新建一个js、scss文件，如下图所示，名字无所谓，你叫index.js和index.scss都行<br>然后在vue文件中这样写<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class = &quot;loginModuel&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import index from &quot;./index&quot;</span><br><span class="line">    export default&#123;</span><br><span class="line">        ...index</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang = &quot;scss&quot; scoped&gt;</span><br><span class="line">    @import &quot;./index.scss&quot;;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p><p>index.js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    data()&#123;</span><br><span class="line">        <span class="keyword">return</span>&#123;</span><br><span class="line">            msg:<span class="string">"这是登录页面"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>棒极了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在工作中，用vue进行开发的，后来发现.vue文件中的逻辑处理特别多的话，那么会导致代码会特别长，即使你打了标签，都觉得写起来很不方便，所以就引发了我的思考，能不能把js和scss单独拎出去，vue文件只是负责写html的，后来我就在网上一顿查啊，终于，功夫不负有心人，让我
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="vue" scheme="https://ru23.com/tags/vue/"/>
    
      <category term="前端优化" scheme="https://ru23.com/tags/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>基于react的audio组件</title>
    <link href="https://ru23.com/note/de6d4618.html"/>
    <id>https://ru23.com/note/de6d4618.html</id>
    <published>2018-11-06T06:02:41.000Z</published>
    <updated>2018-11-09T03:48:31.881Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>知识点：<br>子组件给父组件传值：<br>参考：<a href="http://taobaofed.org/blog/2016/11/17/react-components-communication/" target="_blank" rel="noopener">http://taobaofed.org/blog/2016/11/17/react-components-communication/</a></p></blockquote><p>父组件<br><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 基于react的audio组件</span></span><br><span class="line"><span class="comment"> * @param &#123;Array&#125; courseWareList 课件列表</span></span><br><span class="line"><span class="comment"> * @buttonResponse &#123;function&#125; 回调audio组件，控制每个audio的属性</span></span><br><span class="line"><span class="comment"> * @author frank</span></span><br><span class="line"><span class="comment"> * @description  </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> Audio <span class="keyword">from</span> <span class="string">'./audio'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">orderRecordCourseDetail</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="keyword">super</span>(props);</span><br><span class="line">        <span class="keyword">this</span>.state = &#123;</span><br><span class="line">            courseWareList: []</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//回调audio组件的值</span></span><br><span class="line">    buttonResponse(list, id, flag) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(list, id, flag)</span><br><span class="line">        list[id].isPlay = flag;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">67</span>, <span class="string">"list值"</span>, list[id]);</span><br><span class="line">        <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">        that.setState(&#123; <span class="attr">courseWareList</span>: list &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div className=<span class="string">'course-information-page'</span>&gt;</span><br><span class="line">                &lt;ul className=<span class="string">'resources'</span>  &gt;</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">this</span>.state.courseWareList.map(<span class="function"><span class="keyword">function</span> (<span class="params">obj, i</span>) </span>&#123;</span><br><span class="line">                            obj.fileType = Util.checkFileType(obj.courseCoursewareName, obj.courseCoursewareType)</span><br><span class="line">                            <span class="keyword">return</span> (</span><br><span class="line">                                &lt;li&gt;</span><br><span class="line">                                    &lt;Audio closeAllAudio=&#123;(courseWareList, id, flag) =&gt; <span class="keyword">this</span>.buttonResponse(courseWareList, id, flag)&#125;</span><br><span class="line">                                        src=&#123;obj.courseCoursewareUrl&#125; id=&#123;i&#125; courseCoursewareName=&#123;obj.courseCoursewareName&#125;</span><br><span class="line">                                        courseWareList=&#123;that.state.courseWareList&#125; isPlay=&#123;obj.isPlay&#125; /&gt;</span><br><span class="line">                                &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">                            )</span></span><br><span class="line"><span class="regexp">                        &#125;, this)</span></span><br><span class="line"><span class="regexp">                    &#125;</span></span><br><span class="line"><span class="regexp">                &lt;/u</span>l&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        )</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default orderRecordCourseDetail</span></span><br></pre></td></tr></table></figure></p><p>子组件 audio.jsx<br><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./audio.scss'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">audio</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="keyword">super</span>(props);</span><br><span class="line">        <span class="keyword">this</span>.state = &#123;</span><br><span class="line">            isMuted: <span class="literal">false</span>,</span><br><span class="line">            volume: <span class="number">100</span>,</span><br><span class="line">            allTime: <span class="number">0</span>,</span><br><span class="line">            currentTime: <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    componentWillMount() &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 暂停函数</span></span><br><span class="line">    pauseAll() &#123;</span><br><span class="line">        <span class="keyword">let</span> audios = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"audio"</span>);</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        [].forEach.call(audios, <span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 将audios中其他的audio全部暂停</span></span><br><span class="line">            i !== self &amp;&amp; i.pause();</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    controlAudio(type, value) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"controlAudio---type"</span>, type);</span><br><span class="line">        <span class="keyword">const</span> &#123; id, src &#125; = <span class="keyword">this</span>.props;</span><br><span class="line">        <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">const</span> audio = <span class="built_in">document</span>.getElementById(<span class="string">`audio<span class="subst">$&#123;id&#125;</span>`</span>);</span><br><span class="line">        <span class="keyword">let</span> courseWareList = <span class="keyword">this</span>.props.courseWareList;</span><br><span class="line">        <span class="keyword">let</span> audios = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"audio"</span>); <span class="comment">// 获取所有audios</span></span><br><span class="line">        <span class="comment">// 给play事件绑定暂停函数</span></span><br><span class="line">        [].forEach.call(audios, <span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">            i.addEventListener(<span class="string">"play"</span>, that.pauseAll.bind(i));</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'allTime'</span>:</span><br><span class="line">                <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                    allTime: audio.duration</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'play'</span>:</span><br><span class="line">                <span class="comment">// 解决音频文件暂停和播放操作间隔时间问题；</span></span><br><span class="line">                <span class="keyword">let</span> isPlaying = audio.currentTime &gt; <span class="number">0</span> &amp;&amp; !audio.paused &amp;&amp; !audio.ended &amp;&amp; audio.readyState &gt; <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span> (!isPlaying) &#123;</span><br><span class="line">                    setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        audio.play().</span><br><span class="line">                            <span class="keyword">catch</span>(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                                <span class="built_in">console</span>.log(<span class="string">""</span>, e.message);</span><br><span class="line">                                <span class="built_in">console</span>.log(<span class="string">""</span>, e.description);</span><br><span class="line">                            &#125;);</span><br><span class="line">                    &#125;, <span class="number">150</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    alert(<span class="string">"网络缓慢，正在加载音频..."</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                courseWareList.map(<span class="function"><span class="keyword">function</span> (<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (that.props.id == index) &#123;</span><br><span class="line">                        courseWareList[index].isPlay = <span class="literal">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        courseWareList[index].isPlay = <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"courseWareList.map"</span>, courseWareList)</span><br><span class="line">                that.props.closeAllAudio(courseWareList, <span class="keyword">this</span>.props.id, <span class="literal">true</span>);</span><br><span class="line">                audio.play();</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'pause'</span>:</span><br><span class="line">                audio.pause();</span><br><span class="line">                <span class="comment">// this.setState(&#123;</span></span><br><span class="line">                <span class="comment">//     isPlay: false</span></span><br><span class="line">                <span class="comment">// &#125;)</span></span><br><span class="line">                courseWareList.map(<span class="function"><span class="keyword">function</span> (<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">                    courseWareList[index].isPlay = <span class="literal">false</span>;</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"courseWareList.map"</span>, courseWareList)</span><br><span class="line">                that.props.closeAllAudio(courseWareList, <span class="keyword">this</span>.props.id, <span class="literal">false</span>);</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'muted'</span>:</span><br><span class="line">                <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                    isMuted: !audio.muted</span><br><span class="line">                &#125;)</span><br><span class="line">                audio.muted = !audio.muted</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'changeCurrentTime'</span>:</span><br><span class="line">                <span class="keyword">let</span> range = <span class="built_in">document</span>.getElementById(<span class="string">`range<span class="subst">$&#123;id&#125;</span>`</span>);</span><br><span class="line">                <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                    currentTime: range.value</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="built_in">console</span>.log(range.value);</span><br><span class="line">                <span class="keyword">if</span> (range.value) &#123;</span><br><span class="line">                    audio.currentTime = range.value</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (value == audio.duration) &#123;</span><br><span class="line">                    <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                        isPlay: <span class="literal">false</span></span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'getCurrentTime'</span>:</span><br><span class="line">                <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                    currentTime: audio.currentTime</span><br><span class="line">                &#125;)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (audio.currentTime == audio.duration) &#123;</span><br><span class="line">                    courseWareList.map(<span class="function"><span class="keyword">function</span> (<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">                        courseWareList[index].isPlay = <span class="literal">false</span>;</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'changeVolume'</span>:</span><br><span class="line">                audio.volume = value / <span class="number">100</span></span><br><span class="line">                <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                    volume: value,</span><br><span class="line">                    isMuted: !value</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    millisecondToDate(time) &#123;</span><br><span class="line">        <span class="keyword">const</span> second = <span class="built_in">Math</span>.floor(time % <span class="number">60</span>)</span><br><span class="line">        <span class="keyword">let</span> minite = <span class="built_in">Math</span>.floor(time / <span class="number">60</span>)</span><br><span class="line">        <span class="comment">// let hour</span></span><br><span class="line">        <span class="comment">// if(minite &gt; 60) &#123;</span></span><br><span class="line">        <span class="comment">//   hour = minite / 60</span></span><br><span class="line">        <span class="comment">//   minite = minite % 60</span></span><br><span class="line">        <span class="comment">//   return `$&#123;Math.floor(hour)&#125;:$&#123;Math.floor(minite)&#125;:$&#123;Math.floor(second)&#125;`</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;minite&#125;</span>:<span class="subst">$&#123;second &gt;= <span class="number">10</span> ? second : <span class="string">`0<span class="subst">$&#123;second&#125;</span>`</span>&#125;</span>`</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">const</span> id = <span class="keyword">this</span>.props.id;</span><br><span class="line">        <span class="keyword">const</span> src = <span class="keyword">this</span>.props.src;</span><br><span class="line">        <span class="keyword">let</span> isPlay = <span class="keyword">this</span>.props.isPlay;</span><br><span class="line">        <span class="keyword">const</span> courseCoursewareName = <span class="keyword">this</span>.props.courseCoursewareName;</span><br><span class="line">        <span class="keyword">let</span> currentTime = <span class="keyword">this</span>.state.currentTime;</span><br><span class="line">        <span class="keyword">let</span> allTime = <span class="keyword">this</span>.state.allTime;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;div className=<span class="string">"audioBox "</span>&gt;</span><br><span class="line">                    &lt;audio id=&#123;<span class="string">`audio<span class="subst">$&#123;id&#125;</span>`</span>&#125; src=&#123;src&#125; preload=&#123;<span class="literal">true</span>&#125;</span><br><span class="line">                        onCanPlay=&#123;() =&gt; <span class="keyword">this</span>.controlAudio(<span class="string">'allTime'</span>)&#125;</span><br><span class="line">                        onTimeUpdate=&#123;(e) =&gt; <span class="keyword">this</span>.controlAudio(<span class="string">'getCurrentTime'</span>)&#125;</span><br><span class="line">                    &gt;</span><br><span class="line">                        您的浏览器不支持 audio 标签。</span><br><span class="line">                    &lt;<span class="regexp">/audio&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">                    &lt;div className='left file'&gt;&#123;courseCoursewareName&#125;&lt;/</span>div&gt;</span><br><span class="line">                    &lt;div</span><br><span class="line">                        className=&#123;isPlay ? <span class="string">'pause'</span> : <span class="string">'play'</span>&#125;</span><br><span class="line">                        onClick=&#123;() =&gt; <span class="keyword">this</span>.controlAudio(isPlay ? <span class="string">'pause'</span> : <span class="string">'play'</span>)&#125;&gt;</span><br><span class="line">                        &lt;i&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">                    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;div className='progress'&gt;</span></span><br><span class="line"><span class="regexp">                        &lt;div className='progress-container'&gt;</span></span><br><span class="line"><span class="regexp">                            &lt;input id=&#123;`range$&#123;id&#125;`&#125;</span></span><br><span class="line"><span class="regexp">                                type="range"</span></span><br><span class="line"><span class="regexp">                                className="time"</span></span><br><span class="line"><span class="regexp">                                step="0.01"</span></span><br><span class="line"><span class="regexp">                                max=&#123;allTime&#125;</span></span><br><span class="line"><span class="regexp">                                value=&#123;currentTime&#125;</span></span><br><span class="line"><span class="regexp">                                onChange=&#123;(value) =&gt; this.controlAudio('changeCurrentTime', id)&#125;</span></span><br><span class="line"><span class="regexp">                                onClick=&#123;(value) =&gt; this.controlAudio('changeCurrentTime', id)&#125;</span></span><br><span class="line"><span class="regexp">                            /</span>&gt;</span><br><span class="line">                            &lt;progress value=&#123;currentTime / allTime&#125; className=<span class="string">" "</span> &gt;<span class="xml"><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></span></span><br><span class="line">                        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">                        &lt;span className="current"&gt;</span></span><br><span class="line"><span class="regexp">                            &#123;this.millisecondToDate(allTime)&#125;</span></span><br><span class="line"><span class="regexp">                        &lt;/</span>span&gt;</span><br><span class="line">                    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">                &lt;/</span>div&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        )</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default audio</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;知识点：&lt;br&gt;子组件给父组件传值：&lt;br&gt;参考：&lt;a href=&quot;http://taobaofed.org/blog/2016/11/17/react-components-communication/&quot; target=&quot;_blank&quot; rel=
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="react" scheme="https://ru23.com/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>2018年11月todolist</title>
    <link href="https://ru23.com/note/b66af66b.html"/>
    <id>https://ru23.com/note/b66af66b.html</id>
    <published>2018-11-03T12:38:59.000Z</published>
    <updated>2018-11-10T10:38:09.640Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div>]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
      <category term="todolist" scheme="https://ru23.com/categories/todolist/"/>
    
    
  </entry>
  
  <entry>
    <title>get请求中特殊字符&amp;的处理</title>
    <link href="https://ru23.com/note/540b8f23.html"/>
    <id>https://ru23.com/note/540b8f23.html</id>
    <published>2018-11-01T03:39:23.000Z</published>
    <updated>2018-11-01T08:10:12.994Z</updated>
    
    <content type="html"><![CDATA[<p>当我们的请求的url为:<br><a href="http://localhost:8080/interface?parameter=kalman03&amp;kalman&amp;1" target="_blank" rel="noopener">http://localhost:8080/interface?parameter=kalman03&amp;kalman&amp;1</a><br>或许你预期在服务器端获得的parameter的结果为kalman03#kalman#1,错！！！实际上得到parameter的值为kalman03。</p><p>这究竟是为什么呢？</p><p>#####原因：<br>parameter的值含有特殊字符&amp;，浏览器自动截断&amp;字符和其后面的值，这样得到的值就为kalman03。</p><p><strong>拓展</strong><br>当参数值中含有特殊字符 <code>?!=()#%&amp;</code> 的时候，获得的值同样也会出现与预期结果不一致的情况。</p><p>#####解决方案：<br>方法1：通过post方式传递数据；<br>方法2：对参数进行一次编码parameter=escape(parameter)；</p><p>JavaScript escape() 函数的功能是把其中某些字符替换成了十六进制的转义序列。该方法不会对ASCII 字母和数字进行编码，也不会对下面这些 ASCII 标点符号进行编码： - _ . ! ~ * ‘ ( ) 。其他所有的字符都会被转义序列替换。具体参考：<a href="http://www.w3school.com.cn/js/jsref_escape.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/js/jsref_escape.asp</a>.<br>这样来就不会出现自动截断或者其他意想不到的效果。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;当我们的请求的url为:&lt;br&gt;&lt;a href=&quot;http://localhost:8080/interface?parameter=kalman03&amp;amp;kalman&amp;amp;1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://local
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="踩过的坑" scheme="https://ru23.com/tags/%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"/>
    
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>前端迷 (front-end fan)</title>
  
  <subtitle>frank，前端开发爱好者，沉迷前端，无法自拔,欢迎一切技术交流（不局限于前端），邮箱fanqianweb@gmail.com</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ru23.com/"/>
  <updated>2018-11-09T07:29:25.711Z</updated>
  <id>https://ru23.com/</id>
  
  <author>
    <name>frank</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>save-dev 和--save的区别</title>
    <link href="https://ru23.com/note/3c8059e3.html"/>
    <id>https://ru23.com/note/3c8059e3.html</id>
    <published>2018-11-09T07:29:08.000Z</published>
    <updated>2018-11-09T07:29:25.711Z</updated>
    
    <content type="html"><![CDATA[<p>–save 会把依赖包名称添加到 package.json 文件 dependencies 键下，</p><p>devDependencies 下列出的模块，是我们<strong>开发</strong>时用的，比如 我们安装 js的压缩包gulp-uglify 时我们采用的是 “npm install –save-dev gulp-uglify ” 命令安装，因为我们在发布后用不到它，而只是在我们开发才用到它</p><p>–save-dev 则添加到 package.json 文件 devDependencies 键</p><p>dependencies 下的模块，则是我们<strong>发布后</strong>还需要依赖的模块，譬如像jQuery库或者Angular框架类似的，我们在开发完后后肯定还要依赖它们，否则就运行不了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;–save 会把依赖包名称添加到 package.json 文件 dependencies 键下，&lt;/p&gt;
&lt;p&gt;devDependencies 下列出的模块，是我们&lt;strong&gt;开发&lt;/strong&gt;时用的，比如 我们安装 js的压缩包gulp-uglify 时我们采用
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
  </entry>
  
  <entry>
    <title>vue组件之间传值</title>
    <link href="https://ru23.com/note/8b0c3b50.html"/>
    <id>https://ru23.com/note/8b0c3b50.html</id>
    <published>2018-11-09T07:25:13.000Z</published>
    <updated>2018-11-09T07:25:28.423Z</updated>
    
    <content type="html"><![CDATA[<p>vue2.0组件之间的传值</p><p>“down”—&gt;指的是下的意思，即父组件向子组件传值，用props；“up”—&gt;指的是上的意思，即子组件想父组件传值，用emit。</p><h3 id="1-子组件向父组件的传值："><a href="#1-子组件向父组件的传值：" class="headerlink" title="1.子组件向父组件的传值："></a>1.子组件向父组件的传值：</h3><p><em>Child.vue</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;child&quot;&gt;</span><br><span class="line">    &lt;h1&gt;子组件&lt;/h1&gt;</span><br><span class="line">    &lt;button v-on:click=&quot;childToParent&quot;&gt;想父组件传值&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default&#123;</span><br><span class="line">    name: &apos;child&apos;,</span><br><span class="line">    data()&#123;</span><br><span class="line">      return &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      childToParent()&#123;</span><br><span class="line">        this.$emit(&quot;childToParentMsg&quot;, &quot;子组件向父组件传值&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p><em>parent.vue</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;parent&quot;&gt;</span><br><span class="line">    &lt;h1&gt;父组件&lt;/h1&gt;</span><br><span class="line">    &lt;Child v-on:childToParentMsg=&quot;showChildToParentMsg&quot; &gt;&lt;/Child&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import Child from &apos;./child/Child.vue&apos;</span><br><span class="line">  export default&#123;</span><br><span class="line">      name:&quot;parent&quot;,</span><br><span class="line">    data()&#123;</span><br><span class="line">      return &#123;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      showChildToParentMsg:function(data)&#123;</span><br><span class="line">        alert(&quot;父组件显示信息：&quot;+data)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;Child&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h3 id="2-父组件向子组件传值"><a href="#2-父组件向子组件传值" class="headerlink" title="2.父组件向子组件传值"></a>2.父组件向子组件传值</h3><p><em>parent.vue</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;parent&quot;&gt;</span><br><span class="line">    &lt;h1&gt;父组件&lt;/h1&gt;</span><br><span class="line">    &lt;Child v-bind:parentToChild=&quot;parentMsg&quot;&gt;&lt;/Child&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import Child from &apos;./child/Child.vue&apos;</span><br><span class="line">  export default&#123;</span><br><span class="line">     name:&quot;parent&quot;,</span><br><span class="line">    data()&#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        parentMsg:&apos;父组件向子组件传值&apos;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;Child&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><em>child.vue</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;child&quot;&gt;</span><br><span class="line">    &lt;h1&gt;子组件&lt;/h1&gt;</span><br><span class="line">    &lt;span&gt;子组件显示信息：&#123;&#123;parentToChild&#125;&#125;&lt;/span&gt;&lt;br&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default&#123;</span><br><span class="line">    name: &apos;child&apos;,</span><br><span class="line">    data()&#123;</span><br><span class="line">      return &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    props:[&quot;parentToChild&quot;]</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="3-采用eventBus-js传值—兄弟组件间的传值"><a href="#3-采用eventBus-js传值—兄弟组件间的传值" class="headerlink" title="3.采用eventBus.js传值—兄弟组件间的传值"></a>3.采用eventBus.js传值—兄弟组件间的传值</h3><p><em>eventBus.js</em><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'Vue'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vue()</span><br></pre></td></tr></table></figure></p><p><em>App.vue</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;secondChild&gt;&lt;/secondChild&gt;</span><br><span class="line">    &lt;firstChild&gt;&lt;/firstChild&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import FirstChild from &apos;./components/FirstChild&apos;</span><br><span class="line">import SecondChild from &apos;./components/SecondChild&apos;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;app&apos;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    FirstChild,</span><br><span class="line">    SecondChild,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p><em>FirstChild.vue</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;firstChild&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; placeholder=&quot;请输入文字&quot; v-model=&quot;message&quot;&gt;</span><br><span class="line">    &lt;button @click=&quot;showMessage&quot;&gt;向组件传值&lt;/button&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;span&gt;&#123;&#123;message&#125;&#125;&lt;/span&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import bus from &apos;../assets/eventBus&apos;;</span><br><span class="line">  export default&#123;</span><br><span class="line">    name: &apos;firstChild&apos;,</span><br><span class="line">    data () &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        message: &apos;你好&apos;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      showMessage () &#123;</span><br><span class="line">       alert(this.message)</span><br><span class="line">        bus.$emit(&apos;userDefinedEvent&apos;, this.message);//传值</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p><em>SecondChild.vue</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div id=&quot;SecondChild&quot;&gt;</span><br><span class="line">        &lt;h1&gt;&#123;&#123;message&#125;&#125;&lt;/h1&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import bus from &apos;../assets/eventBus&apos;;</span><br><span class="line">    export default&#123;</span><br><span class="line">        name:&apos;SecondChild&apos;,</span><br><span class="line">        data()&#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                message: &apos;&apos;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        mounted()&#123;</span><br><span class="line">            var self = this;</span><br><span class="line">            bus.$on(&apos;userDefinedEvent&apos;,function(message)&#123;</span><br><span class="line">                self.message = message;//接值</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;vue2.0组件之间的传值&lt;/p&gt;
&lt;p&gt;“down”—&amp;gt;指的是下的意思，即父组件向子组件传值，用props；“up”—&amp;gt;指的是上的意思，即子组件想父组件传值，用emit。&lt;/p&gt;
&lt;h3 id=&quot;1-子组件向父组件的传值：&quot;&gt;&lt;a href=&quot;#1-子组件向父
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="vue" scheme="https://ru23.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>$nextTick的作用</title>
    <link href="https://ru23.com/note/891492f1.html"/>
    <id>https://ru23.com/note/891492f1.html</id>
    <published>2018-11-09T07:23:02.000Z</published>
    <updated>2018-11-09T07:23:08.212Z</updated>
    
    <content type="html"><![CDATA[<p>请看如下一段代码：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    list: []</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.get()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    get: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.$http.get(<span class="string">'/api/article'</span>).then(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.list = res.data.data.list</span><br><span class="line">        <span class="comment">// ref  list 引用了ul元素，我想把第一个li颜色变为红色</span></span><br><span class="line">        <span class="keyword">this</span>.$refs.list.getElementsByTagName(<span class="string">'li'</span>)[<span class="number">0</span>].style.color = <span class="string">'red'</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>在获取到数据后赋值给数据模型中list属性，然后想引用ul元素找到第一个li把它的颜色变为红色，但是事实上，这个要报错了，我们知道，在执行这句话时，ul下面并没有li，也就是说刚刚进行的赋值操作，当前并没有引起视图层的更新。因此，在这样的情况下，vue给我们提供了$nextTick方法，如果我们想对未来更新后的视图进行操作，我们只需要把要执行的函数传递给this.$nextTick方法，vue就会给我们做这个工作。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> that.$nextTick(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.$http.get(<span class="string">"/api/article"</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">this</span>.list = res.data.data.list;</span><br><span class="line">            <span class="comment">// ref  list 引用了ul元素，我想把第一个li颜色变为红色</span></span><br><span class="line">             <span class="keyword">this</span>.$refs.list.getElementsByTagName(<span class="string">"li"</span>)[<span class="number">0</span>].style.color =<span class="string">"red"</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>  这就是一个this.$nextTick的实现，其中利用了优雅降序的巧妙手法，使代码尽可能优化。而且还提供了promise的写法，虽然我们不经常用，但是有总比没有好。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;请看如下一段代码：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;b
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="vue" scheme="https://ru23.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Drop）事件详解（摘自w3school）</title>
    <link href="https://ru23.com/note/undefined.html"/>
    <id>https://ru23.com/note/undefined.html</id>
    <published>2018-11-09T07:22:12.000Z</published>
    <updated>2018-11-09T07:22:22.761Z</updated>
    
    <content type="html"><![CDATA[<h3 id="设置元素为可拖放"><a href="#设置元素为可拖放" class="headerlink" title="设置元素为可拖放"></a>设置元素为可拖放</h3><p>首先，为了使元素可拖动，把 draggable 属性设置为 true ：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">draggable</span>=<span class="string">"true"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="拖动什么-ondragstart-和-setData"><a href="#拖动什么-ondragstart-和-setData" class="headerlink" title="拖动什么 - ondragstart 和 setData()"></a>拖动什么 - ondragstart 和 setData()</h3><p>然后，规定当元素被拖动时，会发生什么。<br>在上面的例子中，ondragstart 属性调用了一个函数，drag(event)，它规定了被拖动的数据。<br>dataTransfer.setData() 方法设置被拖数据的数据类型和值：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drag</span>(<span class="params">ev</span>) </span>&#123;</span><br><span class="line">ev.dataTransfer.setData(<span class="string">"Text"</span>, ev.target.id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在这个例子中，数据类型是 “Text”，值是可拖动元素的 id (“drag1”)。</p><h3 id="放到何处-ondragover"><a href="#放到何处-ondragover" class="headerlink" title="放到何处 - ondragover"></a>放到何处 - ondragover</h3><p>ondragover 事件规定在何处放置被拖动的数据。<br>默认地，无法将数据/元素放置到其他元素中。如果需要设置允许放置，我们必须阻止对元素的默认处理方式。<br>这要通过调用 ondragover 事件的 event.preventDefault() 方法：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">event.preventDefault()</span><br></pre></td></tr></table></figure></p><h3 id="进行放置-ondrop"><a href="#进行放置-ondrop" class="headerlink" title="进行放置 - ondrop"></a>进行放置 - ondrop</h3><p>当放置被拖数据时，会发生 drop 事件。<br>在上面的例子中，ondrop 属性调用了一个函数，drop(event)：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drop</span>(<span class="params">ev</span>) </span>&#123;</span><br><span class="line">ev.preventDefault();</span><br><span class="line"><span class="keyword">var</span> data = ev.dataTransfer.getData(<span class="string">"Text"</span>);</span><br><span class="line">ev.target.appendChild(<span class="built_in">document</span>.getElementById(data));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>代码解释：</strong></p><ol><li>调用 preventDefault() 来避免浏览器对数据的默认处理（drop 事件的默认行为是以链接形式打开）</li><li>通过 dataTransfer.getData(“Text”) 方法获得被拖的数据。该方法将返回在 setData() 方法中设置为相同类型的任何数据。</li><li>被拖数据是被拖元素的 id (“drag1”)</li><li>把被拖元素追加到放置元素（目标元素）中</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;设置元素为可拖放&quot;&gt;&lt;a href=&quot;#设置元素为可拖放&quot; class=&quot;headerlink&quot; title=&quot;设置元素为可拖放&quot;&gt;&lt;/a&gt;设置元素为可拖放&lt;/h3&gt;&lt;p&gt;首先，为了使元素可拖动，把 draggable 属性设置为 true ：&lt;br&gt;&lt;figur
      
    
    </summary>
    
    
      <category term="html5" scheme="https://ru23.com/tags/html5/"/>
    
  </entry>
  
  <entry>
    <title>vue.js 兄弟组件传值</title>
    <link href="https://ru23.com/note/83060485.html"/>
    <id>https://ru23.com/note/83060485.html</id>
    <published>2018-11-09T07:20:45.000Z</published>
    <updated>2018-11-09T07:20:55.974Z</updated>
    
    <content type="html"><![CDATA[<p>1、兄弟之间传递数据需要借助于事件车，通过事件车的方式传递数据</p><p>2、创建一个Vue的实例，让各个兄弟共用同一个事件机制。</p><p>3、传递数据方，通过一个事件触发bus.$emit(方法名，传递的数据)。</p><p>4、接收数据方，通过mounted(){}触发bus.$on(方法名，function(接收数据的参数){用该组件的数据接收传递过来的数据})，此时函数中的this已经发生了改变，可以使用箭头函数。</p><p>源码：</p><p>我们可以创建一个单独的js文件<strong>eventVue.js,</strong>内容如下<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vue</span><br></pre></td></tr></table></figure></p><p>假如父组件如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">     &lt;components-a&gt;&lt;/components-a&gt;</span><br><span class="line">     &lt;components-b&gt;&lt;/components-b&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure></p><p><strong>组件a</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">      &lt;div class=&quot;components-a&quot;&gt;</span><br><span class="line">           &lt;button @click=&quot;abtn&quot;&gt;A按钮&lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import eventVue from &apos;../../js/event.js&apos;</span><br><span class="line">export default &#123;</span><br><span class="line">    ...</span><br><span class="line">      methods:&#123;</span><br><span class="line">           abtn:function()&#123;</span><br><span class="line">                   eventVue .$emit(&quot;myFun&quot;,&quot;组件A的值&quot;)   //$emit这个方法会触发一个事件</span><br><span class="line">           &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p><strong>组件b</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">     &lt;div class=&quot;components-a&quot;&gt;</span><br><span class="line">         &lt;div&gt;&#123;&#123;btext&#125;&#125;&lt;/div&gt;</span><br><span class="line">     &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import eventVue from &apos;../../js/event.js&apos;</span><br><span class="line">export default &#123;</span><br><span class="line">    ....</span><br><span class="line">   created:function()&#123;</span><br><span class="line">       this.bbtn();</span><br><span class="line">   &#125;,</span><br><span class="line">   methods:&#123;</span><br><span class="line">       bbtn:function()&#123;</span><br><span class="line">            eventVue .$on(&quot;myFun&quot;,(message)=&gt;&#123;   //这里最好用箭头函数，不然this指向有问题</span><br><span class="line">                 this.btext = message      </span><br><span class="line">            &#125;)</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、兄弟之间传递数据需要借助于事件车，通过事件车的方式传递数据&lt;/p&gt;
&lt;p&gt;2、创建一个Vue的实例，让各个兄弟共用同一个事件机制。&lt;/p&gt;
&lt;p&gt;3、传递数据方，通过一个事件触发bus.$emit(方法名，传递的数据)。&lt;/p&gt;
&lt;p&gt;4、接收数据方，通过mounted
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="vue" scheme="https://ru23.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>韦博英语教师端vue踩坑记录（2）</title>
    <link href="https://ru23.com/note/a9e5fae8.html"/>
    <id>https://ru23.com/note/a9e5fae8.html</id>
    <published>2018-11-09T07:12:15.000Z</published>
    <updated>2018-11-09T07:14:55.891Z</updated>
    
    <content type="html"><![CDATA[<h3 id="vue项目在nginx中部署"><a href="#vue项目在nginx中部署" class="headerlink" title="vue项目在nginx中部署"></a>vue项目在nginx中部署</h3><p><strong>nginx的配置文件：</strong><br>添加如下server<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 7070;</span><br><span class="line">server_name localhost;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_page 500 502 503 504 / 50x.html;</span><br><span class="line">location = /50x.html &#123;</span><br><span class="line">        root html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        root /data / xytest / project / zkview - ui / dist;</span><br><span class="line">index index.html;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">try_files $uri $uri / @router;</span><br><span class="line">index index.html;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">location@router &#123;</span><br><span class="line">rewrite ^ . * $ / index.html last;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>添加完成后热加载nginx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx - s reload</span><br></pre></td></tr></table></figure></p><p>nginx如何正确配置部署在子目录的vue项目（History模式）<br><strong>Q1：Vue项目用Webpack打包后放到服务器上，但访问是404页面？</strong><br>原因是vue的项目为单页应用，路由找不到所致。所以要在nginx服务器配置对所有的路径或者文件夹进行跳转。重定向到首页index下，这样就都能找到路由了。<br>nginx配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">  try_files $uri $uri/ /index.html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>因为项目是子项目，所以不能放在根目录下，index.html需要放在一个新建的teacher目录 </p><p><strong>Q2：配置好nginx后，发现这样虽然不会404，但是页面全部转到了根目录的index.html，访问的是空白页面？</strong></p><p>于是调整了nginx和vue-router的配置如下：<br>nginx配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">###教师端 vue项目</span><br><span class="line">location /teacher/ &#123;</span><br><span class="line">    index  index.html index.htm index.php;</span><br><span class="line">    try_files $uri $uri/ /teacher/index.html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>vue路由配置<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">routes: [&#123;</span><br><span class="line">path: <span class="string">'/teacher/login'</span>,</span><br><span class="line">name: <span class="string">'Login'</span>,</span><br><span class="line">component: Login,</span><br><span class="line">meta: &#123;</span><br><span class="line">title: <span class="string">'教师端登录中心'</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">path: <span class="string">'/teacher/courseCenter'</span>,</span><br><span class="line">name: <span class="string">'CourseCenter'</span>,</span><br><span class="line">component: CourseCenter,</span><br><span class="line">meta: &#123;</span><br><span class="line">title: <span class="string">'CourseCenter'</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure></p><blockquote><p>拓展：<br>apache 做web服务器的虚拟空间，开启.htaccess文件支持,也可以解决vue项目配置子目录的问题。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">  Options +FollowSymlinks</span><br><span class="line">  RewriteEngine On</span><br><span class="line">  </span><br><span class="line">  RewriteCond %&#123;REQUEST_URI&#125; ^/(teacher|teacher/.*)$</span><br><span class="line">  RewriteRule ^/teacher/index\.html$ - [L,NC]</span><br><span class="line">  </span><br><span class="line">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">  RewriteRule ^(teacher|teacher/.*)$ teacher/index.html [L]</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure><h3 id="element-ui-的-upload组件的clearFiles方法调用方法"><a href="#element-ui-的-upload组件的clearFiles方法调用方法" class="headerlink" title="element-ui 的 upload组件的clearFiles方法调用方法"></a>element-ui 的 upload组件的clearFiles方法调用方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-button @click=&quot;clearUploadedImage&quot;&gt;重新上传&lt;/el-button&gt;</span><br><span class="line">    &lt;el-upload ref=&quot;upload&quot;&gt;&lt;/el-upload&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    clearUploadedImage () &#123;</span><br><span class="line">      this.$refs.upload.clearFiles();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="vue模板初始化报错："><a href="#vue模板初始化报错：" class="headerlink" title="vue模板初始化报错："></a>vue模板初始化报错：</h3><p>vue模板初始化报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Failed to compile with 2 errors                                                                                                                                                                                                                                                           21:49:02</span><br><span class="line"> error  in ./src/App.vue</span><br><span class="line"></span><br><span class="line">Module build failed: Error: No parser and no file path given, couldn&apos;t infer a parser.</span><br><span class="line">    at normalize (path\node_modules\prettier\index.js:7051:13)</span><br><span class="line">    at formatWithCursor (path\node_modules\prettier\index.js:10370:12)</span><br><span class="line">    at path\node_modules\prettier\index.js:31115:15</span><br><span class="line">    at Object.format (path\node_modules\prettier\index.js:31134:12)</span><br><span class="line">    at Object.module.exports (path\node_modules\vue-loader\lib\template-compiler\index.js:80:23)</span><br><span class="line"></span><br><span class="line"> @ ./src/App.vue 11:0-354</span><br><span class="line"> @ ./src/main.js</span><br><span class="line"> @ multi (webpack)-dev-server/client?http://localhost:8080 webpack/hot/dev-server ./src/main.js</span><br><span class="line"></span><br><span class="line"> error  in ./src/components/HelloWorld.vue</span><br><span class="line"></span><br><span class="line">Module build failed: Error: No parser and no file path given, couldn&apos;t infer a parser.</span><br><span class="line">    at normalize (path\node_modules\prettier\index.js:7051:13)</span><br><span class="line">    at formatWithCursor (path\node_modules\prettier\index.js:10370:12)</span><br><span class="line">    at path\node_modules\prettier\index.js:31115:15</span><br><span class="line">    at Object.format (path\node_modules\prettier\index.js:31134:12)</span><br><span class="line">    at Object.module.exports (path\node_modules\vue-loader\lib\template-compiler\index.js:80:23)</span><br></pre></td></tr></table></figure><p>Prettier has caused this regression in their 1.13.0 update which occurred today. Downgrade to the previous version to fix this error:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev prettier@1.12.0</span><br><span class="line"></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure></p><p>That should do the trick.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;vue项目在nginx中部署&quot;&gt;&lt;a href=&quot;#vue项目在nginx中部署&quot; class=&quot;headerlink&quot; title=&quot;vue项目在nginx中部署&quot;&gt;&lt;/a&gt;vue项目在nginx中部署&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;nginx的配置文件：&lt;/s
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
  </entry>
  
  <entry>
    <title>vue watch监听对象及对应值的变化(computed)</title>
    <link href="https://ru23.com/note/4560708.html"/>
    <id>https://ru23.com/note/4560708.html</id>
    <published>2018-11-09T06:56:17.000Z</published>
    <updated>2018-11-09T06:56:17.348Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
  </entry>
  
  <entry>
    <title>如何修改ElementUI源码</title>
    <link href="https://ru23.com/note/2d4f9329.html"/>
    <id>https://ru23.com/note/2d4f9329.html</id>
    <published>2018-11-09T06:23:59.000Z</published>
    <updated>2018-11-09T06:24:20.410Z</updated>
    
    <content type="html"><![CDATA[<p>在使用element-ui的时候，有些功能不能满足我们的需求，就需要修改源码来满足。阅读官方给的教程，对于我这小菜鸟过于简略，结合自己的实践整理一下修改方法：</p><p>克隆element官方的仓库到本地<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/ElemeFE/element.git</span><br></pre></td></tr></table></figure></p><p>下载到本地之后安装依赖包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd element &amp;&amp; npm install</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure></p><p>依赖包安装成后在 默认会在 <a href="http://localhost:8085/" target="_blank" rel="noopener">http://localhost:8085/</a> 打开本地网页，会看到element首页</p><p>进入element文件夹，packages文件夹就是我们要修改源码的目录文件夹<br>比如我们进入 button文件夹里面的src文件，找到button.vue，我们修改class=”el-button”，添加class=”el-button el-button-customize”一个自定义的class,然后保存。切换本地element首页，找到button组件，可以用审查元素查看，就会看到class=”el-button el-button-customize”已经被修改了。</p><p>切换到命令行工具 执行<br>npm run dist</p><p>命令行执行完毕，会在element文件夹里面生成lib文件夹</p><p>复制lib文件夹到自己的项目目录<br>找到node_modules并进入,找到element-ui文件夹替换里面的lib文件夹</p><p>验证是否成功<br>进入自己的项目文件目录，打开并运行项目，然后找到任意的button组件，验证button是否添加了自定义的el-button-customize 。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在使用element-ui的时候，有些功能不能满足我们的需求，就需要修改源码来满足。阅读官方给的教程，对于我这小菜鸟过于简略，结合自己的实践整理一下修改方法：&lt;/p&gt;
&lt;p&gt;克隆element官方的仓库到本地&lt;br&gt;&lt;figure class=&quot;highlight plai
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="vue" scheme="https://ru23.com/tags/vue/"/>
    
      <category term="elementUI" scheme="https://ru23.com/tags/elementUI/"/>
    
  </entry>
  
  <entry>
    <title>ie和safari浏览器new Date(yyyy-MM-dd HH:mm:ss )为NaN的解决方案</title>
    <link href="https://ru23.com/note/f192b16c.html"/>
    <id>https://ru23.com/note/f192b16c.html</id>
    <published>2018-11-09T06:22:27.000Z</published>
    <updated>2018-11-09T07:19:01.760Z</updated>
    
    <content type="html"><![CDATA[<p>今天碰到一个bug，在Safari浏览器里从日历选择器里面获取时间的时候，传给后台会报错，经排查发现，通过IE开发者工具控制台执行js代码，new Date(“2018-04-03 13:11:12”).getTime() 在IE下和Safari会返回NaN，而其他浏览器可以正常返回毫秒数。<br>chorme<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://user-images.githubusercontent.com/22697565/38230382-2911a2b2-3740-11e8-8ff1-ae8dbbb27098.png" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure></p><p>ie和safari<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://user-images.githubusercontent.com/22697565/38230404-41cc0b62-3740-11e8-9cb6-f2b14a0a4cb4.png" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure></p><p>由于毫秒数在IE浏览器下没有正确获得，所以在之后的计算中，计算结果为undefined</p><p></p><h3>解决方案</h3><p></p><h4>方法1：自定义一个NewDate方法，通过调用NewDate方法获得毫秒数</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">NewDate</span>(<span class="params">str</span>)</span>&#123;  </span><br><span class="line">  <span class="keyword">if</span>(!str)&#123;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">  &#125;  </span><br><span class="line">  arr=str.split(<span class="string">" "</span>);  </span><br><span class="line">  d=arr[<span class="number">0</span>].split(<span class="string">"-"</span>);  </span><br><span class="line">  t=arr[<span class="number">1</span>].split(<span class="string">":"</span>);  </span><br><span class="line">  <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();   </span><br><span class="line">  date.setUTCFullYear(d[<span class="number">0</span>], d[<span class="number">1</span>] - <span class="number">1</span>, d[<span class="number">2</span>]);   </span><br><span class="line">  date.setUTCHours(t[<span class="number">0</span>], t[<span class="number">1</span>], t[<span class="number">2</span>], <span class="number">0</span>);   </span><br><span class="line">  <span class="keyword">return</span> date;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h4>方法2：通过Date.parse()方法</h4><br>parse() 方法可解析一个日期时间字符串，并返回 1970/1/1 午夜距离该日期时间的毫秒数。<br>由于parse()方法参数的日期格式为yyyy/MM/dd，所以需要将现有的日期格式通过replace()方法将日期字符串替换成yyyy/MM/dd格式。<p></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date=<span class="string">"2014-01-01 12:11:12"</span>;  </span><br><span class="line"><span class="built_in">Date</span>.parse(date.replace(<span class="regexp">/-/g</span>,<span class="string">"/"</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天碰到一个bug，在Safari浏览器里从日历选择器里面获取时间的时候，传给后台会报错，经排查发现，通过IE开发者工具控制台执行js代码，new Date(“2018-04-03 13:11:12”).getTime() 在IE下和Safari会返回NaN，而其他浏览器可
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="javascript" scheme="https://ru23.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>韦博微信端项目微信内置浏览器播放视频碰到的问题</title>
    <link href="https://ru23.com/note/75c16ddd.html"/>
    <id>https://ru23.com/note/75c16ddd.html</id>
    <published>2018-11-09T06:17:46.000Z</published>
    <updated>2018-11-09T06:54:26.478Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1.如何小窗不全屏( 亲测安卓微信 ios下通用)</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span>  <span class="attr">src</span>=<span class="string">""</span>  <span class="attr">controls</span>=<span class="string">""</span> <span class="attr">x5-playsinline</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag"> <span class="attr">playsinline</span>=<span class="string">""</span> <span class="attr">webkit-playsinline</span>=<span class="string">""</span> <span class="attr">poster</span>=<span class="string">""</span></span></span><br><span class="line"><span class="tag"> <span class="attr">preload</span>=<span class="string">"auto"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>2.页面打开自动播放</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  使用微信的wx.ready事件</span></span><br><span class="line"><span class="keyword">var</span> wx = <span class="built_in">require</span>(<span class="string">'weixin-js-sdk'</span>);</span><br><span class="line">wx.config(&#123;</span><br><span class="line">    <span class="comment">// 配置信息, 即使不正确也能使用 wx.ready</span></span><br><span class="line">    debug: <span class="literal">false</span>,</span><br><span class="line">    appId: <span class="string">''</span>,</span><br><span class="line">    timestamp: <span class="number">1</span>,</span><br><span class="line">    nonceStr: <span class="string">''</span>,</span><br><span class="line">    signature: <span class="string">''</span>,</span><br><span class="line">    jsApiList: []</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">wx.ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'media'</span>).play(); <span class="comment">//video标签id=media</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>3.React-js设置video的playsinline属性</strong></p><p>最近的应该项目用到了video标签，发现这类标签的属性，在jsx定义根本不起作用~<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">class</span>=<span class="string">"video"</span> <span class="attr">x-webkit-airplay</span>=<span class="string">"true"</span>  <span class="attr">webkit-playsinline</span>=<span class="string">"true"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">src</span>=<span class="string">"https://teenagercdn.speakhi.com/front/web/static/video/login.mp4"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>就可以了，但是在react-js里面 webkit-playsinline这样写似乎没有作用，应该如何写？</p><p><a href="https://github.com/facebook/react/issues/140" target="_blank" rel="noopener">参考</a></p><p><strong>方案1：</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">video</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props) &#123; </span><br><span class="line">        <span class="keyword">super</span>(props);</span><br><span class="line">        <span class="keyword">this</span>.state=&#123;</span><br><span class="line">      </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    componentWillMount() &#123;</span><br><span class="line">         Util.weixinTitle(<span class="string">"视频播放"</span>);</span><br><span class="line">         <span class="keyword">const</span> that=<span class="keyword">this</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    componentDidMount()&#123;</span><br><span class="line">        <span class="keyword">let</span> videoPlayer=<span class="built_in">document</span>.getElementById(<span class="string">'videoCtrl'</span>);</span><br><span class="line">        videoPlayer.setAttribute(<span class="string">'x5-playsinline'</span> ,<span class="string">''</span>)</span><br><span class="line">        videoPlayer.setAttribute(<span class="string">'playsinline'</span> ,<span class="string">''</span>)</span><br><span class="line">        videoPlayer.setAttribute(<span class="string">'webkit-playsinline'</span> ,<span class="string">''</span>)        </span><br><span class="line">    &#125;</span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">const</span> that=<span class="keyword">this</span>;</span><br><span class="line">   </span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div className=<span class="string">'bg-black'</span>&gt;</span><br><span class="line">                 </span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        )</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">export default video</span></span><br></pre></td></tr></table></figure></p><p><strong>方案2. react自带的设置私有属性方法</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></span><br><span class="line"></span><br><span class="line">React.registerCustomAttributePrefix(<span class="string">'e-'</span>);</span><br><span class="line">React.registerCustomAttributePrefix(<span class="string">'ng-'</span>);</span><br></pre></td></tr></table></figure><h3 id="html5-video微信浏览器视频不能自动播放"><a href="#html5-video微信浏览器视频不能自动播放" class="headerlink" title="html5 video微信浏览器视频不能自动播放"></a>html5 video微信浏览器视频不能自动播放</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">preload</span>=<span class="string">"preload"</span> <span class="attr">controls</span> <span class="attr">id</span>=<span class="string">"car_audio"</span> <span class="attr">src</span>=<span class="string">"http://media.xitaoinfo.com/ei_zamenjiehunba.mp3"</span> <span class="attr">loop</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">"video"</span> <span class="attr">controls</span>=<span class="string">""</span> <span class="attr">preload</span>=<span class="string">"none"</span> <span class="attr">mediagroup</span>=<span class="string">"myVideoGroup"</span> <span class="attr">poster</span>=<span class="string">"http://media.w3.org/2010/05/sintel/poster.png"</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">source</span> <span class="attr">id</span>=<span class="string">"mp4"</span> <span class="attr">src</span>=<span class="string">"http://media.w3.org/2010/05/sintel/trailer.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">source</span> <span class="attr">id</span>=<span class="string">"webm"</span> <span class="attr">src</span>=<span class="string">"http://media.w3.org/2010/05/sintel/trailer.webm"</span> <span class="attr">type</span>=<span class="string">"video/webm"</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">source</span> <span class="attr">id</span>=<span class="string">"ogv"</span> <span class="attr">src</span>=<span class="string">"http://media.w3.org/2010/05/sintel/trailer.ogv"</span> <span class="attr">type</span>=<span class="string">"video/ogg"</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Your user agent does not support the HTML5 Video element.<span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!-- 必须加在微信api资源 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://res.wx.qq.com/open/js/jweixin-1.0.0.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"> </span></span><br><span class="line"><span class="javascript">     <span class="comment">//一般情况下，这样就可以自动播放了，但是一些奇葩iPhone机不可以 </span></span></span><br><span class="line"><span class="javascript">     <span class="built_in">document</span>.getElementById(<span class="string">'car_audio'</span>).play(); </span></span><br><span class="line"><span class="javascript">    <span class="comment">//必须在微信Weixin JSAPI的WeixinJSBridgeReady才能生效 </span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.addEventListener(<span class="string">"WeixinJSBridgeReady"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; </span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">'car_audio'</span>).play(); </span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">'video'</span>).play(); </span></span><br><span class="line"><span class="javascript">    &#125;, <span class="literal">false</span>); </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="移动端阻止视频自动全屏"><a href="#移动端阻止视频自动全屏" class="headerlink" title="移动端阻止视频自动全屏"></a>移动端阻止视频自动全屏</h3><p><strong>阻止 ios视频自动全屏的代码</strong><br>添加 playsinline 和 webkit-playsinline=”true”；<br>例如:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video id=<span class="string">"video"</span> playsinline  webkit-playsinline &gt;<span class="xml"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><blockquote><p>备注：<br>1、此方法仅仅针对 ios有效（safari、微信都有效）。<br>2、playsinline属性针对ios 10以上系统有效。<br>3、webkit-playsinline属性针对ios10以下系统有效。<br>4、安卓目前没有办法（机型不一样自带浏览器也效果也不一样，有一部分浏览器是可以小窗播放的。）</p></blockquote><p><strong>阻止安卓版微信 视频自动全屏的代码</strong><br>添加 x5-playsinline<br>例如:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video id=<span class="string">"video"</span> x5-playsinline &gt;<span class="xml"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><blockquote><p>备注：此方法仅仅针对安卓版微信有效。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;1.如何小窗不全屏( 亲测安卓微信 ios下通用)&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/spa
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
  </entry>
  
  <entry>
    <title>韦博成人项目webuploader上传文件的一系列坑总结</title>
    <link href="https://ru23.com/note/2bf1a5b6.html"/>
    <id>https://ru23.com/note/2bf1a5b6.html</id>
    <published>2018-11-09T06:16:01.000Z</published>
    <updated>2018-11-09T06:16:30.922Z</updated>
    
    <content type="html"><![CDATA[<h2>坑1：new FormData() - FormData对象的作用及用法</h2><h4>一、概述</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FormData 对象的使用：</span><br><span class="line">1.用一些键值对来模拟一系列表单控件：即把form中所有表单元素的name与value组装成</span><br><span class="line">一个queryString</span><br><span class="line">2. 异步上传二进制文件。</span><br></pre></td></tr></table></figure><h4>二、使用</h4><br>1.FormData对象的操作方法，全部在原型中，自己本身没任何的属性及方法。<br><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://user-images.githubusercontent.com/22697565/39160831-291476d4-47a0-11e8-9820-0dbf99e92a4a.png" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><br><br><h5>1、append()</h5><br><br>append()方法用于向 FormData 对象中添加键值对：<br><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fd.append(<span class="string">'key1'</span>,<span class="string">"value1"</span>);</span><br><span class="line">fd.append(<span class="string">'key2'</span>,<span class="string">"value2"</span>);</span><br></pre></td></tr></table></figure><br><br>fd是 FormData 对象，可以新建的空的对象，也可以是已经包含 form 表单或其他键值对。<br><br><h5>2、set()</h5><br><br>设置对应的键 key 对应的值 value(s)<br><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fd.set(<span class="string">'key1'</span>,<span class="string">"value1"</span>);</span><br><span class="line">fd.set(<span class="string">'key2'</span>,<span class="string">"value2"</span>);</span><br></pre></td></tr></table></figure><br><br>看起来跟append() 方法有点类似，这两者的区别就是，当指定的 key 值存在时，append()方法是将新增的添加的所以的键值对最后，而set()方法将会覆盖前面的设置的键值对。还是通过实例来对比，我们在前面的 form 的基础上 append() 或 set() 新的键值对：<br><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fd.append(<span class="string">'name'</span>,<span class="string">"will"</span>);</span><br></pre></td></tr></table></figure><br><br>有两个key为name的键值对：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://user-images.githubusercontent.com/22697565/39161290-93da87ae-47a2-11e8-97ce-a12961039b37.png" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><br><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fd.set(<span class="string">'name'</span>,<span class="string">"will"</span>);</span><br></pre></td></tr></table></figure><br><br>只有一个key为name的键值对：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://user-images.githubusercontent.com/22697565/39161302-a021ec50-47a2-11e8-8cec-7381bfd243e9.png" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><br><br>以上就是 append() 和 set() 的区别。如果设置的key值不存在，那么两者的效果是一样的。<br><br><h5>3、delete()</h5><br><br>接收一个参数，表示你要删除的 key 值的名字，如果有多个相同 key 值，会一并删除：<br><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fd.append(<span class="string">'name'</span>,<span class="string">'will'</span>);</span><br><span class="line">fd.delete(<span class="string">'name'</span>);</span><br></pre></td></tr></table></figure><br><br>form 中的 name 信息以及通过append() 新增的name 的信息都被删除了。<br><br><h5>4、get() 和 getAll()</h5><br><br>接收一个参数，表示需要查找的 key 的名称，返回第一个该 key 对应的 value 值。如果有多个相同的 key， 而且要返回所有的这个 key 对应的 value 值。<br><br>同样以上面的 form 表单为基础：<br><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fd.append(<span class="string">'name'</span>,<span class="string">'will'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(fd.get(<span class="string">'name'</span>)); <span class="comment">// sean</span></span><br><span class="line"> </span><br><span class="line">fd.append(<span class="string">'name'</span>,<span class="string">'will'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(fd.getAll(<span class="string">'name'</span>)); <span class="comment">// ["sean", "will"]</span></span><br></pre></td></tr></table></figure><br><br><h5>5、has()</h5><br><br>该方法也接收一个参数，同样是 key 的名称，返回一个Boolean 值， 用来判断FormData 对象是否含有该 key。以上面的form为例：<br><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(fd.has(<span class="string">'name'</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(fd.has(<span class="string">'Name'</span>)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><br><br><h5>6、keys()</h5><br><br>该方法不需要接收参数，返回一个迭代器，通过这个迭代器，我们可以遍历FormData 对象中所有的 key。以上面的form为例：<br><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">of</span> fd.keys()) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(key); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br>结果为：<br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name</span><br><span class="line">gender</span><br><span class="line">number</span><br><span class="line">photo</span><br></pre></td></tr></table></figure><br><br><h5>7、values()</h5><br><br>有遍历 key 的迭代，当然也就少不了遍历 value 的迭代器了。values()就是遍历value 的迭代器，用法与 keys() 类似：<br><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> value <span class="keyword">of</span> fd.values()) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br>结果：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://user-images.githubusercontent.com/22697565/39161320-b2c89a48-47a2-11e8-87d0-43f0d22b8812.png" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><br><br><br><h5>8、entries()</h5><br><br>有遍历 key 的迭代器，也有遍历 value 的迭代器，为何不搞一个两者一起的呢！entries()就是返回一个包含键值对的迭代器：<br><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> pair <span class="keyword">of</span> fd.entries()) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(pair[<span class="number">0</span>]+ <span class="string">', '</span>+ pair[<span class="number">1</span>]); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br>结果：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://user-images.githubusercontent.com/22697565/39161365-ec6d92d0-47a2-11e8-8362-3b8d520b2354.png" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><br><br>2.使用FormData对象发送文件<br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">HTML部分</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            姓名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            文件：<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"file"</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"保存"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">JS部分</span><br><span class="line">var btn = document.querySelector('[type=button]');</span><br><span class="line">btn.onclick = function () &#123;</span><br><span class="line">    // 文件元素</span><br><span class="line">    var file = document.querySelector('[type=file]');</span><br><span class="line">    // 通过FormData将文件转成二进制数据</span><br><span class="line">    var formData = new FormData();</span><br><span class="line">    // 将文件转二进制</span><br><span class="line">    *****注意2******</span><br><span class="line">    formData.append('upload', file.files[0]);</span><br><span class="line">    *****注意1******</span><br><span class="line">    var xhr = new XMLHttpRequest;</span><br><span class="line">    xhr.open('post', 'file.php');</span><br><span class="line">    // 监听上传进度</span><br><span class="line">    xhr.upload.onprogress = function (ev) &#123;</span><br><span class="line">    // 事件对象</span><br><span class="line">    // console.log(ev);</span><br><span class="line"></span><br><span class="line">        var percent = (ev.loaded / ev.total) * 100 + '%';</span><br><span class="line"></span><br><span class="line">        console.log(percent);</span><br><span class="line"></span><br><span class="line">        progress.style.width = percent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    xhr.send(formData);</span><br><span class="line"></span><br><span class="line">    xhr.onreadystatechange = function () &#123;</span><br><span class="line">            if(xhr.readyState == 4 &amp;&amp; xhr.status == 200) &#123;</span><br><span class="line">                    //</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><strong>注意1：使用jQuery</strong><br><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> $.ajax(&#123;</span><br><span class="line">    url: <span class="string">'file.php'</span>,</span><br><span class="line">    type: <span class="string">'POST'</span>,</span><br><span class="line">    data: formdata,                    <span class="comment">// 上传formdata封装的数据</span></span><br><span class="line">    dataType: <span class="string">'JSON'</span>,</span><br><span class="line">    cache: <span class="literal">false</span>,                      <span class="comment">// 不缓存</span></span><br><span class="line">    processData: <span class="literal">false</span>,                <span class="comment">// jQuery不要去处理发送的数据</span></span><br><span class="line">    contentType: <span class="literal">false</span>,                <span class="comment">// jQuery不要去设置Content-Type请求头</span></span><br><span class="line">    success:<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;           <span class="comment">//成功回调</span></span><br><span class="line">        <span class="built_in">console</span>.log(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br><br><strong>注意2：参数</strong><br>new FormData的参数是一个DOM对象，而非jQuery对象<br><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> formData = <span class="keyword">new</span> FormData($(<span class="string">"#file"</span>)[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><br><br><h4>三、jQuery的参数序列化方法serialize()</h4><br>序列表表格内容为字符串，用于 Ajax 请求。<br>$(“form”).serialize()<br><br><h2>坑2：webuploader 上传传自定义参数</h2><br><br><br><br>@WebUploader 是由百度开发的一个上传文件的框架，简单上传文件可以查看官网的两个demo。<br>由于自己需要上传用户信息，和用户照片，直接使用官网的demo，只能得到图片，于是花了一下午时间研究了一下WebUploader。<br><br>   我们可以通过设置FormData内的值，来实现图片和信息一起传入服务器中。<br>这里需要注意一点，formdata内的值不能在WebUploader实例化式赋值，因为在此时赋值时，表单信息为空，所以得到的值一直为空<br><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://user-images.githubusercontent.com/22697565/39161837-38068308-47a5-11e8-8c4f-5f0fee6be362.png" alt="image" title="">                </div>                <div class="image-caption">image</div>            </figure><br><br><h4>全局设置</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化的时候直接添加  </span></span><br><span class="line"><span class="keyword">var</span> uploader = <span class="keyword">new</span> WebUploader.Uploader(&#123;  </span><br><span class="line">    ...  </span><br><span class="line">    formData: &#123;  </span><br><span class="line">        uid: <span class="number">123</span>  </span><br><span class="line">    &#125;  </span><br><span class="line">    ...  </span><br><span class="line">&#125;);  </span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化以后添加  </span></span><br><span class="line">uploader.options.formData.uid = <span class="number">123</span>;</span><br></pre></td></tr></table></figure><h4>局部设置</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">uploader.on( <span class="string">'uploadBeforeSend'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> block, data </span>) </span>&#123;  </span><br><span class="line">    <span class="comment">// block为分块数据。  </span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// file为分块对应的file对象。  </span></span><br><span class="line">    <span class="keyword">var</span> file = block.file;  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 修改data可以控制发送哪些携带数据。  </span></span><br><span class="line">    data.uid = <span class="number">123</span>;  </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;坑1：new FormData() - FormData对象的作用及用法&lt;/h2&gt;

&lt;h4&gt;一、概述&lt;/h4&gt;

&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="踩过的坑" scheme="https://ru23.com/tags/%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>11月份整理的知识点</title>
    <link href="https://ru23.com/note/16840463.html"/>
    <id>https://ru23.com/note/16840463.html</id>
    <published>2018-11-08T08:18:57.000Z</published>
    <updated>2018-11-09T07:17:46.528Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
  </entry>
  
  <entry>
    <title>js异步编程（草稿）</title>
    <link href="https://ru23.com/note/580ae11.html"/>
    <id>https://ru23.com/note/580ae11.html</id>
    <published>2018-11-07T09:54:01.000Z</published>
    <updated>2018-11-08T08:18:16.784Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
  </entry>
  
  <entry>
    <title>头条2018秋招面试题</title>
    <link href="https://ru23.com/note/7c193027.html"/>
    <id>https://ru23.com/note/7c193027.html</id>
    <published>2018-11-06T09:01:07.000Z</published>
    <updated>2018-11-09T06:20:56.848Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h3><h4 id="1-css3特性中的transform：translateZ-0-有什么作用"><a href="#1-css3特性中的transform：translateZ-0-有什么作用" class="headerlink" title="1.css3特性中的transform：translateZ(0)有什么作用"></a>1.css3特性中的transform：translateZ(0)有什么作用</h4><p><strong>答案：</strong><br>gpu加速,提高浏览器渲染的性能</p><hr><h4 id="2-列举三种禁止浏览器缓存的头字段，并写出响应的设置值"><a href="#2-列举三种禁止浏览器缓存的头字段，并写出响应的设置值" class="headerlink" title="2.列举三种禁止浏览器缓存的头字段，并写出响应的设置值"></a>2.列举三种禁止浏览器缓存的头字段，并写出响应的设置值</h4><p>Expires：告诉浏览器把回送的资源缓存多长时间 -1或0则是不缓存<br><strong>简要：添加Expires头能有效的利用浏览器的缓存能力来改善页面的性能，能在后续的页面中有效避免很多不必要的Http请求，WEB服务器使用Expires头来告诉Web客户端它可以使用一个组件的当前副本，直到指定的时间为止。</strong><br>例如：Expires：Thu，15 Apr  2010  20：00：00  GMT;  他告诉浏览器缓存有效性持续到2010年4月15日为止，在这个时间之内相同的请求使用缓存，这个时间之外使用http请求。</p><p>Cache-Control：no-cache<br>Cathe-Control：max-age=315360000</p><p>Expires有一个非常大的缺陷，它使用一个固定的时间，要求服务器与客户端的时钟保持严格的同步，并且这一天到来后，服务器还得重新设定新的时间。<br>HTTP1.1引入了Cathe-Control，它使用max-age指定组件被缓存多久，从请求开始在max-age时间内浏览器使用缓存，之外的使用请求，这样就可以消除Expires的限制，<br>如果对浏览器兼容性要求很高的话，可以两个都使用。</p><p>Pragma：no-cache</p><hr><h4 id="3-精确获取页面元素位置的方式有哪些"><a href="#3-精确获取页面元素位置的方式有哪些" class="headerlink" title="3.精确获取页面元素位置的方式有哪些"></a>3.精确获取页面元素位置的方式有哪些</h4><p>那就是使用getBoundingClientRect()方法。它返回一个对象，其中包含了left、right、top、bottom四个属性，分别对应了该元素的左上角和右下角相对于浏览器窗口（viewport）左上角的距离。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> X= <span class="keyword">this</span>.getBoundingClientRect().left;</span><br><span class="line"><span class="keyword">var</span> Y =<span class="keyword">this</span>.getBoundingClientRect().top;</span><br><span class="line"><span class="comment">//再加上滚动距离，就可以得到绝对位置</span></span><br><span class="line"><span class="keyword">var</span> X= <span class="keyword">this</span>.getBoundingClientRect().left+<span class="built_in">document</span>.documentElement.scrollLeft;</span><br><span class="line"><span class="keyword">var</span> Y =<span class="keyword">this</span>.getBoundingClientRect().top+<span class="built_in">document</span>.documentElement.scrollTop;</span><br></pre></td></tr></table></figure></p><hr><h4 id="4-正则从2018-10-07T11-48-47-Asia-zh-cn-提取出来结果-2018-10-07-11-48-47"><a href="#4-正则从2018-10-07T11-48-47-Asia-zh-cn-提取出来结果-2018-10-07-11-48-47" class="headerlink" title="4.正则从2018-10-07T11:48:47 Asia/zh-cn 提取出来结果[2018,10,07,11,48,47]"></a>4.正则从2018-10-07T11:48:47 Asia/zh-cn 提取出来结果[2018,10,07,11,48,47]</h4><p><strong>思路：</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">"2018-10-07T11:48:47 Asia/zh-cn"</span>;</span><br><span class="line"><span class="comment">// step1 正则截取空格以后的字符串 ;</span></span><br><span class="line">str = str.match(<span class="regexp">/(\S*) /</span>)[<span class="number">1</span>]</span><br><span class="line"><span class="comment">// step2 正则replace掉符号-和T </span></span><br><span class="line">str = str.replace(<span class="regexp">/-|\T|\:/g</span>, <span class="string">","</span>)</span><br><span class="line">str =str.split(<span class="string">","</span>)</span><br></pre></td></tr></table></figure></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/11/reg.jpg" alt="正则替换" title="">                </div>                <div class="image-caption">正则替换</div>            </figure><p><strong>拓展：</strong><br>1、js截取两个字符串之间的内容：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"aaabbbcccdddeeefff"</span>;</span><br><span class="line">str = str.match(<span class="regexp">/aaa(\S*)fff/</span>)[<span class="number">1</span>];</span><br><span class="line">alert(str);<span class="comment">//结果bbbcccdddeee</span></span><br></pre></td></tr></table></figure></p><p>2、js截取某个字符串前面的内容：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"aaabbbcccdddeeefff"</span>;</span><br><span class="line">tr = str.match(<span class="regexp">/(\S*)fff/</span>)[<span class="number">1</span>];</span><br><span class="line">alert(str);<span class="comment">//结果aaabbbcccddd</span></span><br></pre></td></tr></table></figure></p><p>3、js截取某个字符串后面的内容：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"aaabbbcccdddeeefff"</span>;</span><br><span class="line">str = str.match(<span class="regexp">/aaa(\S*)/</span>)[<span class="number">1</span>];</span><br><span class="line">alert(str);<span class="comment">//结果bbbcccdddeeefff</span></span><br></pre></td></tr></table></figure></p><hr><h4 id="5-如何判断object是数组类型？"><a href="#5-如何判断object是数组类型？" class="headerlink" title="5.如何判断object是数组类型？"></a>5.如何判断object是数组类型？</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="keyword">typeof</span> <span class="number">1</span>);                <span class="comment">// 返回字符串"number" </span></span><br><span class="line">alert(<span class="keyword">typeof</span> <span class="string">"1"</span>);              <span class="comment">// 返回字符串"string" </span></span><br><span class="line">alert(<span class="keyword">typeof</span> <span class="literal">true</span>);             <span class="comment">// 返回字符串"boolean" </span></span><br><span class="line">alert(<span class="keyword">typeof</span> &#123;&#125;);               <span class="comment">// 返回字符串"object" </span></span><br><span class="line">alert(<span class="keyword">typeof</span> []);               <span class="comment">// 返回字符串"object " </span></span><br><span class="line">alert(<span class="keyword">typeof</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;);     <span class="comment">// 返回字符串"function" </span></span><br><span class="line">alert(<span class="keyword">typeof</span> <span class="literal">null</span>);             <span class="comment">// 返回字符串"object" </span></span><br><span class="line">alert(<span class="keyword">typeof</span> <span class="literal">undefined</span>);        <span class="comment">// 返回字符串"undefined"</span></span><br></pre></td></tr></table></figure><p>其中，typeof {}和typeof []的结果都是object，那么问题来了，我怎么通过typeof去判断一个对象是不是数组类型呢？</p><p>对象是对象，数组也是对象，js中万物皆对象，很显然，通过简单的typeof运算符是不能够达到目的，我们得换个方法。</p><p>1、从原型入手，Array.prototype.isPrototypeOf(obj);</p><p>利用isPrototypeOf()方法，判定Array是不是在obj的原型链中，如果是，则返回true,否则false。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/11/isarray1.png" alt="判断object是数组类型" title="">                </div>                <div class="image-caption">判断object是数组类型</div>            </figure><p>2.Array.isArray()方法。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>.isArray([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Array</span>.isArray(&#123;<span class="attr">foo</span>: <span class="number">123</span>&#125;); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="string">'foobar'</span>);   <span class="comment">// false</span></span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">undefined</span>);  <span class="comment">// false</span></span><br></pre></td></tr></table></figure></p><h3 id="编程题"><a href="#编程题" class="headerlink" title="编程题"></a>编程题</h3><hr><h5 id="1-已知数据结构users，请实现语法支持user-unique能够按照name字段去重，并输出结构为：-“a”-”b”"><a href="#1-已知数据结构users，请实现语法支持user-unique能够按照name字段去重，并输出结构为：-“a”-”b”" class="headerlink" title="1.已知数据结构users，请实现语法支持user.unique能够按照name字段去重，并输出结构为：[“a”,”b”]"></a>1.已知数据结构users，请实现语法支持user.unique能够按照name字段去重，并输出结构为：[“a”,”b”]</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> users=[&#123;</span><br><span class="line">   id:<span class="number">1</span>,<span class="attr">name</span>:<span class="string">"a"</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">   id:<span class="number">2</span>,<span class="attr">name</span>:<span class="string">"a"</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">   id:<span class="number">3</span>,<span class="attr">name</span>:<span class="string">"b"</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">   id:<span class="number">4</span>,<span class="attr">name</span>:<span class="string">"v"</span></span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>.prototype.unique = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> res;</span><br><span class="line">    <span class="keyword">this</span>.map(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>[item.id - <span class="number">1</span>] = item.name</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// ES6里新添加了两个很好用的东西，set和Array.from</span></span><br><span class="line">    <span class="comment">// set是一种新的数据结构，它可以接收一个数组或者是类数组对象，自动去重其中的重复项目。</span></span><br><span class="line">    res=<span class="keyword">new</span> <span class="built_in">Set</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"new Set对象"</span>,res)</span><br><span class="line">    <span class="comment">// 但是这里大家可以看到，set返回的是一个对象，但是我们想要的是数组啊。</span></span><br><span class="line">    <span class="comment">// 这回，就该轮到Array.from出场了，它的作用，就是可以把类数组对象、可迭代对象转化为数组。</span></span><br><span class="line">    res=<span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>(<span class="keyword">this</span>));</span><br><span class="line">    <span class="keyword">return</span>  res<span class="comment">//es6 数组去重</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(users.unique());</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/11/unique.png" alt="去重" title="">                </div>                <div class="image-caption">去重</div>            </figure><hr><h5 id="2-已知如下对象，请基于es6的proxy方法设计一个属性拦截读取操作的例子，要求实现去访问目标对象example中不存在的属性时，抛出错误：Property-“-property-”-does-not-exist"><a href="#2-已知如下对象，请基于es6的proxy方法设计一个属性拦截读取操作的例子，要求实现去访问目标对象example中不存在的属性时，抛出错误：Property-“-property-”-does-not-exist" class="headerlink" title="2.已知如下对象，请基于es6的proxy方法设计一个属性拦截读取操作的例子，要求实现去访问目标对象example中不存在的属性时，抛出错误：Property “$(property)” does not exist"></a>2.已知如下对象，请基于es6的proxy方法设计一个属性拦截读取操作的例子，要求实现去访问目标对象example中不存在的属性时，抛出错误：Property “$(property)” does not exist</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> man=&#123;</span><br><span class="line">    name:<span class="string">'jscoder'</span>,</span><br><span class="line">    age:<span class="number">22</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">//补全代码</span></span><br><span class="line"><span class="keyword">const</span> proxy = <span class="keyword">new</span> <span class="built_in">Proxy</span>(...)</span><br><span class="line">proxy.name <span class="comment">//"jscoder"</span></span><br><span class="line">proxy.age <span class="comment">//22</span></span><br><span class="line">proxy.location <span class="comment">//Property "$(property)" does not exist</span></span><br></pre></td></tr></table></figure><p><strong>考点</strong><br>es6 javascript的Proxy 实例的方法 ,<code>get()</code> get方法用于拦截某个属性的读取操作。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> man = &#123;</span><br><span class="line">name:<span class="string">'jscoder'</span>,</span><br><span class="line">    age:<span class="number">22</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> proxy = <span class="keyword">new</span> <span class="built_in">Proxy</span>(man, &#123;</span><br><span class="line">get: <span class="function"><span class="keyword">function</span>(<span class="params">target, property</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(property <span class="keyword">in</span> target) &#123;</span><br><span class="line"><span class="keyword">return</span> target[property];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">ReferenceError</span>(<span class="string">`Property <span class="subst">$&#123;property&#125;</span> does not exist.`</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(proxy.name)</span><br><span class="line"><span class="built_in">console</span>.log(proxy.age)</span><br><span class="line"><span class="built_in">console</span>.log(proxy.location)</span><br></pre></td></tr></table></figure><p>Proxy 实例的方法的其他方法参考这个链接，很详细<br><a href="https://blog.csdn.net/qq_30100043/article/details/53443017" target="_blank" rel="noopener">https://blog.csdn.net/qq_30100043/article/details/53443017</a></p><hr><h5 id="3-给出如下虚拟dom的数据结构，如何实现简单的虚拟dom，渲染到目标dom树"><a href="#3-给出如下虚拟dom的数据结构，如何实现简单的虚拟dom，渲染到目标dom树" class="headerlink" title="3.给出如下虚拟dom的数据结构，如何实现简单的虚拟dom，渲染到目标dom树"></a>3.给出如下虚拟dom的数据结构，如何实现简单的虚拟dom，渲染到目标dom树</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//样例数据</span></span><br><span class="line"><span class="keyword">let</span> demoNode = (&#123;</span><br><span class="line">    tagName: <span class="string">'ul'</span>,</span><br><span class="line">    props: &#123;<span class="string">'class'</span>: <span class="string">'list'</span>&#125;,</span><br><span class="line">    children: [</span><br><span class="line">        (&#123;<span class="attr">tagName</span>: <span class="string">'li'</span>, <span class="attr">children</span>: [<span class="string">'douyin'</span>]&#125;),</span><br><span class="line">        (&#123;<span class="attr">tagName</span>: <span class="string">'li'</span>, <span class="attr">children</span>: [<span class="string">'toutiao'</span>]&#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>//构建一个render函数，将demoNode对象渲染为以下dom<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>douyin<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>toutiao<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>看到虚拟DOM，是不是感觉很玄乎，但是剥开它华丽的外衣，也就那样:</p><ol><li>通过JavaScript来构建虚拟的DOM树结构，并将其呈现到页面中；</li><li>当数据改变，引起DOM树结构发生改变，从而生成一颗新的虚拟DOM树，将其与之前的DOM对比，将变化部分应用到真实的DOM树中，即页面中。<br>通过上面的介绍，下面，我们就来实现一个简单的虚拟DOM，并将其与真实的DOM关联。</li></ol><p><strong>构建虚拟DOM</strong></p><p>虚拟DOM，其实就是用JavaScript对象来构建DOM树，如上ul组件模版，其树形结构如下：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/11/domtree.png" alt="DOM树" title="">                </div>                <div class="image-caption">DOM树</div>            </figure><br>通过JavaScript，我们可以很容易构建它，如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> elem = Element(&#123;</span><br><span class="line">    tagName: <span class="string">'ul'</span>,</span><br><span class="line">    props: &#123;<span class="string">'class'</span>: <span class="string">'list'</span>&#125;,</span><br><span class="line">    children: [</span><br><span class="line">        Element(&#123;<span class="attr">tagName</span>: <span class="string">'li'</span>, <span class="attr">children</span>: [<span class="string">'item1'</span>]&#125;),</span><br><span class="line">        Element(&#123;<span class="attr">tagName</span>: <span class="string">'li'</span>, <span class="attr">children</span>: [<span class="string">'item2'</span>]&#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><blockquote><p>note：Element为一个构造函数，返回一个Element对象。为了更清晰的呈现虚拟DOM结构，我们省略了new，而在Element中实现。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @Params:</span></span><br><span class="line"><span class="comment">*     tagName(string)(requered)</span></span><br><span class="line"><span class="comment">*     props(object)(optional)</span></span><br><span class="line"><span class="comment">*     children(array)(optional)</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Element</span>(<span class="params">&#123;tagName, props, children&#125;</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="keyword">this</span> <span class="keyword">instanceof</span> Element))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Element(&#123;tagName, props, children&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.tagName = tagName;</span><br><span class="line">    <span class="keyword">this</span>.props = props || &#123;&#125;;</span><br><span class="line">    <span class="keyword">this</span>.children = children || [];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了，通过Element我们可以任意地构建虚拟DOM树了。但是有个问题，虚拟的终归是虚拟的，我们得将其呈现到页面中，不然，没卵用。。</p><p>怎么呈现呢？</p><p>从上面得知，这是一颗树嘛，那我们就通过遍历，逐个节点地创建真实DOM节点:</p><p>　　1. createElement;</p><p>　　2. createTextNode.</p><p>怎么遍历呢？</p><p>因为这是一颗树嘛，对于树形结构无外乎两种遍历：</p><p>　　1. 深度优先遍历(DFS)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/11/shendubianli.png" alt="深度优先遍历" title="">                </div>                <div class="image-caption">深度优先遍历</div>            </figure><p>　　2. 广度优先遍历(BFS)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/11/guangdubianli.png" alt="广度优先遍历" title="">                </div>                <div class="image-caption">广度优先遍历</div>            </figure><p>针对实际情况，我们得采用DFS，为什么呢？</p><p>因为我们得将子节点append到父节点中</p><p>好了，那我们采用DFS，就来实现一个render函数吧，如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Element.prototype.render = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> el = <span class="built_in">document</span>.createElement(<span class="keyword">this</span>.tagName),</span><br><span class="line">        props = <span class="keyword">this</span>.props,</span><br><span class="line">        propName,</span><br><span class="line">        propValue;</span><br><span class="line">    <span class="keyword">for</span>(propName <span class="keyword">in</span> props)&#123;</span><br><span class="line">        propValue = props[propName];</span><br><span class="line">        el.setAttribute(propName, propValue);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.children.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">child</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> childEl = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(child <span class="keyword">instanceof</span> Element)&#123;</span><br><span class="line">            childEl = child.render();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            childEl = <span class="built_in">document</span>.createTextNode(child);</span><br><span class="line">        &#125;</span><br><span class="line">        el.appendChild(childEl);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> el;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>此时，我们就可以轻松地将虚拟DOM呈现到指定真实DOM中啦。假设，我们将上诉ul虚拟DOM呈现到页面body中，如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> elem = Element(&#123;</span><br><span class="line">    tagName: <span class="string">'ul'</span>,</span><br><span class="line">    props: &#123;<span class="string">'class'</span>: <span class="string">'list'</span>&#125;,</span><br><span class="line">    children: [</span><br><span class="line">        Element(&#123;<span class="attr">tagName</span>: <span class="string">'li'</span>, <span class="attr">children</span>: [<span class="string">'item1'</span>]&#125;),</span><br><span class="line">        Element(&#123;<span class="attr">tagName</span>: <span class="string">'li'</span>, <span class="attr">children</span>: [<span class="string">'item2'</span>]&#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">'body'</span>).appendChild(elem.render());</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;简答题&quot;&gt;&lt;a href=&quot;#简答题&quot; class=&quot;headerlink&quot; title=&quot;简答题&quot;&gt;&lt;/a&gt;简答题&lt;/h3&gt;&lt;h4 id=&quot;1-css3特性中的transform：translateZ-0-有什么作用&quot;&gt;&lt;a href=&quot;#1-css3特性中的t
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
  </entry>
  
  <entry>
    <title>Node Sass could not find a binding for W64-bit and Node.js 6.x</title>
    <link href="https://ru23.com/note/a3acb1c1.html"/>
    <id>https://ru23.com/note/a3acb1c1.html</id>
    <published>2018-11-06T06:14:22.000Z</published>
    <updated>2018-11-06T06:46:47.864Z</updated>
    
    <content type="html"><![CDATA[<p>ERROR in ./src/app/css/index.scss<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Module build failed: Error: Missing binding D:\projects\living\user-platform\project\node_modules</span><br><span class="line">-x64-48\binding.node</span><br><span class="line">Node Sass could not find a binding for your current environment: Windows 64-bit with Node.js 6.x</span><br></pre></td></tr></table></figure></p><p>The problem was up since I had installed Node.js 7.x previously, and node-sass was build on Node.js 7.x version.</p><p>So:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm rebuild node-sass</span><br></pre></td></tr></table></figure></p><p>It’s been solved.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ERROR in ./src/app/css/index.scss&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;s
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="npm" scheme="https://ru23.com/tags/npm/"/>
    
      <category term="踩过的坑" scheme="https://ru23.com/tags/%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>Eslint静态代码检查</title>
    <link href="https://ru23.com/note/35a7a4a2.html"/>
    <id>https://ru23.com/note/35a7a4a2.html</id>
    <published>2018-11-06T06:04:59.000Z</published>
    <updated>2018-11-06T06:46:47.867Z</updated>
    
    <content type="html"><![CDATA[<p>Eslint 对于每一个开发者而言都是非常值得使用的，这样会强制你写出高质量且整洁的代码，所以建议大家将Eslint集成进入，来提高项目的质量。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g eslint</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ eslint --init</span><br></pre></td></tr></table></figure><p>将会生成.eslintrc.js文件,执行检查src目录下的main.js单文件的命令</p><p>eslint src/main.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eslint src/main.js</span><br></pre></td></tr></table></figure></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>ESLint的配置最重要的是规则的配置，具体的格式如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;quotes&quot;: [2, &quot;double&quot;]</span><br><span class="line"># 第一部分是规则名</span><br><span class="line"># 第二部分是表示级别：0-不验证；1-警告；2-错误</span><br></pre></td></tr></table></figure></p><p>在 package.json 中添加 eslintConfig 配置块</p><p>直接在代码文件中定义<br>配置文件中的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;extends&quot;: &quot;eslint:recommended&quot;</span><br></pre></td></tr></table></figure></p><p>表示使用默认的规则进行校验，如果自定义规则需要将此设置去掉！</p><h5 id="1-文件中关闭验证"><a href="#1-文件中关闭验证" class="headerlink" title="1.文件中关闭验证"></a>1.文件中关闭验证</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*eslint-disable */</span></span><br><span class="line"><span class="comment">//suppress all warnings between comments</span></span><br><span class="line">alert(<span class="string">'foo'</span>);</span><br><span class="line"><span class="comment">/*eslint-enable */</span></span><br></pre></td></tr></table></figure><h5 id="文件中指定规则不验证"><a href="#文件中指定规则不验证" class="headerlink" title="文件中指定规则不验证"></a>文件中指定规则不验证</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*eslint-disable no-alert, no-console */</span></span><br><span class="line">alert(<span class="string">'foo'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'bar'</span>);</span><br><span class="line"><span class="comment">/*eslint-enable no-alert */</span></span><br></pre></td></tr></table></figure><p>.eslintrc.js 范例<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="string">"env"</span>: &#123;</span><br><span class="line">        <span class="string">"browser"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"es6"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"node"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"extends"</span>: <span class="string">"eslint:recommended"</span>,</span><br><span class="line">    <span class="string">"parserOptions"</span>: &#123;</span><br><span class="line">        <span class="string">"ecmaFeatures"</span>: &#123;</span><br><span class="line">            <span class="string">"jsx"</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"ecmaVersion"</span>: <span class="number">2018</span>,</span><br><span class="line">        <span class="string">"sourceType"</span>: <span class="string">"module"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"plugins"</span>: [</span><br><span class="line">        <span class="string">"react"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"rules"</span>: &#123;</span><br><span class="line">        <span class="string">"no-alert"</span>: <span class="number">0</span>, <span class="comment">//禁止使用alert confirm prompt</span></span><br><span class="line">        <span class="string">"no-array-constructor"</span>: <span class="number">2</span>, <span class="comment">//禁止使用数组构造器</span></span><br><span class="line">        <span class="string">"no-bitwise"</span>: <span class="number">0</span>, <span class="comment">//禁止使用按位运算符</span></span><br><span class="line">        <span class="string">"no-caller"</span>: <span class="number">1</span>, <span class="comment">//禁止使用arguments.caller或arguments.callee</span></span><br><span class="line">        <span class="string">"no-catch-shadow"</span>: <span class="number">2</span>, <span class="comment">//禁止catch子句参数与外部作用域变量同名</span></span><br><span class="line">        <span class="string">"no-class-assign"</span>: <span class="number">2</span>, <span class="comment">//禁止给类赋值</span></span><br><span class="line">        <span class="string">"no-cond-assign"</span>: <span class="number">2</span>, <span class="comment">//禁止在条件表达式中使用赋值语句</span></span><br><span class="line">        <span class="string">"no-console"</span>: <span class="number">2</span>, <span class="comment">//禁止使用console</span></span><br><span class="line">        <span class="string">"no-const-assign"</span>: <span class="number">2</span>, <span class="comment">//禁止修改const声明的变量</span></span><br><span class="line">        <span class="string">"no-constant-condition"</span>: <span class="number">2</span>, <span class="comment">//禁止在条件中使用常量表达式 if(true) if(1)</span></span><br><span class="line">        <span class="string">"no-continue"</span>: <span class="number">0</span>, <span class="comment">//禁止使用continue</span></span><br><span class="line">        <span class="string">"no-control-regex"</span>: <span class="number">2</span>, <span class="comment">//禁止在正则表达式中使用控制字符</span></span><br><span class="line">        <span class="string">"no-debugger"</span>: <span class="number">2</span>, <span class="comment">//禁止使用debugger</span></span><br><span class="line">        <span class="string">"no-delete-var"</span>: <span class="number">2</span>, <span class="comment">//不能对var声明的变量使用delete操作符</span></span><br><span class="line">        <span class="string">"no-div-regex"</span>: <span class="number">1</span>, <span class="comment">//不能使用看起来像除法的正则表达式/=foo/</span></span><br><span class="line">        <span class="string">"no-dupe-keys"</span>: <span class="number">2</span>, <span class="comment">//在创建对象字面量时不允许键重复 &#123;a:1,a:1&#125;</span></span><br><span class="line">        <span class="string">"no-dupe-args"</span>: <span class="number">2</span>, <span class="comment">//函数参数不能重复</span></span><br><span class="line">        <span class="string">"no-duplicate-case"</span>: <span class="number">2</span>, <span class="comment">//switch中的case标签不能重复</span></span><br><span class="line">        <span class="string">"no-else-return"</span>: <span class="number">2</span>, <span class="comment">//如果if语句里面有return,后面不能跟else语句</span></span><br><span class="line">        <span class="string">"no-empty"</span>: <span class="number">2</span>, <span class="comment">//块语句中的内容不能为空</span></span><br><span class="line">        <span class="string">"no-empty-character-class"</span>: <span class="number">2</span>, <span class="comment">//正则表达式中的[]内容不能为空</span></span><br><span class="line">        <span class="string">"no-empty-label"</span>: <span class="number">2</span>, <span class="comment">//禁止使用空label</span></span><br><span class="line">        <span class="string">"no-eq-null"</span>: <span class="number">2</span>, <span class="comment">//禁止对null使用==或!=运算符</span></span><br><span class="line">        <span class="string">"no-eval"</span>: <span class="number">1</span>, <span class="comment">//禁止使用eval</span></span><br><span class="line">        <span class="string">"no-ex-assign"</span>: <span class="number">2</span>, <span class="comment">//禁止给catch语句中的异常参数赋值</span></span><br><span class="line">        <span class="string">"no-extend-native"</span>: <span class="number">2</span>, <span class="comment">//禁止扩展native对象</span></span><br><span class="line">        <span class="string">"no-extra-bind"</span>: <span class="number">2</span>, <span class="comment">//禁止不必要的函数绑定</span></span><br><span class="line">        <span class="string">"no-extra-boolean-cast"</span>: <span class="number">2</span>, <span class="comment">//禁止不必要的bool转换</span></span><br><span class="line">        <span class="string">"no-extra-parens"</span>: <span class="number">2</span>, <span class="comment">//禁止非必要的括号</span></span><br><span class="line">        <span class="string">"no-extra-semi"</span>: <span class="number">2</span>, <span class="comment">//禁止多余的冒号</span></span><br><span class="line">        <span class="string">"no-fallthrough"</span>: <span class="number">1</span>, <span class="comment">//禁止switch穿透</span></span><br><span class="line">        <span class="string">"no-floating-decimal"</span>: <span class="number">2</span>, <span class="comment">//禁止省略浮点数中的0 .5 3.</span></span><br><span class="line">        <span class="string">"no-func-assign"</span>: <span class="number">2</span>, <span class="comment">//禁止重复的函数声明</span></span><br><span class="line">        <span class="string">"no-implicit-coercion"</span>: <span class="number">1</span>, <span class="comment">//禁止隐式转换</span></span><br><span class="line">        <span class="string">"no-implied-eval"</span>: <span class="number">2</span>, <span class="comment">//禁止使用隐式eval</span></span><br><span class="line">        <span class="string">"no-inline-comments"</span>: <span class="number">0</span>, <span class="comment">//禁止行内备注</span></span><br><span class="line">        <span class="string">"no-inner-declarations"</span>: [<span class="number">2</span>, <span class="string">"functions"</span>], <span class="comment">//禁止在块语句中使用声明（变量或函数）</span></span><br><span class="line">        <span class="string">"no-invalid-regexp"</span>: <span class="number">2</span>, <span class="comment">//禁止无效的正则表达式</span></span><br><span class="line">        <span class="string">"no-invalid-this"</span>: <span class="number">2</span>, <span class="comment">//禁止无效的this，只能用在构造器，类，对象字面量</span></span><br><span class="line">        <span class="string">"no-irregular-whitespace"</span>: <span class="number">2</span>, <span class="comment">//不能有不规则的空格</span></span><br><span class="line">        <span class="string">"no-iterator"</span>: <span class="number">2</span>, <span class="comment">//禁止使用__iterator__ 属性</span></span><br><span class="line">        <span class="string">"no-label-var"</span>: <span class="number">2</span>, <span class="comment">//label名不能与var声明的变量名相同</span></span><br><span class="line">        <span class="string">"no-labels"</span>: <span class="number">2</span>, <span class="comment">//禁止标签声明</span></span><br><span class="line">        <span class="string">"no-lone-blocks"</span>: <span class="number">2</span>, <span class="comment">//禁止不必要的嵌套块</span></span><br><span class="line">        <span class="string">"no-lonely-if"</span>: <span class="number">2</span>, <span class="comment">//禁止else语句内只有if语句</span></span><br><span class="line">        <span class="string">"no-loop-func"</span>: <span class="number">1</span>, <span class="comment">//禁止在循环中使用函数（如果没有引用外部变量不形成闭包就可以）</span></span><br><span class="line">        <span class="string">"no-mixed-requires"</span>: [<span class="number">0</span>, <span class="literal">false</span>], <span class="comment">//声明时不能混用声明类型</span></span><br><span class="line">        <span class="string">"no-mixed-spaces-and-tabs"</span>: [<span class="number">2</span>, <span class="literal">false</span>], <span class="comment">//禁止混用tab和空格</span></span><br><span class="line">        <span class="string">"linebreak-style"</span>: [<span class="number">0</span>, <span class="string">"windows"</span>], <span class="comment">//换行风格</span></span><br><span class="line">        <span class="string">"no-multi-spaces"</span>: <span class="number">1</span>, <span class="comment">//不能用多余的空格</span></span><br><span class="line">        <span class="string">"no-multi-str"</span>: <span class="number">2</span>, <span class="comment">//字符串不能用\换行</span></span><br><span class="line">        <span class="string">"no-multiple-empty-lines"</span>: [<span class="number">1</span>, &#123; <span class="string">"max"</span>: <span class="number">2</span> &#125;], <span class="comment">//空行最多不能超过2行</span></span><br><span class="line">        <span class="string">"no-native-reassign"</span>: <span class="number">2</span>, <span class="comment">//不能重写native对象</span></span><br><span class="line">        <span class="string">"no-negated-in-lhs"</span>: <span class="number">2</span>, <span class="comment">//in 操作符的左边不能有!</span></span><br><span class="line">        <span class="string">"no-nested-ternary"</span>: <span class="number">0</span>, <span class="comment">//禁止使用嵌套的三目运算</span></span><br><span class="line">        <span class="string">"no-new"</span>: <span class="number">1</span>, <span class="comment">//禁止在使用new构造一个实例后不赋值</span></span><br><span class="line">        <span class="string">"no-new-func"</span>: <span class="number">1</span>, <span class="comment">//禁止使用new Function</span></span><br><span class="line">        <span class="string">"no-new-object"</span>: <span class="number">2</span>, <span class="comment">//禁止使用new Object()</span></span><br><span class="line">        <span class="string">"no-new-require"</span>: <span class="number">2</span>, <span class="comment">//禁止使用new require</span></span><br><span class="line">        <span class="string">"no-new-wrappers"</span>: <span class="number">2</span>, <span class="comment">//禁止使用new创建包装实例，new String new Boolean new Number</span></span><br><span class="line">        <span class="string">"no-obj-calls"</span>: <span class="number">2</span>, <span class="comment">//不能调用内置的全局对象，比如Math() JSON()</span></span><br><span class="line">        <span class="string">"no-octal"</span>: <span class="number">2</span>, <span class="comment">//禁止使用八进制数字</span></span><br><span class="line">        <span class="string">"no-octal-escape"</span>: <span class="number">2</span>, <span class="comment">//禁止使用八进制转义序列</span></span><br><span class="line">        <span class="string">"no-param-reassign"</span>: <span class="number">2</span>, <span class="comment">//禁止给参数重新赋值</span></span><br><span class="line">        <span class="string">"no-path-concat"</span>: <span class="number">0</span>, <span class="comment">//node中不能使用__dirname或__filename做路径拼接</span></span><br><span class="line">        <span class="string">"no-plusplus"</span>: <span class="number">0</span>, <span class="comment">//禁止使用++，--</span></span><br><span class="line">        <span class="string">"no-process-env"</span>: <span class="number">0</span>, <span class="comment">//禁止使用process.env</span></span><br><span class="line">        <span class="string">"no-process-exit"</span>: <span class="number">0</span>, <span class="comment">//禁止使用process.exit()</span></span><br><span class="line">        <span class="string">"no-proto"</span>: <span class="number">2</span>, <span class="comment">//禁止使用__proto__属性</span></span><br><span class="line">        <span class="string">"no-redeclare"</span>: <span class="number">2</span>, <span class="comment">//禁止重复声明变量</span></span><br><span class="line">        <span class="string">"no-regex-spaces"</span>: <span class="number">2</span>, <span class="comment">//禁止在正则表达式字面量中使用多个空格 /foo bar/</span></span><br><span class="line">        <span class="string">"no-restricted-modules"</span>: <span class="number">0</span>, <span class="comment">//如果禁用了指定模块，使用就会报错</span></span><br><span class="line">        <span class="string">"no-return-assign"</span>: <span class="number">1</span>, <span class="comment">//return 语句中不能有赋值表达式</span></span><br><span class="line">        <span class="string">"no-script-url"</span>: <span class="number">0</span>, <span class="comment">//禁止使用javascript:void(0)</span></span><br><span class="line">        <span class="string">"no-self-compare"</span>: <span class="number">2</span>, <span class="comment">//不能比较自身</span></span><br><span class="line">        <span class="string">"no-sequences"</span>: <span class="number">0</span>, <span class="comment">//禁止使用逗号运算符</span></span><br><span class="line">        <span class="string">"no-shadow"</span>: <span class="number">2</span>, <span class="comment">//外部作用域中的变量不能与它所包含的作用域中的变量或参数同名</span></span><br><span class="line">        <span class="string">"no-shadow-restricted-names"</span>: <span class="number">2</span>, <span class="comment">//严格模式中规定的限制标识符不能作为声明时的变量名使用</span></span><br><span class="line">        <span class="string">"no-spaced-func"</span>: <span class="number">2</span>, <span class="comment">//函数调用时 函数名与()之间不能有空格</span></span><br><span class="line">        <span class="string">"no-sparse-arrays"</span>: <span class="number">2</span>, <span class="comment">//禁止稀疏数组， [1,,2]</span></span><br><span class="line">        <span class="string">"no-sync"</span>: <span class="number">0</span>, <span class="comment">//nodejs 禁止同步方法</span></span><br><span class="line">        <span class="string">"no-ternary"</span>: <span class="number">0</span>, <span class="comment">//禁止使用三目运算符</span></span><br><span class="line">        <span class="string">"no-trailing-spaces"</span>: <span class="number">1</span>, <span class="comment">//一行结束后面不要有空格</span></span><br><span class="line">        <span class="string">"no-this-before-super"</span>: <span class="number">0</span>, <span class="comment">//在调用super()之前不能使用this或super</span></span><br><span class="line">        <span class="string">"no-throw-literal"</span>: <span class="number">2</span>, <span class="comment">//禁止抛出字面量错误 throw "error";</span></span><br><span class="line">        <span class="string">"no-undef"</span>: <span class="number">1</span>, <span class="comment">//不能有未定义的变量</span></span><br><span class="line">        <span class="string">"no-undef-init"</span>: <span class="number">2</span>, <span class="comment">//变量初始化时不能直接给它赋值为undefined</span></span><br><span class="line">        <span class="string">"no-undefined"</span>: <span class="number">2</span>, <span class="comment">//不能使用undefined</span></span><br><span class="line">        <span class="string">"no-unexpected-multiline"</span>: <span class="number">2</span>, <span class="comment">//避免多行表达式</span></span><br><span class="line">        <span class="string">"no-underscore-dangle"</span>: <span class="number">1</span>, <span class="comment">//标识符不能以_开头或结尾</span></span><br><span class="line">        <span class="string">"no-unneeded-ternary"</span>: <span class="number">2</span>, <span class="comment">//禁止不必要的嵌套 var isYes = answer === 1 ? true : false;</span></span><br><span class="line">        <span class="string">"no-unreachable"</span>: <span class="number">2</span>, <span class="comment">//不能有无法执行的代码</span></span><br><span class="line">        <span class="string">"no-unused-expressions"</span>: <span class="number">2</span>, <span class="comment">//禁止无用的表达式</span></span><br><span class="line">        <span class="string">"no-unused-vars"</span>: [<span class="number">2</span>, &#123; <span class="string">"vars"</span>: <span class="string">"all"</span>, <span class="string">"args"</span>: <span class="string">"after-used"</span> &#125;], <span class="comment">//不能有声明后未被使用的变量或参数</span></span><br><span class="line">        <span class="string">"no-use-before-define"</span>: <span class="number">2</span>, <span class="comment">//未定义前不能使用</span></span><br><span class="line">        <span class="string">"no-useless-call"</span>: <span class="number">2</span>, <span class="comment">//禁止不必要的call和apply</span></span><br><span class="line">        <span class="string">"no-void"</span>: <span class="number">2</span>, <span class="comment">//禁用void操作符</span></span><br><span class="line">        <span class="string">"no-var"</span>: <span class="number">0</span>, <span class="comment">//禁用var，用let和const代替</span></span><br><span class="line">        <span class="string">"no-warning-comments"</span>: [<span class="number">1</span>, &#123; <span class="string">"terms"</span>: [<span class="string">"todo"</span>, <span class="string">"fixme"</span>, <span class="string">"xxx"</span>], <span class="string">"location"</span>: <span class="string">"start"</span> &#125;], <span class="comment">//不能有警告备注</span></span><br><span class="line">        <span class="string">"no-with"</span>: <span class="number">2</span>, <span class="comment">//禁用with</span></span><br><span class="line"></span><br><span class="line">        <span class="string">"array-bracket-spacing"</span>: [<span class="number">2</span>, <span class="string">"never"</span>], <span class="comment">//是否允许非空数组里面有多余的空格</span></span><br><span class="line">        <span class="string">"arrow-parens"</span>: <span class="number">0</span>, <span class="comment">//箭头函数用小括号括起来</span></span><br><span class="line">        <span class="string">"arrow-spacing"</span>: <span class="number">0</span>, <span class="comment">//=&gt;的前/后括号</span></span><br><span class="line">        <span class="string">"accessor-pairs"</span>: <span class="number">0</span>, <span class="comment">//在对象中使用getter/setter</span></span><br><span class="line">        <span class="string">"block-scoped-var"</span>: <span class="number">0</span>, <span class="comment">//块语句中使用var</span></span><br><span class="line">        <span class="string">"brace-style"</span>: [<span class="number">1</span>, <span class="string">"1tbs"</span>], <span class="comment">//大括号风格</span></span><br><span class="line">        <span class="string">"callback-return"</span>: <span class="number">1</span>, <span class="comment">//避免多次调用回调什么的</span></span><br><span class="line">        <span class="string">"camelcase"</span>: <span class="number">2</span>, <span class="comment">//强制驼峰法命名</span></span><br><span class="line">        <span class="string">"comma-dangle"</span>: [<span class="number">2</span>, <span class="string">"never"</span>], <span class="comment">//对象字面量项尾不能有逗号</span></span><br><span class="line">        <span class="string">"comma-spacing"</span>: <span class="number">0</span>, <span class="comment">//逗号前后的空格</span></span><br><span class="line">        <span class="string">"comma-style"</span>: [<span class="number">2</span>, <span class="string">"last"</span>], <span class="comment">//逗号风格，换行时在行首还是行尾</span></span><br><span class="line">        <span class="string">"complexity"</span>: [<span class="number">0</span>, <span class="number">11</span>], <span class="comment">//循环复杂度</span></span><br><span class="line">        <span class="string">"computed-property-spacing"</span>: [<span class="number">0</span>, <span class="string">"never"</span>], <span class="comment">//是否允许计算后的键名什么的</span></span><br><span class="line">        <span class="string">"consistent-return"</span>: <span class="number">0</span>, <span class="comment">//return 后面是否允许省略</span></span><br><span class="line">        <span class="string">"consistent-this"</span>: [<span class="number">2</span>, <span class="string">"that"</span>], <span class="comment">//this别名</span></span><br><span class="line">        <span class="string">"constructor-super"</span>: <span class="number">0</span>, <span class="comment">//非派生类不能调用super，派生类必须调用super</span></span><br><span class="line">        <span class="string">"curly"</span>: [<span class="number">2</span>, <span class="string">"all"</span>], <span class="comment">//必须使用 if()&#123;&#125; 中的&#123;&#125;</span></span><br><span class="line">        <span class="string">"default-case"</span>: <span class="number">2</span>, <span class="comment">//switch语句最后必须有default</span></span><br><span class="line">        <span class="string">"dot-location"</span>: <span class="number">0</span>, <span class="comment">//对象访问符的位置，换行的时候在行首还是行尾</span></span><br><span class="line">        <span class="string">"dot-notation"</span>: [<span class="number">0</span>, &#123; <span class="string">"allowKeywords"</span>: <span class="literal">true</span> &#125;], <span class="comment">//避免不必要的方括号</span></span><br><span class="line">        <span class="string">"eol-last"</span>: <span class="number">0</span>, <span class="comment">//文件以单一的换行符结束</span></span><br><span class="line">        <span class="string">"eqeqeq"</span>: <span class="number">2</span>, <span class="comment">//必须使用全等</span></span><br><span class="line">        <span class="string">"func-names"</span>: <span class="number">0</span>, <span class="comment">//函数表达式必须有名字</span></span><br><span class="line">        <span class="string">"func-style"</span>: [<span class="number">0</span>, <span class="string">"declaration"</span>], <span class="comment">//函数风格，规定只能使用函数声明/函数表达式</span></span><br><span class="line">        <span class="string">"generator-star-spacing"</span>: <span class="number">0</span>, <span class="comment">//生成器函数*的前后空格</span></span><br><span class="line">        <span class="string">"guard-for-in"</span>: <span class="number">0</span>, <span class="comment">//for in循环要用if语句过滤</span></span><br><span class="line">        <span class="string">"handle-callback-err"</span>: <span class="number">0</span>, <span class="comment">//nodejs 处理错误</span></span><br><span class="line">        <span class="string">"id-length"</span>: <span class="number">0</span>, <span class="comment">//变量名长度</span></span><br><span class="line">        <span class="string">"indent"</span>: [<span class="number">2</span>, <span class="number">4</span>], <span class="comment">//缩进风格</span></span><br><span class="line">        <span class="string">"init-declarations"</span>: <span class="number">0</span>, <span class="comment">//声明时必须赋初值</span></span><br><span class="line">        <span class="string">"key-spacing"</span>: [<span class="number">0</span>, &#123; <span class="string">"beforeColon"</span>: <span class="literal">false</span>, <span class="string">"afterColon"</span>: <span class="literal">true</span> &#125;], <span class="comment">//对象字面量中冒号的前后空格</span></span><br><span class="line">        <span class="string">"lines-around-comment"</span>: <span class="number">0</span>, <span class="comment">//行前/行后备注</span></span><br><span class="line">        <span class="string">"max-depth"</span>: [<span class="number">0</span>, <span class="number">4</span>], <span class="comment">//嵌套块深度</span></span><br><span class="line">        <span class="string">"max-len"</span>: [<span class="number">0</span>, <span class="number">80</span>, <span class="number">4</span>], <span class="comment">//字符串最大长度</span></span><br><span class="line">        <span class="string">"max-nested-callbacks"</span>: [<span class="number">0</span>, <span class="number">2</span>], <span class="comment">//回调嵌套深度</span></span><br><span class="line">        <span class="string">"max-params"</span>: [<span class="number">0</span>, <span class="number">3</span>], <span class="comment">//函数最多只能有3个参数</span></span><br><span class="line">        <span class="string">"max-statements"</span>: [<span class="number">0</span>, <span class="number">10</span>], <span class="comment">//函数内最多有几个声明</span></span><br><span class="line">        <span class="string">"new-cap"</span>: <span class="number">2</span>, <span class="comment">//函数名首行大写必须使用new方式调用，首行小写必须用不带new方式调用</span></span><br><span class="line">        <span class="string">"new-parens"</span>: <span class="number">2</span>, <span class="comment">//new时必须加小括号</span></span><br><span class="line">        <span class="string">"newline-after-var"</span>: <span class="number">2</span>, <span class="comment">//变量声明后是否需要空一行</span></span><br><span class="line">        <span class="string">"object-curly-spacing"</span>: [<span class="number">0</span>, <span class="string">"never"</span>], <span class="comment">//大括号内是否允许不必要的空格</span></span><br><span class="line">        <span class="string">"object-shorthand"</span>: <span class="number">0</span>, <span class="comment">//强制对象字面量缩写语法</span></span><br><span class="line">        <span class="string">"one-var"</span>: <span class="number">1</span>, <span class="comment">//连续声明</span></span><br><span class="line">        <span class="string">"operator-assignment"</span>: [<span class="number">0</span>, <span class="string">"always"</span>], <span class="comment">//赋值运算符 += -=什么的</span></span><br><span class="line">        <span class="string">"operator-linebreak"</span>: [<span class="number">2</span>, <span class="string">"after"</span>], <span class="comment">//换行时运算符在行尾还是行首</span></span><br><span class="line">        <span class="string">"padded-blocks"</span>: <span class="number">0</span>, <span class="comment">//块语句内行首行尾是否要空行</span></span><br><span class="line">        <span class="string">"prefer-const"</span>: <span class="number">0</span>, <span class="comment">//首选const</span></span><br><span class="line">        <span class="string">"prefer-spread"</span>: <span class="number">0</span>, <span class="comment">//首选展开运算</span></span><br><span class="line">        <span class="string">"prefer-reflect"</span>: <span class="number">0</span>, <span class="comment">//首选Reflect的方法</span></span><br><span class="line">        <span class="string">"quotes"</span>: [<span class="number">1</span>, <span class="string">"single"</span>], <span class="comment">//引号类型 `` "" ''</span></span><br><span class="line">        <span class="string">"quote-props"</span>: [<span class="number">2</span>, <span class="string">"always"</span>], <span class="comment">//对象字面量中的属性名是否强制双引号</span></span><br><span class="line">        <span class="string">"radix"</span>: <span class="number">2</span>, <span class="comment">//parseInt必须指定第二个参数</span></span><br><span class="line">        <span class="string">"id-match"</span>: <span class="number">0</span>, <span class="comment">//命名检测</span></span><br><span class="line">        <span class="string">"require-yield"</span>: <span class="number">0</span>, <span class="comment">//生成器函数必须有yield</span></span><br><span class="line">        <span class="string">"semi"</span>: [<span class="number">2</span>, <span class="string">"always"</span>], <span class="comment">//语句强制分号结尾</span></span><br><span class="line">        <span class="string">"semi-spacing"</span>: [<span class="number">0</span>, &#123; <span class="string">"before"</span>: <span class="literal">false</span>, <span class="string">"after"</span>: <span class="literal">true</span> &#125;], <span class="comment">//分号前后空格</span></span><br><span class="line">        <span class="string">"sort-vars"</span>: <span class="number">0</span>, <span class="comment">//变量声明时排序</span></span><br><span class="line">        <span class="string">"space-after-keywords"</span>: [<span class="number">0</span>, <span class="string">"always"</span>], <span class="comment">//关键字后面是否要空一格</span></span><br><span class="line">        <span class="string">"space-before-blocks"</span>: [<span class="number">0</span>, <span class="string">"always"</span>], <span class="comment">//不以新行开始的块&#123;前面要不要有空格</span></span><br><span class="line">        <span class="string">"space-before-function-paren"</span>: [<span class="number">0</span>, <span class="string">"always"</span>], <span class="comment">//函数定义时括号前面要不要有空格</span></span><br><span class="line">        <span class="string">"space-in-parens"</span>: [<span class="number">0</span>, <span class="string">"never"</span>], <span class="comment">//小括号里面要不要有空格</span></span><br><span class="line">        <span class="string">"space-infix-ops"</span>: <span class="number">0</span>, <span class="comment">//中缀操作符周围要不要有空格</span></span><br><span class="line">        <span class="string">"space-return-throw-case"</span>: <span class="number">2</span>, <span class="comment">//return throw case后面要不要加空格</span></span><br><span class="line">        <span class="string">"space-unary-ops"</span>: [<span class="number">0</span>, &#123; <span class="string">"words"</span>: <span class="literal">true</span>, <span class="string">"nonwords"</span>: <span class="literal">false</span> &#125;], <span class="comment">//一元运算符的前/后要不要加空格</span></span><br><span class="line">        <span class="string">"spaced-comment"</span>: <span class="number">0</span>, <span class="comment">//注释风格要不要有空格什么的</span></span><br><span class="line">        <span class="string">"strict"</span>: <span class="number">2</span>, <span class="comment">//使用严格模式</span></span><br><span class="line">        <span class="string">"use-isnan"</span>: <span class="number">2</span>, <span class="comment">//禁止比较时使用NaN，只能用isNaN()</span></span><br><span class="line">        <span class="string">"valid-jsdoc"</span>: <span class="number">0</span>, <span class="comment">//jsdoc规则</span></span><br><span class="line">        <span class="string">"valid-typeof"</span>: <span class="number">2</span>, <span class="comment">//必须使用合法的typeof的值</span></span><br><span class="line">        <span class="string">"vars-on-top"</span>: <span class="number">2</span>, <span class="comment">//var必须放在作用域顶部</span></span><br><span class="line">        <span class="string">"wrap-iife"</span>: [<span class="number">2</span>, <span class="string">"inside"</span>], <span class="comment">//立即执行函数表达式的小括号风格</span></span><br><span class="line">        <span class="string">"wrap-regex"</span>: <span class="number">0</span>, <span class="comment">//正则表达式字面量用小括号包起来</span></span><br><span class="line">        <span class="string">"yoda"</span>: [<span class="number">2</span>, <span class="string">"never"</span>] <span class="comment">//禁止尤达条件</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Eslint 对于每一个开发者而言都是非常值得使用的，这样会强制你写出高质量且整洁的代码，所以建议大家将Eslint集成进入，来提高项目的质量。&lt;/p&gt;
&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="eslint" scheme="https://ru23.com/tags/eslint/"/>
    
      <category term="前端优化" scheme="https://ru23.com/tags/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>解决.vue文件代码过长的问题</title>
    <link href="https://ru23.com/note/511d4361.html"/>
    <id>https://ru23.com/note/511d4361.html</id>
    <published>2018-11-06T06:04:11.000Z</published>
    <updated>2018-11-06T06:46:47.871Z</updated>
    
    <content type="html"><![CDATA[<p>在工作中，用vue进行开发的，后来发现.vue文件中的逻辑处理特别多的话，那么会导致代码会特别长，即使你打了标签，都觉得写起来很不方便，所以就引发了我的思考，能不能把js和scss单独拎出去，vue文件只是负责写html的，后来我就在网上一顿查啊，终于，功夫不负有心人，让我给查到了，下面我就给大家演示一下把vue文件的html、scss、js如何分开写：</p><p>首先先在vue统计目录下新建一个js、scss文件，如下图所示，名字无所谓，你叫index.js和index.scss都行<br>然后在vue文件中这样写<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class = &quot;loginModuel&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import index from &quot;./index&quot;</span><br><span class="line">    export default&#123;</span><br><span class="line">        ...index</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang = &quot;scss&quot; scoped&gt;</span><br><span class="line">    @import &quot;./index.scss&quot;;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p><p>index.js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    data()&#123;</span><br><span class="line">        <span class="keyword">return</span>&#123;</span><br><span class="line">            msg:<span class="string">"这是登录页面"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>棒极了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在工作中，用vue进行开发的，后来发现.vue文件中的逻辑处理特别多的话，那么会导致代码会特别长，即使你打了标签，都觉得写起来很不方便，所以就引发了我的思考，能不能把js和scss单独拎出去，vue文件只是负责写html的，后来我就在网上一顿查啊，终于，功夫不负有心人，让我
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="vue" scheme="https://ru23.com/tags/vue/"/>
    
      <category term="前端优化" scheme="https://ru23.com/tags/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>基于react的audio组件</title>
    <link href="https://ru23.com/note/de6d4618.html"/>
    <id>https://ru23.com/note/de6d4618.html</id>
    <published>2018-11-06T06:02:41.000Z</published>
    <updated>2018-11-09T03:48:31.881Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>知识点：<br>子组件给父组件传值：<br>参考：<a href="http://taobaofed.org/blog/2016/11/17/react-components-communication/" target="_blank" rel="noopener">http://taobaofed.org/blog/2016/11/17/react-components-communication/</a></p></blockquote><p>父组件<br><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 基于react的audio组件</span></span><br><span class="line"><span class="comment"> * @param &#123;Array&#125; courseWareList 课件列表</span></span><br><span class="line"><span class="comment"> * @buttonResponse &#123;function&#125; 回调audio组件，控制每个audio的属性</span></span><br><span class="line"><span class="comment"> * @author frank</span></span><br><span class="line"><span class="comment"> * @description  </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> Audio <span class="keyword">from</span> <span class="string">'./audio'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">orderRecordCourseDetail</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="keyword">super</span>(props);</span><br><span class="line">        <span class="keyword">this</span>.state = &#123;</span><br><span class="line">            courseWareList: []</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//回调audio组件的值</span></span><br><span class="line">    buttonResponse(list, id, flag) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(list, id, flag)</span><br><span class="line">        list[id].isPlay = flag;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">67</span>, <span class="string">"list值"</span>, list[id]);</span><br><span class="line">        <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">        that.setState(&#123; <span class="attr">courseWareList</span>: list &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div className=<span class="string">'course-information-page'</span>&gt;</span><br><span class="line">                &lt;ul className=<span class="string">'resources'</span>  &gt;</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">this</span>.state.courseWareList.map(<span class="function"><span class="keyword">function</span> (<span class="params">obj, i</span>) </span>&#123;</span><br><span class="line">                            obj.fileType = Util.checkFileType(obj.courseCoursewareName, obj.courseCoursewareType)</span><br><span class="line">                            <span class="keyword">return</span> (</span><br><span class="line">                                &lt;li&gt;</span><br><span class="line">                                    &lt;Audio closeAllAudio=&#123;(courseWareList, id, flag) =&gt; <span class="keyword">this</span>.buttonResponse(courseWareList, id, flag)&#125;</span><br><span class="line">                                        src=&#123;obj.courseCoursewareUrl&#125; id=&#123;i&#125; courseCoursewareName=&#123;obj.courseCoursewareName&#125;</span><br><span class="line">                                        courseWareList=&#123;that.state.courseWareList&#125; isPlay=&#123;obj.isPlay&#125; /&gt;</span><br><span class="line">                                &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">                            )</span></span><br><span class="line"><span class="regexp">                        &#125;, this)</span></span><br><span class="line"><span class="regexp">                    &#125;</span></span><br><span class="line"><span class="regexp">                &lt;/u</span>l&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        )</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default orderRecordCourseDetail</span></span><br></pre></td></tr></table></figure></p><p>子组件 audio.jsx<br><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./audio.scss'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">audio</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="keyword">super</span>(props);</span><br><span class="line">        <span class="keyword">this</span>.state = &#123;</span><br><span class="line">            isMuted: <span class="literal">false</span>,</span><br><span class="line">            volume: <span class="number">100</span>,</span><br><span class="line">            allTime: <span class="number">0</span>,</span><br><span class="line">            currentTime: <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    componentWillMount() &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 暂停函数</span></span><br><span class="line">    pauseAll() &#123;</span><br><span class="line">        <span class="keyword">let</span> audios = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"audio"</span>);</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        [].forEach.call(audios, <span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 将audios中其他的audio全部暂停</span></span><br><span class="line">            i !== self &amp;&amp; i.pause();</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    controlAudio(type, value) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"controlAudio---type"</span>, type);</span><br><span class="line">        <span class="keyword">const</span> &#123; id, src &#125; = <span class="keyword">this</span>.props;</span><br><span class="line">        <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">const</span> audio = <span class="built_in">document</span>.getElementById(<span class="string">`audio<span class="subst">$&#123;id&#125;</span>`</span>);</span><br><span class="line">        <span class="keyword">let</span> courseWareList = <span class="keyword">this</span>.props.courseWareList;</span><br><span class="line">        <span class="keyword">let</span> audios = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"audio"</span>); <span class="comment">// 获取所有audios</span></span><br><span class="line">        <span class="comment">// 给play事件绑定暂停函数</span></span><br><span class="line">        [].forEach.call(audios, <span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">            i.addEventListener(<span class="string">"play"</span>, that.pauseAll.bind(i));</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'allTime'</span>:</span><br><span class="line">                <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                    allTime: audio.duration</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'play'</span>:</span><br><span class="line">                <span class="comment">// 解决音频文件暂停和播放操作间隔时间问题；</span></span><br><span class="line">                <span class="keyword">let</span> isPlaying = audio.currentTime &gt; <span class="number">0</span> &amp;&amp; !audio.paused &amp;&amp; !audio.ended &amp;&amp; audio.readyState &gt; <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span> (!isPlaying) &#123;</span><br><span class="line">                    setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        audio.play().</span><br><span class="line">                            <span class="keyword">catch</span>(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                                <span class="built_in">console</span>.log(<span class="string">""</span>, e.message);</span><br><span class="line">                                <span class="built_in">console</span>.log(<span class="string">""</span>, e.description);</span><br><span class="line">                            &#125;);</span><br><span class="line">                    &#125;, <span class="number">150</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    alert(<span class="string">"网络缓慢，正在加载音频..."</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                courseWareList.map(<span class="function"><span class="keyword">function</span> (<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (that.props.id == index) &#123;</span><br><span class="line">                        courseWareList[index].isPlay = <span class="literal">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        courseWareList[index].isPlay = <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"courseWareList.map"</span>, courseWareList)</span><br><span class="line">                that.props.closeAllAudio(courseWareList, <span class="keyword">this</span>.props.id, <span class="literal">true</span>);</span><br><span class="line">                audio.play();</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'pause'</span>:</span><br><span class="line">                audio.pause();</span><br><span class="line">                <span class="comment">// this.setState(&#123;</span></span><br><span class="line">                <span class="comment">//     isPlay: false</span></span><br><span class="line">                <span class="comment">// &#125;)</span></span><br><span class="line">                courseWareList.map(<span class="function"><span class="keyword">function</span> (<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">                    courseWareList[index].isPlay = <span class="literal">false</span>;</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"courseWareList.map"</span>, courseWareList)</span><br><span class="line">                that.props.closeAllAudio(courseWareList, <span class="keyword">this</span>.props.id, <span class="literal">false</span>);</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'muted'</span>:</span><br><span class="line">                <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                    isMuted: !audio.muted</span><br><span class="line">                &#125;)</span><br><span class="line">                audio.muted = !audio.muted</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'changeCurrentTime'</span>:</span><br><span class="line">                <span class="keyword">let</span> range = <span class="built_in">document</span>.getElementById(<span class="string">`range<span class="subst">$&#123;id&#125;</span>`</span>);</span><br><span class="line">                <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                    currentTime: range.value</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="built_in">console</span>.log(range.value);</span><br><span class="line">                <span class="keyword">if</span> (range.value) &#123;</span><br><span class="line">                    audio.currentTime = range.value</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (value == audio.duration) &#123;</span><br><span class="line">                    <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                        isPlay: <span class="literal">false</span></span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'getCurrentTime'</span>:</span><br><span class="line">                <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                    currentTime: audio.currentTime</span><br><span class="line">                &#125;)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (audio.currentTime == audio.duration) &#123;</span><br><span class="line">                    courseWareList.map(<span class="function"><span class="keyword">function</span> (<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">                        courseWareList[index].isPlay = <span class="literal">false</span>;</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'changeVolume'</span>:</span><br><span class="line">                audio.volume = value / <span class="number">100</span></span><br><span class="line">                <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                    volume: value,</span><br><span class="line">                    isMuted: !value</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    millisecondToDate(time) &#123;</span><br><span class="line">        <span class="keyword">const</span> second = <span class="built_in">Math</span>.floor(time % <span class="number">60</span>)</span><br><span class="line">        <span class="keyword">let</span> minite = <span class="built_in">Math</span>.floor(time / <span class="number">60</span>)</span><br><span class="line">        <span class="comment">// let hour</span></span><br><span class="line">        <span class="comment">// if(minite &gt; 60) &#123;</span></span><br><span class="line">        <span class="comment">//   hour = minite / 60</span></span><br><span class="line">        <span class="comment">//   minite = minite % 60</span></span><br><span class="line">        <span class="comment">//   return `$&#123;Math.floor(hour)&#125;:$&#123;Math.floor(minite)&#125;:$&#123;Math.floor(second)&#125;`</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;minite&#125;</span>:<span class="subst">$&#123;second &gt;= <span class="number">10</span> ? second : <span class="string">`0<span class="subst">$&#123;second&#125;</span>`</span>&#125;</span>`</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">const</span> id = <span class="keyword">this</span>.props.id;</span><br><span class="line">        <span class="keyword">const</span> src = <span class="keyword">this</span>.props.src;</span><br><span class="line">        <span class="keyword">let</span> isPlay = <span class="keyword">this</span>.props.isPlay;</span><br><span class="line">        <span class="keyword">const</span> courseCoursewareName = <span class="keyword">this</span>.props.courseCoursewareName;</span><br><span class="line">        <span class="keyword">let</span> currentTime = <span class="keyword">this</span>.state.currentTime;</span><br><span class="line">        <span class="keyword">let</span> allTime = <span class="keyword">this</span>.state.allTime;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;div className=<span class="string">"audioBox "</span>&gt;</span><br><span class="line">                    &lt;audio id=&#123;<span class="string">`audio<span class="subst">$&#123;id&#125;</span>`</span>&#125; src=&#123;src&#125; preload=&#123;<span class="literal">true</span>&#125;</span><br><span class="line">                        onCanPlay=&#123;() =&gt; <span class="keyword">this</span>.controlAudio(<span class="string">'allTime'</span>)&#125;</span><br><span class="line">                        onTimeUpdate=&#123;(e) =&gt; <span class="keyword">this</span>.controlAudio(<span class="string">'getCurrentTime'</span>)&#125;</span><br><span class="line">                    &gt;</span><br><span class="line">                        您的浏览器不支持 audio 标签。</span><br><span class="line">                    &lt;<span class="regexp">/audio&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">                    &lt;div className='left file'&gt;&#123;courseCoursewareName&#125;&lt;/</span>div&gt;</span><br><span class="line">                    &lt;div</span><br><span class="line">                        className=&#123;isPlay ? <span class="string">'pause'</span> : <span class="string">'play'</span>&#125;</span><br><span class="line">                        onClick=&#123;() =&gt; <span class="keyword">this</span>.controlAudio(isPlay ? <span class="string">'pause'</span> : <span class="string">'play'</span>)&#125;&gt;</span><br><span class="line">                        &lt;i&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">                    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;div className='progress'&gt;</span></span><br><span class="line"><span class="regexp">                        &lt;div className='progress-container'&gt;</span></span><br><span class="line"><span class="regexp">                            &lt;input id=&#123;`range$&#123;id&#125;`&#125;</span></span><br><span class="line"><span class="regexp">                                type="range"</span></span><br><span class="line"><span class="regexp">                                className="time"</span></span><br><span class="line"><span class="regexp">                                step="0.01"</span></span><br><span class="line"><span class="regexp">                                max=&#123;allTime&#125;</span></span><br><span class="line"><span class="regexp">                                value=&#123;currentTime&#125;</span></span><br><span class="line"><span class="regexp">                                onChange=&#123;(value) =&gt; this.controlAudio('changeCurrentTime', id)&#125;</span></span><br><span class="line"><span class="regexp">                                onClick=&#123;(value) =&gt; this.controlAudio('changeCurrentTime', id)&#125;</span></span><br><span class="line"><span class="regexp">                            /</span>&gt;</span><br><span class="line">                            &lt;progress value=&#123;currentTime / allTime&#125; className=<span class="string">" "</span> &gt;<span class="xml"><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></span></span><br><span class="line">                        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">                        &lt;span className="current"&gt;</span></span><br><span class="line"><span class="regexp">                            &#123;this.millisecondToDate(allTime)&#125;</span></span><br><span class="line"><span class="regexp">                        &lt;/</span>span&gt;</span><br><span class="line">                    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">                &lt;/</span>div&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        )</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default audio</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;知识点：&lt;br&gt;子组件给父组件传值：&lt;br&gt;参考：&lt;a href=&quot;http://taobaofed.org/blog/2016/11/17/react-components-communication/&quot; target=&quot;_blank&quot; rel=
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="react" scheme="https://ru23.com/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>2018年11月todolist</title>
    <link href="https://ru23.com/note/b66af66b.html"/>
    <id>https://ru23.com/note/b66af66b.html</id>
    <published>2018-11-03T12:38:59.000Z</published>
    <updated>2018-11-09T07:18:57.334Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
      <category term="todolist" scheme="https://ru23.com/categories/todolist/"/>
    
    
  </entry>
  
  <entry>
    <title>get请求中特殊字符&amp;的处理</title>
    <link href="https://ru23.com/note/540b8f23.html"/>
    <id>https://ru23.com/note/540b8f23.html</id>
    <published>2018-11-01T03:39:23.000Z</published>
    <updated>2018-11-01T08:10:12.994Z</updated>
    
    <content type="html"><![CDATA[<p>当我们的请求的url为:<br><a href="http://localhost:8080/interface?parameter=kalman03&amp;kalman&amp;1" target="_blank" rel="noopener">http://localhost:8080/interface?parameter=kalman03&amp;kalman&amp;1</a><br>或许你预期在服务器端获得的parameter的结果为kalman03#kalman#1,错！！！实际上得到parameter的值为kalman03。</p><p>这究竟是为什么呢？</p><p>#####原因：<br>parameter的值含有特殊字符&amp;，浏览器自动截断&amp;字符和其后面的值，这样得到的值就为kalman03。</p><p><strong>拓展</strong><br>当参数值中含有特殊字符 <code>?!=()#%&amp;</code> 的时候，获得的值同样也会出现与预期结果不一致的情况。</p><p>#####解决方案：<br>方法1：通过post方式传递数据；<br>方法2：对参数进行一次编码parameter=escape(parameter)；</p><p>JavaScript escape() 函数的功能是把其中某些字符替换成了十六进制的转义序列。该方法不会对ASCII 字母和数字进行编码，也不会对下面这些 ASCII 标点符号进行编码： - _ . ! ~ * ‘ ( ) 。其他所有的字符都会被转义序列替换。具体参考：<a href="http://www.w3school.com.cn/js/jsref_escape.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/js/jsref_escape.asp</a>.<br>这样来就不会出现自动截断或者其他意想不到的效果。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;当我们的请求的url为:&lt;br&gt;&lt;a href=&quot;http://localhost:8080/interface?parameter=kalman03&amp;amp;kalman&amp;amp;1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://local
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="踩过的坑" scheme="https://ru23.com/tags/%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"/>
    
  </entry>
  
</feed>

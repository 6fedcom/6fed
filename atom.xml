<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>前端迷 (front-end fan)</title>
  
  <subtitle>frank，前端开发爱好者，沉迷前端，无法自拔,欢迎一切技术交流（不局限于前端），邮箱fanqianweb@gmail.com</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ru23.com/"/>
  <updated>2018-11-09T03:49:23.361Z</updated>
  <id>https://ru23.com/</id>
  
  <author>
    <name>frank</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>11月份整理的知识点</title>
    <link href="https://ru23.com/note/16840463.html"/>
    <id>https://ru23.com/note/16840463.html</id>
    <published>2018-11-08T08:18:57.000Z</published>
    <updated>2018-11-09T03:49:23.361Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
  </entry>
  
  <entry>
    <title>js异步编程（草稿）</title>
    <link href="https://ru23.com/note/580ae11.html"/>
    <id>https://ru23.com/note/580ae11.html</id>
    <published>2018-11-07T09:54:01.000Z</published>
    <updated>2018-11-08T08:18:16.784Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
  </entry>
  
  <entry>
    <title>头条秋招面试题</title>
    <link href="https://ru23.com/note/7c193027.html"/>
    <id>https://ru23.com/note/7c193027.html</id>
    <published>2018-11-06T09:01:07.000Z</published>
    <updated>2018-11-08T02:55:39.126Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h3><h4 id="1-css3特性中的transform：translateZ-0-有什么作用"><a href="#1-css3特性中的transform：translateZ-0-有什么作用" class="headerlink" title="1.css3特性中的transform：translateZ(0)有什么作用"></a>1.css3特性中的transform：translateZ(0)有什么作用</h4><p><strong>答案：</strong><br>gpu加速,提高浏览器渲染的性能</p><hr><h4 id="2-列举三种禁止浏览器缓存的头字段，并写出响应的设置值"><a href="#2-列举三种禁止浏览器缓存的头字段，并写出响应的设置值" class="headerlink" title="2.列举三种禁止浏览器缓存的头字段，并写出响应的设置值"></a>2.列举三种禁止浏览器缓存的头字段，并写出响应的设置值</h4><p>Expires：告诉浏览器把回送的资源缓存多长时间 -1或0则是不缓存<br><strong>简要：添加Expires头能有效的利用浏览器的缓存能力来改善页面的性能，能在后续的页面中有效避免很多不必要的Http请求，WEB服务器使用Expires头来告诉Web客户端它可以使用一个组件的当前副本，直到指定的时间为止。</strong><br>例如：Expires：Thu，15 Apr  2010  20：00：00  GMT;  他告诉浏览器缓存有效性持续到2010年4月15日为止，在这个时间之内相同的请求使用缓存，这个时间之外使用http请求。</p><p>Cache-Control：no-cache<br>Cathe-Control：max-age=315360000</p><p>Expires有一个非常大的缺陷，它使用一个固定的时间，要求服务器与客户端的时钟保持严格的同步，并且这一天到来后，服务器还得重新设定新的时间。<br>HTTP1.1引入了Cathe-Control，它使用max-age指定组件被缓存多久，从请求开始在max-age时间内浏览器使用缓存，之外的使用请求，这样就可以消除Expires的限制，<br>如果对浏览器兼容性要求很高的话，可以两个都使用。</p><p>Pragma：no-cache</p><hr><h4 id="3-精确获取页面元素位置的方式有哪些"><a href="#3-精确获取页面元素位置的方式有哪些" class="headerlink" title="3.精确获取页面元素位置的方式有哪些"></a>3.精确获取页面元素位置的方式有哪些</h4><p>那就是使用getBoundingClientRect()方法。它返回一个对象，其中包含了left、right、top、bottom四个属性，分别对应了该元素的左上角和右下角相对于浏览器窗口（viewport）左上角的距离。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> X= <span class="keyword">this</span>.getBoundingClientRect().left;</span><br><span class="line"><span class="keyword">var</span> Y =<span class="keyword">this</span>.getBoundingClientRect().top;</span><br><span class="line"><span class="comment">//再加上滚动距离，就可以得到绝对位置</span></span><br><span class="line"><span class="keyword">var</span> X= <span class="keyword">this</span>.getBoundingClientRect().left+<span class="built_in">document</span>.documentElement.scrollLeft;</span><br><span class="line"><span class="keyword">var</span> Y =<span class="keyword">this</span>.getBoundingClientRect().top+<span class="built_in">document</span>.documentElement.scrollTop;</span><br></pre></td></tr></table></figure></p><hr><h4 id="4-正则从2018-10-07T11-48-47-Asia-zh-cn-提取出来结果-2018-10-07-11-48-47"><a href="#4-正则从2018-10-07T11-48-47-Asia-zh-cn-提取出来结果-2018-10-07-11-48-47" class="headerlink" title="4.正则从2018-10-07T11:48:47 Asia/zh-cn 提取出来结果[2018,10,07,11,48,47]"></a>4.正则从2018-10-07T11:48:47 Asia/zh-cn 提取出来结果[2018,10,07,11,48,47]</h4><p><strong>思路：</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">"2018-10-07T11:48:47 Asia/zh-cn"</span>;</span><br><span class="line"><span class="comment">// step1 正则截取空格以后的字符串 ;</span></span><br><span class="line">str = str.match(<span class="regexp">/(\S*) /</span>)[<span class="number">1</span>]</span><br><span class="line"><span class="comment">// step2 正则replace掉符号-和T </span></span><br><span class="line">str = str.replace(<span class="regexp">/-|\T|\:/g</span>, <span class="string">","</span>)</span><br><span class="line">str =str.split(<span class="string">","</span>)</span><br></pre></td></tr></table></figure></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/11/reg.jpg" alt="正则替换" title="">                </div>                <div class="image-caption">正则替换</div>            </figure><p><strong>拓展：</strong><br>1、js截取两个字符串之间的内容：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"aaabbbcccdddeeefff"</span>;</span><br><span class="line">str = str.match(<span class="regexp">/aaa(\S*)fff/</span>)[<span class="number">1</span>];</span><br><span class="line">alert(str);<span class="comment">//结果bbbcccdddeee</span></span><br></pre></td></tr></table></figure></p><p>2、js截取某个字符串前面的内容：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"aaabbbcccdddeeefff"</span>;</span><br><span class="line">tr = str.match(<span class="regexp">/(\S*)fff/</span>)[<span class="number">1</span>];</span><br><span class="line">alert(str);<span class="comment">//结果aaabbbcccddd</span></span><br></pre></td></tr></table></figure></p><p>3、js截取某个字符串后面的内容：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"aaabbbcccdddeeefff"</span>;</span><br><span class="line">str = str.match(<span class="regexp">/aaa(\S*)/</span>)[<span class="number">1</span>];</span><br><span class="line">alert(str);<span class="comment">//结果bbbcccdddeeefff</span></span><br></pre></td></tr></table></figure></p><hr><h4 id="5-如何判断object是数组类型？"><a href="#5-如何判断object是数组类型？" class="headerlink" title="5.如何判断object是数组类型？"></a>5.如何判断object是数组类型？</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="keyword">typeof</span> <span class="number">1</span>);                <span class="comment">// 返回字符串"number" </span></span><br><span class="line">alert(<span class="keyword">typeof</span> <span class="string">"1"</span>);              <span class="comment">// 返回字符串"string" </span></span><br><span class="line">alert(<span class="keyword">typeof</span> <span class="literal">true</span>);             <span class="comment">// 返回字符串"boolean" </span></span><br><span class="line">alert(<span class="keyword">typeof</span> &#123;&#125;);               <span class="comment">// 返回字符串"object" </span></span><br><span class="line">alert(<span class="keyword">typeof</span> []);               <span class="comment">// 返回字符串"object " </span></span><br><span class="line">alert(<span class="keyword">typeof</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;);     <span class="comment">// 返回字符串"function" </span></span><br><span class="line">alert(<span class="keyword">typeof</span> <span class="literal">null</span>);             <span class="comment">// 返回字符串"object" </span></span><br><span class="line">alert(<span class="keyword">typeof</span> <span class="literal">undefined</span>);        <span class="comment">// 返回字符串"undefined"</span></span><br></pre></td></tr></table></figure><p>其中，typeof {}和typeof []的结果都是object，那么问题来了，我怎么通过typeof去判断一个对象是不是数组类型呢？</p><p>对象是对象，数组也是对象，js中万物皆对象，很显然，通过简单的typeof运算符是不能够达到目的，我们得换个方法。</p><p>1、从原型入手，Array.prototype.isPrototypeOf(obj);</p><p>利用isPrototypeOf()方法，判定Array是不是在obj的原型链中，如果是，则返回true,否则false。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/11/isarray1.png" alt="判断object是数组类型" title="">                </div>                <div class="image-caption">判断object是数组类型</div>            </figure><p>2.Array.isArray()方法。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>.isArray([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Array</span>.isArray(&#123;<span class="attr">foo</span>: <span class="number">123</span>&#125;); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="string">'foobar'</span>);   <span class="comment">// false</span></span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">undefined</span>);  <span class="comment">// false</span></span><br></pre></td></tr></table></figure></p><h3 id="编程题"><a href="#编程题" class="headerlink" title="编程题"></a>编程题</h3><hr><h5 id="1-已知数据结构users，请实现语法支持user-unique能够按照name字段去重，并输出结构为：-“a”-”b”"><a href="#1-已知数据结构users，请实现语法支持user-unique能够按照name字段去重，并输出结构为：-“a”-”b”" class="headerlink" title="1.已知数据结构users，请实现语法支持user.unique能够按照name字段去重，并输出结构为：[“a”,”b”]"></a>1.已知数据结构users，请实现语法支持user.unique能够按照name字段去重，并输出结构为：[“a”,”b”]</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> users=[&#123;</span><br><span class="line">   id:<span class="number">1</span>,<span class="attr">name</span>:<span class="string">"a"</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">   id:<span class="number">2</span>,<span class="attr">name</span>:<span class="string">"a"</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">   id:<span class="number">3</span>,<span class="attr">name</span>:<span class="string">"b"</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">   id:<span class="number">4</span>,<span class="attr">name</span>:<span class="string">"v"</span></span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>.prototype.unique = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> res;</span><br><span class="line">    <span class="keyword">this</span>.map(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>[item.id - <span class="number">1</span>] = item.name</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// ES6里新添加了两个很好用的东西，set和Array.from</span></span><br><span class="line">    <span class="comment">// set是一种新的数据结构，它可以接收一个数组或者是类数组对象，自动去重其中的重复项目。</span></span><br><span class="line">    res=<span class="keyword">new</span> <span class="built_in">Set</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"new Set对象"</span>,res)</span><br><span class="line">    <span class="comment">// 但是这里大家可以看到，set返回的是一个对象，但是我们想要的是数组啊。</span></span><br><span class="line">    <span class="comment">// 这回，就该轮到Array.from出场了，它的作用，就是可以把类数组对象、可迭代对象转化为数组。</span></span><br><span class="line">    res=<span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>(<span class="keyword">this</span>));</span><br><span class="line">    <span class="keyword">return</span>  res<span class="comment">//es6 数组去重</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(users.unique());</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/11/unique.png" alt="去重" title="">                </div>                <div class="image-caption">去重</div>            </figure><hr><h5 id="2-已知如下对象，请基于es6的proxy方法设计一个属性拦截读取操作的例子，要求实现去访问目标对象example中不存在的属性时，抛出错误：Property-“-property-”-does-not-exist"><a href="#2-已知如下对象，请基于es6的proxy方法设计一个属性拦截读取操作的例子，要求实现去访问目标对象example中不存在的属性时，抛出错误：Property-“-property-”-does-not-exist" class="headerlink" title="2.已知如下对象，请基于es6的proxy方法设计一个属性拦截读取操作的例子，要求实现去访问目标对象example中不存在的属性时，抛出错误：Property “$(property)” does not exist"></a>2.已知如下对象，请基于es6的proxy方法设计一个属性拦截读取操作的例子，要求实现去访问目标对象example中不存在的属性时，抛出错误：Property “$(property)” does not exist</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> man=&#123;</span><br><span class="line">    name:<span class="string">'jscoder'</span>,</span><br><span class="line">    age:<span class="number">22</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">//补全代码</span></span><br><span class="line"><span class="keyword">const</span> proxy = <span class="keyword">new</span> <span class="built_in">Proxy</span>(...)</span><br><span class="line">proxy.name <span class="comment">//"jscoder"</span></span><br><span class="line">proxy.age <span class="comment">//22</span></span><br><span class="line">proxy.location <span class="comment">//Property "$(property)" does not exist</span></span><br></pre></td></tr></table></figure><p><strong>考点</strong><br>es6 javascript的Proxy 实例的方法 ,<code>get()</code> get方法用于拦截某个属性的读取操作。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> man = &#123;</span><br><span class="line">name:<span class="string">'jscoder'</span>,</span><br><span class="line">    age:<span class="number">22</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> proxy = <span class="keyword">new</span> <span class="built_in">Proxy</span>(man, &#123;</span><br><span class="line">get: <span class="function"><span class="keyword">function</span>(<span class="params">target, property</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(property <span class="keyword">in</span> target) &#123;</span><br><span class="line"><span class="keyword">return</span> target[property];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">ReferenceError</span>(<span class="string">`Property <span class="subst">$&#123;property&#125;</span> does not exist.`</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(proxy.name)</span><br><span class="line"><span class="built_in">console</span>.log(proxy.age)</span><br><span class="line"><span class="built_in">console</span>.log(proxy.location)</span><br></pre></td></tr></table></figure><p>Proxy 实例的方法的其他方法参考这个链接，很详细<br><a href="https://blog.csdn.net/qq_30100043/article/details/53443017" target="_blank" rel="noopener">https://blog.csdn.net/qq_30100043/article/details/53443017</a></p><hr><h5 id="3-给出如下虚拟dom的数据结构，如何实现简单的虚拟dom，渲染到目标dom树"><a href="#3-给出如下虚拟dom的数据结构，如何实现简单的虚拟dom，渲染到目标dom树" class="headerlink" title="3.给出如下虚拟dom的数据结构，如何实现简单的虚拟dom，渲染到目标dom树"></a>3.给出如下虚拟dom的数据结构，如何实现简单的虚拟dom，渲染到目标dom树</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//样例数据</span></span><br><span class="line"><span class="keyword">let</span> demoNode = (&#123;</span><br><span class="line">    tagName: <span class="string">'ul'</span>,</span><br><span class="line">    props: &#123;<span class="string">'class'</span>: <span class="string">'list'</span>&#125;,</span><br><span class="line">    children: [</span><br><span class="line">        (&#123;<span class="attr">tagName</span>: <span class="string">'li'</span>, <span class="attr">children</span>: [<span class="string">'douyin'</span>]&#125;),</span><br><span class="line">        (&#123;<span class="attr">tagName</span>: <span class="string">'li'</span>, <span class="attr">children</span>: [<span class="string">'toutiao'</span>]&#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>//构建一个render函数，将demoNode对象渲染为以下dom<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>douyin<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>toutiao<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>看到虚拟DOM，是不是感觉很玄乎，但是剥开它华丽的外衣，也就那样:</p><ol><li>通过JavaScript来构建虚拟的DOM树结构，并将其呈现到页面中；</li><li>当数据改变，引起DOM树结构发生改变，从而生成一颗新的虚拟DOM树，将其与之前的DOM对比，将变化部分应用到真实的DOM树中，即页面中。<br>通过上面的介绍，下面，我们就来实现一个简单的虚拟DOM，并将其与真实的DOM关联。</li></ol><p><strong>构建虚拟DOM</strong></p><p>虚拟DOM，其实就是用JavaScript对象来构建DOM树，如上ul组件模版，其树形结构如下：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/11/domtree.png" alt="DOM树" title="">                </div>                <div class="image-caption">DOM树</div>            </figure><br>通过JavaScript，我们可以很容易构建它，如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> elem = Element(&#123;</span><br><span class="line">    tagName: <span class="string">'ul'</span>,</span><br><span class="line">    props: &#123;<span class="string">'class'</span>: <span class="string">'list'</span>&#125;,</span><br><span class="line">    children: [</span><br><span class="line">        Element(&#123;<span class="attr">tagName</span>: <span class="string">'li'</span>, <span class="attr">children</span>: [<span class="string">'item1'</span>]&#125;),</span><br><span class="line">        Element(&#123;<span class="attr">tagName</span>: <span class="string">'li'</span>, <span class="attr">children</span>: [<span class="string">'item2'</span>]&#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><blockquote><p>note：Element为一个构造函数，返回一个Element对象。为了更清晰的呈现虚拟DOM结构，我们省略了new，而在Element中实现。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @Params:</span></span><br><span class="line"><span class="comment">*     tagName(string)(requered)</span></span><br><span class="line"><span class="comment">*     props(object)(optional)</span></span><br><span class="line"><span class="comment">*     children(array)(optional)</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Element</span>(<span class="params">&#123;tagName, props, children&#125;</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="keyword">this</span> <span class="keyword">instanceof</span> Element))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Element(&#123;tagName, props, children&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.tagName = tagName;</span><br><span class="line">    <span class="keyword">this</span>.props = props || &#123;&#125;;</span><br><span class="line">    <span class="keyword">this</span>.children = children || [];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了，通过Element我们可以任意地构建虚拟DOM树了。但是有个问题，虚拟的终归是虚拟的，我们得将其呈现到页面中，不然，没卵用。。</p><p>怎么呈现呢？</p><p>从上面得知，这是一颗树嘛，那我们就通过遍历，逐个节点地创建真实DOM节点:</p><p>　　1. createElement;</p><p>　　2. createTextNode.</p><p>怎么遍历呢？</p><p>因为这是一颗树嘛，对于树形结构无外乎两种遍历：</p><p>　　1. 深度优先遍历(DFS)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/11/shendubianli.png" alt="深度优先遍历" title="">                </div>                <div class="image-caption">深度优先遍历</div>            </figure><p>　　2. 广度优先遍历(BFS)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/11/guangdubianli.png" alt="广度优先遍历" title="">                </div>                <div class="image-caption">广度优先遍历</div>            </figure><p>针对实际情况，我们得采用DFS，为什么呢？</p><p>因为我们得将子节点append到父节点中</p><p>好了，那我们采用DFS，就来实现一个render函数吧，如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Element.prototype.render = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> el = <span class="built_in">document</span>.createElement(<span class="keyword">this</span>.tagName),</span><br><span class="line">        props = <span class="keyword">this</span>.props,</span><br><span class="line">        propName,</span><br><span class="line">        propValue;</span><br><span class="line">    <span class="keyword">for</span>(propName <span class="keyword">in</span> props)&#123;</span><br><span class="line">        propValue = props[propName];</span><br><span class="line">        el.setAttribute(propName, propValue);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.children.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">child</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> childEl = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(child <span class="keyword">instanceof</span> Element)&#123;</span><br><span class="line">            childEl = child.render();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            childEl = <span class="built_in">document</span>.createTextNode(child);</span><br><span class="line">        &#125;</span><br><span class="line">        el.appendChild(childEl);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> el;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>此时，我们就可以轻松地将虚拟DOM呈现到指定真实DOM中啦。假设，我们将上诉ul虚拟DOM呈现到页面body中，如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> elem = Element(&#123;</span><br><span class="line">    tagName: <span class="string">'ul'</span>,</span><br><span class="line">    props: &#123;<span class="string">'class'</span>: <span class="string">'list'</span>&#125;,</span><br><span class="line">    children: [</span><br><span class="line">        Element(&#123;<span class="attr">tagName</span>: <span class="string">'li'</span>, <span class="attr">children</span>: [<span class="string">'item1'</span>]&#125;),</span><br><span class="line">        Element(&#123;<span class="attr">tagName</span>: <span class="string">'li'</span>, <span class="attr">children</span>: [<span class="string">'item2'</span>]&#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">'body'</span>).appendChild(elem.render());</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;简答题&quot;&gt;&lt;a href=&quot;#简答题&quot; class=&quot;headerlink&quot; title=&quot;简答题&quot;&gt;&lt;/a&gt;简答题&lt;/h3&gt;&lt;h4 id=&quot;1-css3特性中的transform：translateZ-0-有什么作用&quot;&gt;&lt;a href=&quot;#1-css3特性中的t
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
  </entry>
  
  <entry>
    <title>Node Sass could not find a binding for W64-bit and Node.js 6.x</title>
    <link href="https://ru23.com/note/a3acb1c1.html"/>
    <id>https://ru23.com/note/a3acb1c1.html</id>
    <published>2018-11-06T06:14:22.000Z</published>
    <updated>2018-11-06T06:46:47.864Z</updated>
    
    <content type="html"><![CDATA[<p>ERROR in ./src/app/css/index.scss<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Module build failed: Error: Missing binding D:\projects\living\user-platform\project\node_modules</span><br><span class="line">-x64-48\binding.node</span><br><span class="line">Node Sass could not find a binding for your current environment: Windows 64-bit with Node.js 6.x</span><br></pre></td></tr></table></figure></p><p>The problem was up since I had installed Node.js 7.x previously, and node-sass was build on Node.js 7.x version.</p><p>So:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm rebuild node-sass</span><br></pre></td></tr></table></figure></p><p>It’s been solved.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ERROR in ./src/app/css/index.scss&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;s
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="npm" scheme="https://ru23.com/tags/npm/"/>
    
      <category term="踩过的坑" scheme="https://ru23.com/tags/%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>Eslint静态代码检查</title>
    <link href="https://ru23.com/note/35a7a4a2.html"/>
    <id>https://ru23.com/note/35a7a4a2.html</id>
    <published>2018-11-06T06:04:59.000Z</published>
    <updated>2018-11-06T06:46:47.867Z</updated>
    
    <content type="html"><![CDATA[<p>Eslint 对于每一个开发者而言都是非常值得使用的，这样会强制你写出高质量且整洁的代码，所以建议大家将Eslint集成进入，来提高项目的质量。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g eslint</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ eslint --init</span><br></pre></td></tr></table></figure><p>将会生成.eslintrc.js文件,执行检查src目录下的main.js单文件的命令</p><p>eslint src/main.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eslint src/main.js</span><br></pre></td></tr></table></figure></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>ESLint的配置最重要的是规则的配置，具体的格式如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;quotes&quot;: [2, &quot;double&quot;]</span><br><span class="line"># 第一部分是规则名</span><br><span class="line"># 第二部分是表示级别：0-不验证；1-警告；2-错误</span><br></pre></td></tr></table></figure></p><p>在 package.json 中添加 eslintConfig 配置块</p><p>直接在代码文件中定义<br>配置文件中的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;extends&quot;: &quot;eslint:recommended&quot;</span><br></pre></td></tr></table></figure></p><p>表示使用默认的规则进行校验，如果自定义规则需要将此设置去掉！</p><h5 id="1-文件中关闭验证"><a href="#1-文件中关闭验证" class="headerlink" title="1.文件中关闭验证"></a>1.文件中关闭验证</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*eslint-disable */</span></span><br><span class="line"><span class="comment">//suppress all warnings between comments</span></span><br><span class="line">alert(<span class="string">'foo'</span>);</span><br><span class="line"><span class="comment">/*eslint-enable */</span></span><br></pre></td></tr></table></figure><h5 id="文件中指定规则不验证"><a href="#文件中指定规则不验证" class="headerlink" title="文件中指定规则不验证"></a>文件中指定规则不验证</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*eslint-disable no-alert, no-console */</span></span><br><span class="line">alert(<span class="string">'foo'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'bar'</span>);</span><br><span class="line"><span class="comment">/*eslint-enable no-alert */</span></span><br></pre></td></tr></table></figure><p>.eslintrc.js 范例<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="string">"env"</span>: &#123;</span><br><span class="line">        <span class="string">"browser"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"es6"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"node"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"extends"</span>: <span class="string">"eslint:recommended"</span>,</span><br><span class="line">    <span class="string">"parserOptions"</span>: &#123;</span><br><span class="line">        <span class="string">"ecmaFeatures"</span>: &#123;</span><br><span class="line">            <span class="string">"jsx"</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"ecmaVersion"</span>: <span class="number">2018</span>,</span><br><span class="line">        <span class="string">"sourceType"</span>: <span class="string">"module"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"plugins"</span>: [</span><br><span class="line">        <span class="string">"react"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"rules"</span>: &#123;</span><br><span class="line">        <span class="string">"no-alert"</span>: <span class="number">0</span>, <span class="comment">//禁止使用alert confirm prompt</span></span><br><span class="line">        <span class="string">"no-array-constructor"</span>: <span class="number">2</span>, <span class="comment">//禁止使用数组构造器</span></span><br><span class="line">        <span class="string">"no-bitwise"</span>: <span class="number">0</span>, <span class="comment">//禁止使用按位运算符</span></span><br><span class="line">        <span class="string">"no-caller"</span>: <span class="number">1</span>, <span class="comment">//禁止使用arguments.caller或arguments.callee</span></span><br><span class="line">        <span class="string">"no-catch-shadow"</span>: <span class="number">2</span>, <span class="comment">//禁止catch子句参数与外部作用域变量同名</span></span><br><span class="line">        <span class="string">"no-class-assign"</span>: <span class="number">2</span>, <span class="comment">//禁止给类赋值</span></span><br><span class="line">        <span class="string">"no-cond-assign"</span>: <span class="number">2</span>, <span class="comment">//禁止在条件表达式中使用赋值语句</span></span><br><span class="line">        <span class="string">"no-console"</span>: <span class="number">2</span>, <span class="comment">//禁止使用console</span></span><br><span class="line">        <span class="string">"no-const-assign"</span>: <span class="number">2</span>, <span class="comment">//禁止修改const声明的变量</span></span><br><span class="line">        <span class="string">"no-constant-condition"</span>: <span class="number">2</span>, <span class="comment">//禁止在条件中使用常量表达式 if(true) if(1)</span></span><br><span class="line">        <span class="string">"no-continue"</span>: <span class="number">0</span>, <span class="comment">//禁止使用continue</span></span><br><span class="line">        <span class="string">"no-control-regex"</span>: <span class="number">2</span>, <span class="comment">//禁止在正则表达式中使用控制字符</span></span><br><span class="line">        <span class="string">"no-debugger"</span>: <span class="number">2</span>, <span class="comment">//禁止使用debugger</span></span><br><span class="line">        <span class="string">"no-delete-var"</span>: <span class="number">2</span>, <span class="comment">//不能对var声明的变量使用delete操作符</span></span><br><span class="line">        <span class="string">"no-div-regex"</span>: <span class="number">1</span>, <span class="comment">//不能使用看起来像除法的正则表达式/=foo/</span></span><br><span class="line">        <span class="string">"no-dupe-keys"</span>: <span class="number">2</span>, <span class="comment">//在创建对象字面量时不允许键重复 &#123;a:1,a:1&#125;</span></span><br><span class="line">        <span class="string">"no-dupe-args"</span>: <span class="number">2</span>, <span class="comment">//函数参数不能重复</span></span><br><span class="line">        <span class="string">"no-duplicate-case"</span>: <span class="number">2</span>, <span class="comment">//switch中的case标签不能重复</span></span><br><span class="line">        <span class="string">"no-else-return"</span>: <span class="number">2</span>, <span class="comment">//如果if语句里面有return,后面不能跟else语句</span></span><br><span class="line">        <span class="string">"no-empty"</span>: <span class="number">2</span>, <span class="comment">//块语句中的内容不能为空</span></span><br><span class="line">        <span class="string">"no-empty-character-class"</span>: <span class="number">2</span>, <span class="comment">//正则表达式中的[]内容不能为空</span></span><br><span class="line">        <span class="string">"no-empty-label"</span>: <span class="number">2</span>, <span class="comment">//禁止使用空label</span></span><br><span class="line">        <span class="string">"no-eq-null"</span>: <span class="number">2</span>, <span class="comment">//禁止对null使用==或!=运算符</span></span><br><span class="line">        <span class="string">"no-eval"</span>: <span class="number">1</span>, <span class="comment">//禁止使用eval</span></span><br><span class="line">        <span class="string">"no-ex-assign"</span>: <span class="number">2</span>, <span class="comment">//禁止给catch语句中的异常参数赋值</span></span><br><span class="line">        <span class="string">"no-extend-native"</span>: <span class="number">2</span>, <span class="comment">//禁止扩展native对象</span></span><br><span class="line">        <span class="string">"no-extra-bind"</span>: <span class="number">2</span>, <span class="comment">//禁止不必要的函数绑定</span></span><br><span class="line">        <span class="string">"no-extra-boolean-cast"</span>: <span class="number">2</span>, <span class="comment">//禁止不必要的bool转换</span></span><br><span class="line">        <span class="string">"no-extra-parens"</span>: <span class="number">2</span>, <span class="comment">//禁止非必要的括号</span></span><br><span class="line">        <span class="string">"no-extra-semi"</span>: <span class="number">2</span>, <span class="comment">//禁止多余的冒号</span></span><br><span class="line">        <span class="string">"no-fallthrough"</span>: <span class="number">1</span>, <span class="comment">//禁止switch穿透</span></span><br><span class="line">        <span class="string">"no-floating-decimal"</span>: <span class="number">2</span>, <span class="comment">//禁止省略浮点数中的0 .5 3.</span></span><br><span class="line">        <span class="string">"no-func-assign"</span>: <span class="number">2</span>, <span class="comment">//禁止重复的函数声明</span></span><br><span class="line">        <span class="string">"no-implicit-coercion"</span>: <span class="number">1</span>, <span class="comment">//禁止隐式转换</span></span><br><span class="line">        <span class="string">"no-implied-eval"</span>: <span class="number">2</span>, <span class="comment">//禁止使用隐式eval</span></span><br><span class="line">        <span class="string">"no-inline-comments"</span>: <span class="number">0</span>, <span class="comment">//禁止行内备注</span></span><br><span class="line">        <span class="string">"no-inner-declarations"</span>: [<span class="number">2</span>, <span class="string">"functions"</span>], <span class="comment">//禁止在块语句中使用声明（变量或函数）</span></span><br><span class="line">        <span class="string">"no-invalid-regexp"</span>: <span class="number">2</span>, <span class="comment">//禁止无效的正则表达式</span></span><br><span class="line">        <span class="string">"no-invalid-this"</span>: <span class="number">2</span>, <span class="comment">//禁止无效的this，只能用在构造器，类，对象字面量</span></span><br><span class="line">        <span class="string">"no-irregular-whitespace"</span>: <span class="number">2</span>, <span class="comment">//不能有不规则的空格</span></span><br><span class="line">        <span class="string">"no-iterator"</span>: <span class="number">2</span>, <span class="comment">//禁止使用__iterator__ 属性</span></span><br><span class="line">        <span class="string">"no-label-var"</span>: <span class="number">2</span>, <span class="comment">//label名不能与var声明的变量名相同</span></span><br><span class="line">        <span class="string">"no-labels"</span>: <span class="number">2</span>, <span class="comment">//禁止标签声明</span></span><br><span class="line">        <span class="string">"no-lone-blocks"</span>: <span class="number">2</span>, <span class="comment">//禁止不必要的嵌套块</span></span><br><span class="line">        <span class="string">"no-lonely-if"</span>: <span class="number">2</span>, <span class="comment">//禁止else语句内只有if语句</span></span><br><span class="line">        <span class="string">"no-loop-func"</span>: <span class="number">1</span>, <span class="comment">//禁止在循环中使用函数（如果没有引用外部变量不形成闭包就可以）</span></span><br><span class="line">        <span class="string">"no-mixed-requires"</span>: [<span class="number">0</span>, <span class="literal">false</span>], <span class="comment">//声明时不能混用声明类型</span></span><br><span class="line">        <span class="string">"no-mixed-spaces-and-tabs"</span>: [<span class="number">2</span>, <span class="literal">false</span>], <span class="comment">//禁止混用tab和空格</span></span><br><span class="line">        <span class="string">"linebreak-style"</span>: [<span class="number">0</span>, <span class="string">"windows"</span>], <span class="comment">//换行风格</span></span><br><span class="line">        <span class="string">"no-multi-spaces"</span>: <span class="number">1</span>, <span class="comment">//不能用多余的空格</span></span><br><span class="line">        <span class="string">"no-multi-str"</span>: <span class="number">2</span>, <span class="comment">//字符串不能用\换行</span></span><br><span class="line">        <span class="string">"no-multiple-empty-lines"</span>: [<span class="number">1</span>, &#123; <span class="string">"max"</span>: <span class="number">2</span> &#125;], <span class="comment">//空行最多不能超过2行</span></span><br><span class="line">        <span class="string">"no-native-reassign"</span>: <span class="number">2</span>, <span class="comment">//不能重写native对象</span></span><br><span class="line">        <span class="string">"no-negated-in-lhs"</span>: <span class="number">2</span>, <span class="comment">//in 操作符的左边不能有!</span></span><br><span class="line">        <span class="string">"no-nested-ternary"</span>: <span class="number">0</span>, <span class="comment">//禁止使用嵌套的三目运算</span></span><br><span class="line">        <span class="string">"no-new"</span>: <span class="number">1</span>, <span class="comment">//禁止在使用new构造一个实例后不赋值</span></span><br><span class="line">        <span class="string">"no-new-func"</span>: <span class="number">1</span>, <span class="comment">//禁止使用new Function</span></span><br><span class="line">        <span class="string">"no-new-object"</span>: <span class="number">2</span>, <span class="comment">//禁止使用new Object()</span></span><br><span class="line">        <span class="string">"no-new-require"</span>: <span class="number">2</span>, <span class="comment">//禁止使用new require</span></span><br><span class="line">        <span class="string">"no-new-wrappers"</span>: <span class="number">2</span>, <span class="comment">//禁止使用new创建包装实例，new String new Boolean new Number</span></span><br><span class="line">        <span class="string">"no-obj-calls"</span>: <span class="number">2</span>, <span class="comment">//不能调用内置的全局对象，比如Math() JSON()</span></span><br><span class="line">        <span class="string">"no-octal"</span>: <span class="number">2</span>, <span class="comment">//禁止使用八进制数字</span></span><br><span class="line">        <span class="string">"no-octal-escape"</span>: <span class="number">2</span>, <span class="comment">//禁止使用八进制转义序列</span></span><br><span class="line">        <span class="string">"no-param-reassign"</span>: <span class="number">2</span>, <span class="comment">//禁止给参数重新赋值</span></span><br><span class="line">        <span class="string">"no-path-concat"</span>: <span class="number">0</span>, <span class="comment">//node中不能使用__dirname或__filename做路径拼接</span></span><br><span class="line">        <span class="string">"no-plusplus"</span>: <span class="number">0</span>, <span class="comment">//禁止使用++，--</span></span><br><span class="line">        <span class="string">"no-process-env"</span>: <span class="number">0</span>, <span class="comment">//禁止使用process.env</span></span><br><span class="line">        <span class="string">"no-process-exit"</span>: <span class="number">0</span>, <span class="comment">//禁止使用process.exit()</span></span><br><span class="line">        <span class="string">"no-proto"</span>: <span class="number">2</span>, <span class="comment">//禁止使用__proto__属性</span></span><br><span class="line">        <span class="string">"no-redeclare"</span>: <span class="number">2</span>, <span class="comment">//禁止重复声明变量</span></span><br><span class="line">        <span class="string">"no-regex-spaces"</span>: <span class="number">2</span>, <span class="comment">//禁止在正则表达式字面量中使用多个空格 /foo bar/</span></span><br><span class="line">        <span class="string">"no-restricted-modules"</span>: <span class="number">0</span>, <span class="comment">//如果禁用了指定模块，使用就会报错</span></span><br><span class="line">        <span class="string">"no-return-assign"</span>: <span class="number">1</span>, <span class="comment">//return 语句中不能有赋值表达式</span></span><br><span class="line">        <span class="string">"no-script-url"</span>: <span class="number">0</span>, <span class="comment">//禁止使用javascript:void(0)</span></span><br><span class="line">        <span class="string">"no-self-compare"</span>: <span class="number">2</span>, <span class="comment">//不能比较自身</span></span><br><span class="line">        <span class="string">"no-sequences"</span>: <span class="number">0</span>, <span class="comment">//禁止使用逗号运算符</span></span><br><span class="line">        <span class="string">"no-shadow"</span>: <span class="number">2</span>, <span class="comment">//外部作用域中的变量不能与它所包含的作用域中的变量或参数同名</span></span><br><span class="line">        <span class="string">"no-shadow-restricted-names"</span>: <span class="number">2</span>, <span class="comment">//严格模式中规定的限制标识符不能作为声明时的变量名使用</span></span><br><span class="line">        <span class="string">"no-spaced-func"</span>: <span class="number">2</span>, <span class="comment">//函数调用时 函数名与()之间不能有空格</span></span><br><span class="line">        <span class="string">"no-sparse-arrays"</span>: <span class="number">2</span>, <span class="comment">//禁止稀疏数组， [1,,2]</span></span><br><span class="line">        <span class="string">"no-sync"</span>: <span class="number">0</span>, <span class="comment">//nodejs 禁止同步方法</span></span><br><span class="line">        <span class="string">"no-ternary"</span>: <span class="number">0</span>, <span class="comment">//禁止使用三目运算符</span></span><br><span class="line">        <span class="string">"no-trailing-spaces"</span>: <span class="number">1</span>, <span class="comment">//一行结束后面不要有空格</span></span><br><span class="line">        <span class="string">"no-this-before-super"</span>: <span class="number">0</span>, <span class="comment">//在调用super()之前不能使用this或super</span></span><br><span class="line">        <span class="string">"no-throw-literal"</span>: <span class="number">2</span>, <span class="comment">//禁止抛出字面量错误 throw "error";</span></span><br><span class="line">        <span class="string">"no-undef"</span>: <span class="number">1</span>, <span class="comment">//不能有未定义的变量</span></span><br><span class="line">        <span class="string">"no-undef-init"</span>: <span class="number">2</span>, <span class="comment">//变量初始化时不能直接给它赋值为undefined</span></span><br><span class="line">        <span class="string">"no-undefined"</span>: <span class="number">2</span>, <span class="comment">//不能使用undefined</span></span><br><span class="line">        <span class="string">"no-unexpected-multiline"</span>: <span class="number">2</span>, <span class="comment">//避免多行表达式</span></span><br><span class="line">        <span class="string">"no-underscore-dangle"</span>: <span class="number">1</span>, <span class="comment">//标识符不能以_开头或结尾</span></span><br><span class="line">        <span class="string">"no-unneeded-ternary"</span>: <span class="number">2</span>, <span class="comment">//禁止不必要的嵌套 var isYes = answer === 1 ? true : false;</span></span><br><span class="line">        <span class="string">"no-unreachable"</span>: <span class="number">2</span>, <span class="comment">//不能有无法执行的代码</span></span><br><span class="line">        <span class="string">"no-unused-expressions"</span>: <span class="number">2</span>, <span class="comment">//禁止无用的表达式</span></span><br><span class="line">        <span class="string">"no-unused-vars"</span>: [<span class="number">2</span>, &#123; <span class="string">"vars"</span>: <span class="string">"all"</span>, <span class="string">"args"</span>: <span class="string">"after-used"</span> &#125;], <span class="comment">//不能有声明后未被使用的变量或参数</span></span><br><span class="line">        <span class="string">"no-use-before-define"</span>: <span class="number">2</span>, <span class="comment">//未定义前不能使用</span></span><br><span class="line">        <span class="string">"no-useless-call"</span>: <span class="number">2</span>, <span class="comment">//禁止不必要的call和apply</span></span><br><span class="line">        <span class="string">"no-void"</span>: <span class="number">2</span>, <span class="comment">//禁用void操作符</span></span><br><span class="line">        <span class="string">"no-var"</span>: <span class="number">0</span>, <span class="comment">//禁用var，用let和const代替</span></span><br><span class="line">        <span class="string">"no-warning-comments"</span>: [<span class="number">1</span>, &#123; <span class="string">"terms"</span>: [<span class="string">"todo"</span>, <span class="string">"fixme"</span>, <span class="string">"xxx"</span>], <span class="string">"location"</span>: <span class="string">"start"</span> &#125;], <span class="comment">//不能有警告备注</span></span><br><span class="line">        <span class="string">"no-with"</span>: <span class="number">2</span>, <span class="comment">//禁用with</span></span><br><span class="line"></span><br><span class="line">        <span class="string">"array-bracket-spacing"</span>: [<span class="number">2</span>, <span class="string">"never"</span>], <span class="comment">//是否允许非空数组里面有多余的空格</span></span><br><span class="line">        <span class="string">"arrow-parens"</span>: <span class="number">0</span>, <span class="comment">//箭头函数用小括号括起来</span></span><br><span class="line">        <span class="string">"arrow-spacing"</span>: <span class="number">0</span>, <span class="comment">//=&gt;的前/后括号</span></span><br><span class="line">        <span class="string">"accessor-pairs"</span>: <span class="number">0</span>, <span class="comment">//在对象中使用getter/setter</span></span><br><span class="line">        <span class="string">"block-scoped-var"</span>: <span class="number">0</span>, <span class="comment">//块语句中使用var</span></span><br><span class="line">        <span class="string">"brace-style"</span>: [<span class="number">1</span>, <span class="string">"1tbs"</span>], <span class="comment">//大括号风格</span></span><br><span class="line">        <span class="string">"callback-return"</span>: <span class="number">1</span>, <span class="comment">//避免多次调用回调什么的</span></span><br><span class="line">        <span class="string">"camelcase"</span>: <span class="number">2</span>, <span class="comment">//强制驼峰法命名</span></span><br><span class="line">        <span class="string">"comma-dangle"</span>: [<span class="number">2</span>, <span class="string">"never"</span>], <span class="comment">//对象字面量项尾不能有逗号</span></span><br><span class="line">        <span class="string">"comma-spacing"</span>: <span class="number">0</span>, <span class="comment">//逗号前后的空格</span></span><br><span class="line">        <span class="string">"comma-style"</span>: [<span class="number">2</span>, <span class="string">"last"</span>], <span class="comment">//逗号风格，换行时在行首还是行尾</span></span><br><span class="line">        <span class="string">"complexity"</span>: [<span class="number">0</span>, <span class="number">11</span>], <span class="comment">//循环复杂度</span></span><br><span class="line">        <span class="string">"computed-property-spacing"</span>: [<span class="number">0</span>, <span class="string">"never"</span>], <span class="comment">//是否允许计算后的键名什么的</span></span><br><span class="line">        <span class="string">"consistent-return"</span>: <span class="number">0</span>, <span class="comment">//return 后面是否允许省略</span></span><br><span class="line">        <span class="string">"consistent-this"</span>: [<span class="number">2</span>, <span class="string">"that"</span>], <span class="comment">//this别名</span></span><br><span class="line">        <span class="string">"constructor-super"</span>: <span class="number">0</span>, <span class="comment">//非派生类不能调用super，派生类必须调用super</span></span><br><span class="line">        <span class="string">"curly"</span>: [<span class="number">2</span>, <span class="string">"all"</span>], <span class="comment">//必须使用 if()&#123;&#125; 中的&#123;&#125;</span></span><br><span class="line">        <span class="string">"default-case"</span>: <span class="number">2</span>, <span class="comment">//switch语句最后必须有default</span></span><br><span class="line">        <span class="string">"dot-location"</span>: <span class="number">0</span>, <span class="comment">//对象访问符的位置，换行的时候在行首还是行尾</span></span><br><span class="line">        <span class="string">"dot-notation"</span>: [<span class="number">0</span>, &#123; <span class="string">"allowKeywords"</span>: <span class="literal">true</span> &#125;], <span class="comment">//避免不必要的方括号</span></span><br><span class="line">        <span class="string">"eol-last"</span>: <span class="number">0</span>, <span class="comment">//文件以单一的换行符结束</span></span><br><span class="line">        <span class="string">"eqeqeq"</span>: <span class="number">2</span>, <span class="comment">//必须使用全等</span></span><br><span class="line">        <span class="string">"func-names"</span>: <span class="number">0</span>, <span class="comment">//函数表达式必须有名字</span></span><br><span class="line">        <span class="string">"func-style"</span>: [<span class="number">0</span>, <span class="string">"declaration"</span>], <span class="comment">//函数风格，规定只能使用函数声明/函数表达式</span></span><br><span class="line">        <span class="string">"generator-star-spacing"</span>: <span class="number">0</span>, <span class="comment">//生成器函数*的前后空格</span></span><br><span class="line">        <span class="string">"guard-for-in"</span>: <span class="number">0</span>, <span class="comment">//for in循环要用if语句过滤</span></span><br><span class="line">        <span class="string">"handle-callback-err"</span>: <span class="number">0</span>, <span class="comment">//nodejs 处理错误</span></span><br><span class="line">        <span class="string">"id-length"</span>: <span class="number">0</span>, <span class="comment">//变量名长度</span></span><br><span class="line">        <span class="string">"indent"</span>: [<span class="number">2</span>, <span class="number">4</span>], <span class="comment">//缩进风格</span></span><br><span class="line">        <span class="string">"init-declarations"</span>: <span class="number">0</span>, <span class="comment">//声明时必须赋初值</span></span><br><span class="line">        <span class="string">"key-spacing"</span>: [<span class="number">0</span>, &#123; <span class="string">"beforeColon"</span>: <span class="literal">false</span>, <span class="string">"afterColon"</span>: <span class="literal">true</span> &#125;], <span class="comment">//对象字面量中冒号的前后空格</span></span><br><span class="line">        <span class="string">"lines-around-comment"</span>: <span class="number">0</span>, <span class="comment">//行前/行后备注</span></span><br><span class="line">        <span class="string">"max-depth"</span>: [<span class="number">0</span>, <span class="number">4</span>], <span class="comment">//嵌套块深度</span></span><br><span class="line">        <span class="string">"max-len"</span>: [<span class="number">0</span>, <span class="number">80</span>, <span class="number">4</span>], <span class="comment">//字符串最大长度</span></span><br><span class="line">        <span class="string">"max-nested-callbacks"</span>: [<span class="number">0</span>, <span class="number">2</span>], <span class="comment">//回调嵌套深度</span></span><br><span class="line">        <span class="string">"max-params"</span>: [<span class="number">0</span>, <span class="number">3</span>], <span class="comment">//函数最多只能有3个参数</span></span><br><span class="line">        <span class="string">"max-statements"</span>: [<span class="number">0</span>, <span class="number">10</span>], <span class="comment">//函数内最多有几个声明</span></span><br><span class="line">        <span class="string">"new-cap"</span>: <span class="number">2</span>, <span class="comment">//函数名首行大写必须使用new方式调用，首行小写必须用不带new方式调用</span></span><br><span class="line">        <span class="string">"new-parens"</span>: <span class="number">2</span>, <span class="comment">//new时必须加小括号</span></span><br><span class="line">        <span class="string">"newline-after-var"</span>: <span class="number">2</span>, <span class="comment">//变量声明后是否需要空一行</span></span><br><span class="line">        <span class="string">"object-curly-spacing"</span>: [<span class="number">0</span>, <span class="string">"never"</span>], <span class="comment">//大括号内是否允许不必要的空格</span></span><br><span class="line">        <span class="string">"object-shorthand"</span>: <span class="number">0</span>, <span class="comment">//强制对象字面量缩写语法</span></span><br><span class="line">        <span class="string">"one-var"</span>: <span class="number">1</span>, <span class="comment">//连续声明</span></span><br><span class="line">        <span class="string">"operator-assignment"</span>: [<span class="number">0</span>, <span class="string">"always"</span>], <span class="comment">//赋值运算符 += -=什么的</span></span><br><span class="line">        <span class="string">"operator-linebreak"</span>: [<span class="number">2</span>, <span class="string">"after"</span>], <span class="comment">//换行时运算符在行尾还是行首</span></span><br><span class="line">        <span class="string">"padded-blocks"</span>: <span class="number">0</span>, <span class="comment">//块语句内行首行尾是否要空行</span></span><br><span class="line">        <span class="string">"prefer-const"</span>: <span class="number">0</span>, <span class="comment">//首选const</span></span><br><span class="line">        <span class="string">"prefer-spread"</span>: <span class="number">0</span>, <span class="comment">//首选展开运算</span></span><br><span class="line">        <span class="string">"prefer-reflect"</span>: <span class="number">0</span>, <span class="comment">//首选Reflect的方法</span></span><br><span class="line">        <span class="string">"quotes"</span>: [<span class="number">1</span>, <span class="string">"single"</span>], <span class="comment">//引号类型 `` "" ''</span></span><br><span class="line">        <span class="string">"quote-props"</span>: [<span class="number">2</span>, <span class="string">"always"</span>], <span class="comment">//对象字面量中的属性名是否强制双引号</span></span><br><span class="line">        <span class="string">"radix"</span>: <span class="number">2</span>, <span class="comment">//parseInt必须指定第二个参数</span></span><br><span class="line">        <span class="string">"id-match"</span>: <span class="number">0</span>, <span class="comment">//命名检测</span></span><br><span class="line">        <span class="string">"require-yield"</span>: <span class="number">0</span>, <span class="comment">//生成器函数必须有yield</span></span><br><span class="line">        <span class="string">"semi"</span>: [<span class="number">2</span>, <span class="string">"always"</span>], <span class="comment">//语句强制分号结尾</span></span><br><span class="line">        <span class="string">"semi-spacing"</span>: [<span class="number">0</span>, &#123; <span class="string">"before"</span>: <span class="literal">false</span>, <span class="string">"after"</span>: <span class="literal">true</span> &#125;], <span class="comment">//分号前后空格</span></span><br><span class="line">        <span class="string">"sort-vars"</span>: <span class="number">0</span>, <span class="comment">//变量声明时排序</span></span><br><span class="line">        <span class="string">"space-after-keywords"</span>: [<span class="number">0</span>, <span class="string">"always"</span>], <span class="comment">//关键字后面是否要空一格</span></span><br><span class="line">        <span class="string">"space-before-blocks"</span>: [<span class="number">0</span>, <span class="string">"always"</span>], <span class="comment">//不以新行开始的块&#123;前面要不要有空格</span></span><br><span class="line">        <span class="string">"space-before-function-paren"</span>: [<span class="number">0</span>, <span class="string">"always"</span>], <span class="comment">//函数定义时括号前面要不要有空格</span></span><br><span class="line">        <span class="string">"space-in-parens"</span>: [<span class="number">0</span>, <span class="string">"never"</span>], <span class="comment">//小括号里面要不要有空格</span></span><br><span class="line">        <span class="string">"space-infix-ops"</span>: <span class="number">0</span>, <span class="comment">//中缀操作符周围要不要有空格</span></span><br><span class="line">        <span class="string">"space-return-throw-case"</span>: <span class="number">2</span>, <span class="comment">//return throw case后面要不要加空格</span></span><br><span class="line">        <span class="string">"space-unary-ops"</span>: [<span class="number">0</span>, &#123; <span class="string">"words"</span>: <span class="literal">true</span>, <span class="string">"nonwords"</span>: <span class="literal">false</span> &#125;], <span class="comment">//一元运算符的前/后要不要加空格</span></span><br><span class="line">        <span class="string">"spaced-comment"</span>: <span class="number">0</span>, <span class="comment">//注释风格要不要有空格什么的</span></span><br><span class="line">        <span class="string">"strict"</span>: <span class="number">2</span>, <span class="comment">//使用严格模式</span></span><br><span class="line">        <span class="string">"use-isnan"</span>: <span class="number">2</span>, <span class="comment">//禁止比较时使用NaN，只能用isNaN()</span></span><br><span class="line">        <span class="string">"valid-jsdoc"</span>: <span class="number">0</span>, <span class="comment">//jsdoc规则</span></span><br><span class="line">        <span class="string">"valid-typeof"</span>: <span class="number">2</span>, <span class="comment">//必须使用合法的typeof的值</span></span><br><span class="line">        <span class="string">"vars-on-top"</span>: <span class="number">2</span>, <span class="comment">//var必须放在作用域顶部</span></span><br><span class="line">        <span class="string">"wrap-iife"</span>: [<span class="number">2</span>, <span class="string">"inside"</span>], <span class="comment">//立即执行函数表达式的小括号风格</span></span><br><span class="line">        <span class="string">"wrap-regex"</span>: <span class="number">0</span>, <span class="comment">//正则表达式字面量用小括号包起来</span></span><br><span class="line">        <span class="string">"yoda"</span>: [<span class="number">2</span>, <span class="string">"never"</span>] <span class="comment">//禁止尤达条件</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Eslint 对于每一个开发者而言都是非常值得使用的，这样会强制你写出高质量且整洁的代码，所以建议大家将Eslint集成进入，来提高项目的质量。&lt;/p&gt;
&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="eslint" scheme="https://ru23.com/tags/eslint/"/>
    
      <category term="前端优化" scheme="https://ru23.com/tags/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>解决.vue文件代码过长的问题</title>
    <link href="https://ru23.com/note/511d4361.html"/>
    <id>https://ru23.com/note/511d4361.html</id>
    <published>2018-11-06T06:04:11.000Z</published>
    <updated>2018-11-06T06:46:47.871Z</updated>
    
    <content type="html"><![CDATA[<p>在工作中，用vue进行开发的，后来发现.vue文件中的逻辑处理特别多的话，那么会导致代码会特别长，即使你打了标签，都觉得写起来很不方便，所以就引发了我的思考，能不能把js和scss单独拎出去，vue文件只是负责写html的，后来我就在网上一顿查啊，终于，功夫不负有心人，让我给查到了，下面我就给大家演示一下把vue文件的html、scss、js如何分开写：</p><p>首先先在vue统计目录下新建一个js、scss文件，如下图所示，名字无所谓，你叫index.js和index.scss都行<br>然后在vue文件中这样写<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class = &quot;loginModuel&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import index from &quot;./index&quot;</span><br><span class="line">    export default&#123;</span><br><span class="line">        ...index</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang = &quot;scss&quot; scoped&gt;</span><br><span class="line">    @import &quot;./index.scss&quot;;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p><p>index.js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    data()&#123;</span><br><span class="line">        <span class="keyword">return</span>&#123;</span><br><span class="line">            msg:<span class="string">"这是登录页面"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>棒极了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在工作中，用vue进行开发的，后来发现.vue文件中的逻辑处理特别多的话，那么会导致代码会特别长，即使你打了标签，都觉得写起来很不方便，所以就引发了我的思考，能不能把js和scss单独拎出去，vue文件只是负责写html的，后来我就在网上一顿查啊，终于，功夫不负有心人，让我
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="vue" scheme="https://ru23.com/tags/vue/"/>
    
      <category term="前端优化" scheme="https://ru23.com/tags/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>基于react的audio组件</title>
    <link href="https://ru23.com/note/de6d4618.html"/>
    <id>https://ru23.com/note/de6d4618.html</id>
    <published>2018-11-06T06:02:41.000Z</published>
    <updated>2018-11-09T03:48:31.881Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>知识点：<br>子组件给父组件传值：<br>参考：<a href="http://taobaofed.org/blog/2016/11/17/react-components-communication/" target="_blank" rel="noopener">http://taobaofed.org/blog/2016/11/17/react-components-communication/</a></p></blockquote><p>父组件<br><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 基于react的audio组件</span></span><br><span class="line"><span class="comment"> * @param &#123;Array&#125; courseWareList 课件列表</span></span><br><span class="line"><span class="comment"> * @buttonResponse &#123;function&#125; 回调audio组件，控制每个audio的属性</span></span><br><span class="line"><span class="comment"> * @author frank</span></span><br><span class="line"><span class="comment"> * @description  </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> Audio <span class="keyword">from</span> <span class="string">'./audio'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">orderRecordCourseDetail</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="keyword">super</span>(props);</span><br><span class="line">        <span class="keyword">this</span>.state = &#123;</span><br><span class="line">            courseWareList: []</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//回调audio组件的值</span></span><br><span class="line">    buttonResponse(list, id, flag) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(list, id, flag)</span><br><span class="line">        list[id].isPlay = flag;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">67</span>, <span class="string">"list值"</span>, list[id]);</span><br><span class="line">        <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">        that.setState(&#123; <span class="attr">courseWareList</span>: list &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div className=<span class="string">'course-information-page'</span>&gt;</span><br><span class="line">                &lt;ul className=<span class="string">'resources'</span>  &gt;</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">this</span>.state.courseWareList.map(<span class="function"><span class="keyword">function</span> (<span class="params">obj, i</span>) </span>&#123;</span><br><span class="line">                            obj.fileType = Util.checkFileType(obj.courseCoursewareName, obj.courseCoursewareType)</span><br><span class="line">                            <span class="keyword">return</span> (</span><br><span class="line">                                &lt;li&gt;</span><br><span class="line">                                    &lt;Audio closeAllAudio=&#123;(courseWareList, id, flag) =&gt; <span class="keyword">this</span>.buttonResponse(courseWareList, id, flag)&#125;</span><br><span class="line">                                        src=&#123;obj.courseCoursewareUrl&#125; id=&#123;i&#125; courseCoursewareName=&#123;obj.courseCoursewareName&#125;</span><br><span class="line">                                        courseWareList=&#123;that.state.courseWareList&#125; isPlay=&#123;obj.isPlay&#125; /&gt;</span><br><span class="line">                                &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">                            )</span></span><br><span class="line"><span class="regexp">                        &#125;, this)</span></span><br><span class="line"><span class="regexp">                    &#125;</span></span><br><span class="line"><span class="regexp">                &lt;/u</span>l&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        )</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default orderRecordCourseDetail</span></span><br></pre></td></tr></table></figure></p><p>子组件 audio.jsx<br><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./audio.scss'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">audio</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="keyword">super</span>(props);</span><br><span class="line">        <span class="keyword">this</span>.state = &#123;</span><br><span class="line">            isMuted: <span class="literal">false</span>,</span><br><span class="line">            volume: <span class="number">100</span>,</span><br><span class="line">            allTime: <span class="number">0</span>,</span><br><span class="line">            currentTime: <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    componentWillMount() &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 暂停函数</span></span><br><span class="line">    pauseAll() &#123;</span><br><span class="line">        <span class="keyword">let</span> audios = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"audio"</span>);</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">        [].forEach.call(audios, <span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 将audios中其他的audio全部暂停</span></span><br><span class="line">            i !== self &amp;&amp; i.pause();</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    controlAudio(type, value) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"controlAudio---type"</span>, type);</span><br><span class="line">        <span class="keyword">const</span> &#123; id, src &#125; = <span class="keyword">this</span>.props;</span><br><span class="line">        <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">const</span> audio = <span class="built_in">document</span>.getElementById(<span class="string">`audio<span class="subst">$&#123;id&#125;</span>`</span>);</span><br><span class="line">        <span class="keyword">let</span> courseWareList = <span class="keyword">this</span>.props.courseWareList;</span><br><span class="line">        <span class="keyword">let</span> audios = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"audio"</span>); <span class="comment">// 获取所有audios</span></span><br><span class="line">        <span class="comment">// 给play事件绑定暂停函数</span></span><br><span class="line">        [].forEach.call(audios, <span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">            i.addEventListener(<span class="string">"play"</span>, that.pauseAll.bind(i));</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'allTime'</span>:</span><br><span class="line">                <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                    allTime: audio.duration</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'play'</span>:</span><br><span class="line">                <span class="comment">// 解决音频文件暂停和播放操作间隔时间问题；</span></span><br><span class="line">                <span class="keyword">let</span> isPlaying = audio.currentTime &gt; <span class="number">0</span> &amp;&amp; !audio.paused &amp;&amp; !audio.ended &amp;&amp; audio.readyState &gt; <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span> (!isPlaying) &#123;</span><br><span class="line">                    setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        audio.play().</span><br><span class="line">                            <span class="keyword">catch</span>(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                                <span class="built_in">console</span>.log(<span class="string">""</span>, e.message);</span><br><span class="line">                                <span class="built_in">console</span>.log(<span class="string">""</span>, e.description);</span><br><span class="line">                            &#125;);</span><br><span class="line">                    &#125;, <span class="number">150</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    alert(<span class="string">"网络缓慢，正在加载音频..."</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                courseWareList.map(<span class="function"><span class="keyword">function</span> (<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (that.props.id == index) &#123;</span><br><span class="line">                        courseWareList[index].isPlay = <span class="literal">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        courseWareList[index].isPlay = <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"courseWareList.map"</span>, courseWareList)</span><br><span class="line">                that.props.closeAllAudio(courseWareList, <span class="keyword">this</span>.props.id, <span class="literal">true</span>);</span><br><span class="line">                audio.play();</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'pause'</span>:</span><br><span class="line">                audio.pause();</span><br><span class="line">                <span class="comment">// this.setState(&#123;</span></span><br><span class="line">                <span class="comment">//     isPlay: false</span></span><br><span class="line">                <span class="comment">// &#125;)</span></span><br><span class="line">                courseWareList.map(<span class="function"><span class="keyword">function</span> (<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">                    courseWareList[index].isPlay = <span class="literal">false</span>;</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"courseWareList.map"</span>, courseWareList)</span><br><span class="line">                that.props.closeAllAudio(courseWareList, <span class="keyword">this</span>.props.id, <span class="literal">false</span>);</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'muted'</span>:</span><br><span class="line">                <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                    isMuted: !audio.muted</span><br><span class="line">                &#125;)</span><br><span class="line">                audio.muted = !audio.muted</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'changeCurrentTime'</span>:</span><br><span class="line">                <span class="keyword">let</span> range = <span class="built_in">document</span>.getElementById(<span class="string">`range<span class="subst">$&#123;id&#125;</span>`</span>);</span><br><span class="line">                <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                    currentTime: range.value</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="built_in">console</span>.log(range.value);</span><br><span class="line">                <span class="keyword">if</span> (range.value) &#123;</span><br><span class="line">                    audio.currentTime = range.value</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (value == audio.duration) &#123;</span><br><span class="line">                    <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                        isPlay: <span class="literal">false</span></span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'getCurrentTime'</span>:</span><br><span class="line">                <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                    currentTime: audio.currentTime</span><br><span class="line">                &#125;)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (audio.currentTime == audio.duration) &#123;</span><br><span class="line">                    courseWareList.map(<span class="function"><span class="keyword">function</span> (<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">                        courseWareList[index].isPlay = <span class="literal">false</span>;</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'changeVolume'</span>:</span><br><span class="line">                audio.volume = value / <span class="number">100</span></span><br><span class="line">                <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                    volume: value,</span><br><span class="line">                    isMuted: !value</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    millisecondToDate(time) &#123;</span><br><span class="line">        <span class="keyword">const</span> second = <span class="built_in">Math</span>.floor(time % <span class="number">60</span>)</span><br><span class="line">        <span class="keyword">let</span> minite = <span class="built_in">Math</span>.floor(time / <span class="number">60</span>)</span><br><span class="line">        <span class="comment">// let hour</span></span><br><span class="line">        <span class="comment">// if(minite &gt; 60) &#123;</span></span><br><span class="line">        <span class="comment">//   hour = minite / 60</span></span><br><span class="line">        <span class="comment">//   minite = minite % 60</span></span><br><span class="line">        <span class="comment">//   return `$&#123;Math.floor(hour)&#125;:$&#123;Math.floor(minite)&#125;:$&#123;Math.floor(second)&#125;`</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;minite&#125;</span>:<span class="subst">$&#123;second &gt;= <span class="number">10</span> ? second : <span class="string">`0<span class="subst">$&#123;second&#125;</span>`</span>&#125;</span>`</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">const</span> id = <span class="keyword">this</span>.props.id;</span><br><span class="line">        <span class="keyword">const</span> src = <span class="keyword">this</span>.props.src;</span><br><span class="line">        <span class="keyword">let</span> isPlay = <span class="keyword">this</span>.props.isPlay;</span><br><span class="line">        <span class="keyword">const</span> courseCoursewareName = <span class="keyword">this</span>.props.courseCoursewareName;</span><br><span class="line">        <span class="keyword">let</span> currentTime = <span class="keyword">this</span>.state.currentTime;</span><br><span class="line">        <span class="keyword">let</span> allTime = <span class="keyword">this</span>.state.allTime;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;div className=<span class="string">"audioBox "</span>&gt;</span><br><span class="line">                    &lt;audio id=&#123;<span class="string">`audio<span class="subst">$&#123;id&#125;</span>`</span>&#125; src=&#123;src&#125; preload=&#123;<span class="literal">true</span>&#125;</span><br><span class="line">                        onCanPlay=&#123;() =&gt; <span class="keyword">this</span>.controlAudio(<span class="string">'allTime'</span>)&#125;</span><br><span class="line">                        onTimeUpdate=&#123;(e) =&gt; <span class="keyword">this</span>.controlAudio(<span class="string">'getCurrentTime'</span>)&#125;</span><br><span class="line">                    &gt;</span><br><span class="line">                        您的浏览器不支持 audio 标签。</span><br><span class="line">                    &lt;<span class="regexp">/audio&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">                    &lt;div className='left file'&gt;&#123;courseCoursewareName&#125;&lt;/</span>div&gt;</span><br><span class="line">                    &lt;div</span><br><span class="line">                        className=&#123;isPlay ? <span class="string">'pause'</span> : <span class="string">'play'</span>&#125;</span><br><span class="line">                        onClick=&#123;() =&gt; <span class="keyword">this</span>.controlAudio(isPlay ? <span class="string">'pause'</span> : <span class="string">'play'</span>)&#125;&gt;</span><br><span class="line">                        &lt;i&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">                    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;div className='progress'&gt;</span></span><br><span class="line"><span class="regexp">                        &lt;div className='progress-container'&gt;</span></span><br><span class="line"><span class="regexp">                            &lt;input id=&#123;`range$&#123;id&#125;`&#125;</span></span><br><span class="line"><span class="regexp">                                type="range"</span></span><br><span class="line"><span class="regexp">                                className="time"</span></span><br><span class="line"><span class="regexp">                                step="0.01"</span></span><br><span class="line"><span class="regexp">                                max=&#123;allTime&#125;</span></span><br><span class="line"><span class="regexp">                                value=&#123;currentTime&#125;</span></span><br><span class="line"><span class="regexp">                                onChange=&#123;(value) =&gt; this.controlAudio('changeCurrentTime', id)&#125;</span></span><br><span class="line"><span class="regexp">                                onClick=&#123;(value) =&gt; this.controlAudio('changeCurrentTime', id)&#125;</span></span><br><span class="line"><span class="regexp">                            /</span>&gt;</span><br><span class="line">                            &lt;progress value=&#123;currentTime / allTime&#125; className=<span class="string">" "</span> &gt;<span class="xml"><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></span></span><br><span class="line">                        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">                        &lt;span className="current"&gt;</span></span><br><span class="line"><span class="regexp">                            &#123;this.millisecondToDate(allTime)&#125;</span></span><br><span class="line"><span class="regexp">                        &lt;/</span>span&gt;</span><br><span class="line">                    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">                &lt;/</span>div&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        )</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default audio</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;知识点：&lt;br&gt;子组件给父组件传值：&lt;br&gt;参考：&lt;a href=&quot;http://taobaofed.org/blog/2016/11/17/react-components-communication/&quot; target=&quot;_blank&quot; rel=
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="react" scheme="https://ru23.com/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>2018年11月todolist</title>
    <link href="https://ru23.com/note/b66af66b.html"/>
    <id>https://ru23.com/note/b66af66b.html</id>
    <published>2018-11-03T12:38:59.000Z</published>
    <updated>2018-11-09T03:34:25.215Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX1/O08+UNcL6MegUMDrb3cwYx+DIrV2cbufTli2UUb2gvC/EtHtDRrOWVCNMTUg2r12O16mw13j7tOeNf8D8iZercZc38otaRgUuoUQalc7iPuUKMibBh9E8HNntTLKF/cLCDAQYddETrPRjCJ4j4DQEmpN2gebizdSL2X6OIBMx12PdXpc1q7ObCKHH5+QHzkNvSpb0OTJOjxKpEKlHKlHt3v7IJnbL7KFoliBiv/pcSoj37Qj095ebPgR3HOtJfLc6V/4oPplwyVfpWPFy1vYc3ru2jRHXxk3LypiU+u0WZip6ZeYiBYYgH7X9+SzHpg6lTjlx/rmvh3OKdEvi7JP4z0+kjeVqyQeY1bx3nmvd+DX3kHfG+qfG/VaSLOO/vlZ4rLIFE2XtBFxQ9GrIVEZ/T+mviadJtxPcgaRADNHpYu5SlYzdbrei02Q1EzsGygo3QS7jKa1pdWZXZKhdWVkzRLF6fmuUftFV/RXF7kUe6rU+fmTxgPCDBfujrHYdaCktb7LJb9b1zSZuieE3/McU9XYQ5wwKXJ9Oofb/d/NrJRxWCTm7sFh1pPDMwudVusxpZxr7Lk/Vgpm6gW+Oh6GrusFV23N/MqDI93nZjLsvlVU8e8EgpgB03Lz59SvSyNY1dbrFnMxe9WLscoWX0NO//1V6YwDO0Do4PL5gtKiVa8LtAW6KJTIsHH5DcBCRzQeFdbac7WC8ivHwDU6a5rb8i5TFRUpNc1CIzRZQT/fFFgkkNULUNqtFmDFfUnne0O87U+dUZi+/y9tTkMQAcxjuR8KSkGPcsa1dCPJNrBL8w238evwLEhvMqMJbwrp4FSGGXR9Gb7wpT6xLmbxgt6TiAs4omgoz9ttshr+27LnySJc4m2WieYtuh3g8hMpoIRGtCs3T9NxvJIARLr1vET+nfcy3lmmc8qbhTL3lF/keRyqQf3qLe2+ydeQNPSqnpRnZ0e41zq02O3bnesh59u9eJTiyq7J35rF5ahHYfKX3DHusLJg8Z8d7g/ZXVH0bbIPNIPruucNxDu4nwe36Q7JacoNuzehknXUDJafrSqzZ3Nr4h6m3hZXMBh9/CFbPm74oe6dKySwT/Yp4jqMRWSFbIvTQ1rqZea5e+z2sc17UCPkmZ+4mSejqeFcQybveWkDINQmzhLASV0Wxj2BSJhaJC4U0rTe0g0mJHYfJZzZxvuLZzhPL3oOFCDhI+ossJvDukoj0VVT/18euUuHCGEjt1XsoeFCQldqyLMMyDEZYFJr/KliqyP9C35SAD2vUor8dCbyYVobfNQOmoOjXMBAvX2QAU27VLKCk8bLVjut4OmdV/xnTf40MzeJR1BsRmEgh6dbxuLU2QU3IvDe0DTP4EWixha+JmungTE8ERgfefgupAKirR/VZ8y1KmBFQ6Yr+f7wpYaFF1QSyDNsy5cZg0etrr6CSGLIot/3znPMWwBgTFeyvEj7NFWIWWWNc2l3+zwh38SJKj8gFsn/pWCzgvYD9EgC3apbxMjqJHyhbZOggyQY5PncE5kSWCJCn/pzGe5d/YYyRvCbWx6TlKGgZccs4MC1DhP4eGosjS5DxrU2kp6hHV/6OWi2fY1gtmjLgKSdF3yZdFmX/KBjpsV9PX7QB4BNkkxUrKpeqLRKNXA6/MvjJkEA6jcq2WLhjVUg0gk9qMJpoSFcs1RL+hERop/JuJrsbEdcBiy3agkr6s5hZCMw6+SU/7opPULDyKXlh7iy8Alq9NiasygZCy6wROvfszehGcFwkrAT7lFK0xJvulgfpi65UXUZvmOPzE7RcyiZbLXvMwiyGM6cTXY7oY8OFu6jDTgSOilPYS4abXkSFrJ84OoF1iUgDdOWztz0m7Bp+jbZh24TcLsAS/TaTLaVMx5J3/eR4FUFIuzDru4ZyWaP5Pjfug1vm8ER5lsxe63fgQTPfRgRENuesOB3cuIHfMBDlmXRKbdHZwp0aGVrcq2Zfg/DcYuXIOAfPGiQbNrDFEvuK0zJBOPOod+StZNNcOKCjqrk0VsTzS+GAFyERKwbEf+De5wauDkSRiSxxWazhdEVU7NZHdRGssJXP16wEDynjolXP33UkZJprULENIGFVw+QiDy9CSivaEtkwXFTwU80yJEJ7Od6jOpiooxMIUaL0sQHd4yXJdeyOcuHK0uEVAyFUBSLGs/H6zfo7GCDM7kpim8yO+VBkCMGZZVQYa8pz10mh2zY4W+BgGZXAIskg7fXldBa6amel4ohjZQ2sayrO7O5mvNcbkuCvjFMlYHsyf1aLL70QCMXkKH+P9b95ncelOiUGDuHQwoAk7d7n1+QP9b5zCrmLFpafyJXzHspJ9Cm8DPndRhu8LMpcYSCyDbLjb2PoZGsbfBLRoCecBj7VqlsVSbUVKC+noy+4roxIoPrzJiaXXC7fWWcR7Iw5ohjOlMsIeQx2mjq83kfIWOA7DjI2jrtnnY4vj/HL9BxcFi34kFvQdX2wqpmNFJXl5FBlPDr5yK9Y/ngPUPSsC6CA8ksIUAlKMQkJvGHvpsc0XMdF/ZJhsZP7DH7ErLb253pR5c9w756DA0VBAcgSOXMQqNhFMaM5hzXcxoi6TKj/x4gQPrw8nd3uuVLmM4hZ52XksbjlN7wiDWkDjKoPEmCXFErTC5UZFRmKYHfdVhe0C3KHLE+MqBf0ia3SpsYbh+8GwiMwFgAlkkeFSlJ7+QjQlC+sC/mynFVbUuphLZsCLB3ld8BLNfQZfm6OVtKk9fTDsgNpfXtRh5sYN+mHyi7H0jM/7fiOuF3NnYiLf5Z80kI3I7Bdi7j9Fa1GsjSTqY5Ki5fu2TFgfCuo98unAENv6OKXUot0nQDaoYuEaNGZ8Dz5nxfLRcscHw1GWgp9vTy85jO3RcxtQl9LBabgnnRbMh5QuzwptiZbRYrLQqzM/IJbgEQDac2FpyK0uXw0kutpLXet+MiQ99kgEOROEJGdk1TsCuo+AwIoUKRHHfYb6onF+zMSUYuGtx7U6GBv9d+BdQ33BuB6A6CoGL8wxLF3CO3yosoPGoCspq65bGWOUhna2skFRz+7mtfZWonnW+VbjgJRUMRucJn81d05On/AZiqOoGTy+4tkjWd721iFOlFK833yysXH+E8jSn7UKclwCCOLBpauEaQmLsEjuqm3/Df9hRHJfADYL68ChPpjKEKjbGPZZBMtjWyZcX9CPuyHBPvHshfHEvGIuoYD4D410MzOLKM2cnSzqXVfEgxboNIOWIKFi+umdDzNxftOTxgOjFiiYklCLS4zTz4Ej/3sWTdURSpGEBqn/rHc5z7EX+cxQfG8lyqJWD75ocgG/TSV/Wh5ZMBiOvZuLQGIzxJDWg6qbegAbzM5qREEJ5LtTOmV/jS2/iojQSzqgDBkG0ukW/uZLzRhbj9q336Dh9e/ua/5tUhy3EBIluo1SvnBWF6Oo5qz2Q3NZHVXqf9BxlS79/9nWj3RhNns565lyaqD7fTkNpcD4xz3QLZTvE2zE7nd7/L6Xgh1XRci19H8pFQ2bM2iaWRoO4v6j7jjyvFp+WiKiGHgukI4JhyPsj3au5HNmUPEjFOClPqXfq3yM4ekxcVU+lYWAvvUWzj/1Ki747WJ2slUvV4hFA87ka94DWJB7W/VXYA1LF+UXaN1wSeihEI/cnx1P3GZg+xwF2lATx6jl/e7EPiw5DVN/6PE+zs= </div>]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
      <category term="todolist" scheme="https://ru23.com/categories/todolist/"/>
    
    
  </entry>
  
  <entry>
    <title>细数国内外的前端大牛</title>
    <link href="https://ru23.com/note/d427e9e2.html"/>
    <id>https://ru23.com/note/d427e9e2.html</id>
    <published>2018-11-01T13:55:38.000Z</published>
    <updated>2018-11-02T08:39:05.432Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>本文将枚举一些前端界内比较熟知的前端技术大牛，分为个人简介、技术博客、擅长领域几个方向，希望能对初步进入前端的人一些指引和学习的方向。以下排名不分先后，个人推荐需要了解的大牛有朴灵，尤雨溪，大漠，张鑫旭，阮一峰，wintercn等。</p><hr><h3 id="国内"><a href="#国内" class="headerlink" title="国内"></a>国内</h3><h5 id="玉伯"><a href="#玉伯" class="headerlink" title="玉伯"></a>玉伯</h5><p><strong>简介</strong><br>玉伯（王保平），淘宝前端类库 KISSY、前端模块化开发框架SeaJS、前端基础类库Arale的创始人。2003-2006 年，中科院物理所研究生，Fortran 与 C 程序员，喜爱实验模拟和数值计算。 2006-2008 年，在中科院软件所互联网实验室从事项目管理软件的研发，C# 与 Java 爱好者。 2008 年 4 月份加入淘宝，就职于 UED 部门。2009 年起，组建前端架构团队，在首页维护、全网性能优化、类库研发、知识沉淀、工具应用等方面取得了丰硕成果。<br><strong>相关链接</strong><br>github <a href="https://github.com/lifesinger" target="_blank" rel="noopener">https://github.com/lifesinger</a><br>知乎 <a href="https://www.zhihu.com/people/lifesinger" target="_blank" rel="noopener">https://www.zhihu.com/people/lifesinger</a><br>微博  <a href="http://weibo.com/lifesinger" target="_blank" rel="noopener">http://weibo.com/lifesinger</a><br>前端大牛是如何炼成的:<a href="https://www.csdn.net/article/2013-09-03/2816801-front-end-development-seajs-framework/3" target="_blank" rel="noopener">https://www.csdn.net/article/2013-09-03/2816801-front-end-development-seajs-framework/3</a></p><hr><h5 id="阮一峰"><a href="#阮一峰" class="headerlink" title="阮一峰"></a>阮一峰</h5><p><strong>简介</strong><br>目前阿里p7，70后，英文名Frank。他原是上海财经大学世界经济博士研究生。主要研究宏观金融、货币政策与美国经济。于2008年6月获得博士学位。目前在上海一所当地大学（上海金融学院 国际经贸学院）任教。他本人也是一名ITa技术人员，主要关注网站制作，并且对自由软件有着坚定不移的信念。除了写博客以外，他还有三个网站：微趣、Italo Calvino in China和读书公园。<br>曾经写过es6入门，软件随想录等书籍。并在个人站点以及github账号中积极布道，为广大的程序员尤其前端提供了很好的入门以及进阶的教程。<br><strong>相关链接：</strong><br>阮一峰博客 :<a href="http://www.ruanyifeng.com/blog/" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/</a><br>github地址:<a href="https://github.com/ruanyf（有很多教程可以参考）" target="_blank" rel="noopener">https://github.com/ruanyf（有很多教程可以参考）</a></p><hr><h5 id="司徒正美"><a href="#司徒正美" class="headerlink" title="司徒正美"></a>司徒正美</h5><p><strong>简介</strong><br>钟钦成，网名司徒正美，著名的Java专家，去哪儿网前端架构师，立志做考古学家的日语系工程师，穿梭于二次元与二进制间的“魔法师”，做过陶艺，写过小说，涉猎Java、Ruby、 Java。曾出版《Java框架设计》一书。<br><strong>相关链接</strong><br>github <a href="https://github.com/RubyLouvre" target="_blank" rel="noopener">https://github.com/RubyLouvre</a><br>知乎 <a href="https://www.zhihu.com/people/si-tu-zheng-mei" target="_blank" rel="noopener">https://www.zhihu.com/people/si-tu-zheng-mei</a><br>微博  <a href="http://weibo.com/jslouvre" target="_blank" rel="noopener">http://weibo.com/jslouvre</a></p><hr><h5 id="朴灵"><a href="#朴灵" class="headerlink" title="朴灵"></a>朴灵</h5><p><strong>简介</strong><br>《深入浅出node.js》作者,大牛,真名田永强，文艺型码农，node.js布道者。现就职于阿里巴巴数据平台，任资深工程师，著有《深入浅出node.js》。他活跃于Cnode社区，是线下会议nodeParty的组织者，同时也是JSConf China（沪JS、京JS，以及杭JS）的组织者之一。朴灵热爱开源，是多个node.js模块的作者<br><strong>相关链接</strong><br>个人github：<a href="https://github.com/JacksonTian" target="_blank" rel="noopener">https://github.com/JacksonTian</a><br>从前端到全栈 :<a href="http://www.ituring.com.cn/article/197773" target="_blank" rel="noopener">http://www.ituring.com.cn/article/197773</a></p><hr><h5 id="尤雨溪"><a href="#尤雨溪" class="headerlink" title="尤雨溪"></a>尤雨溪</h5><p><strong>简介</strong><br>毕业于上海复旦附中，在美国完成大学学业，本科毕业于Colgate University，后在Parsons设计学院获得Design &amp; Technology艺术硕士学位，现任职于纽约Google Creative Lab。2016年9月3日，在南京的JSConf上，Vue作者尤雨溪正式宣布加盟阿里巴巴Weex团队，尤雨溪称他将以技术顾问的身份加入 Weex 团队来做 Vue 和 Weex 的 JavaScript runtime 整合，目标是让大家能用 Vue 的语法跨三端。<br>Vue.js框架的作者，html5版Clear的打造人。他认为，未来App的趋势是轻量化和细化，能解决问题的应用就是好应用。而在移动互联网时代大的背景下，个人开发者的机遇在门槛低，成本低，跨设备和多平台四个方面。<br><strong>相关链接</strong><br>尤雨溪微博:<a href="https://weibo.com/arttechdesign?is_all=1" target="_blank" rel="noopener">https://weibo.com/arttechdesign?is_all=1</a><br>尤雨溪github主页:<a href="https://github.com/yyx990803" target="_blank" rel="noopener">https://github.com/yyx990803</a><br>尤雨溪知乎:<a href="https://www.zhihu.com/people/evanyou/posts" target="_blank" rel="noopener">https://www.zhihu.com/people/evanyou/posts</a></p><hr><h5 id="周爱民"><a href="#周爱民" class="headerlink" title="周爱民"></a>周爱民</h5><p><strong>简介</strong><br>JavaScript语言精髓与编程实践作者，任职于支付宝，<br><strong>相关链接</strong><br>个人博客：<a href="https://aimingoo.github.io/" target="_blank" rel="noopener">https://aimingoo.github.io/</a><br>csdn博客：<a href="http://blog.csdn.net/aimingoo" target="_blank" rel="noopener">http://blog.csdn.net/aimingoo</a><br>真正的架构师是没有title的：<a href="https://segmentfault.com/a/1190000002405506" target="_blank" rel="noopener">https://segmentfault.com/a/1190000002405506</a></p><hr><h5 id="徐涛"><a href="#徐涛" class="headerlink" title="徐涛"></a>徐涛</h5><p><strong>简介</strong><br>汤姆大叔，原名徐涛，资深Web开发工程师，精通JavaScript、CSS、html5等Web开发技术，以及Bootstrap等各种主流Web开发框架。擅长Web系统的架构、设计与开发，参与过全球最大婚恋网站Match、全球最大在线旅游网站Expedia、波音公司、GE医疗和万达集团等多个国际知名企业的Web项目的架构与设计。他还是一位资深的微软技术专家，曾获得MCP、MCTS、MCDBA等近十项认证。翻译了《Java Script编程精解》、《Javascript启示录》、《编写可测试的JavaScript代码》、《Backbone.js应用程序开发》、《JavaScript忍者秘籍》、《JavaScript设计模式》等多本JavaScript方面的著作。<br><strong>相关链接</strong><br>个人博客：<a href="https://www.cnblogs.com/TomXu/" target="_blank" rel="noopener">https://www.cnblogs.com/TomXu/</a></p><hr><h5 id="廖雪峰"><a href="#廖雪峰" class="headerlink" title="廖雪峰"></a>廖雪峰</h5><p><strong>简介</strong><br>技术作家，十年软件开发经验，业余产品经理，精通Java/Python/Ruby/Visual Basic/Objective C等，对开源框架有深入研究，著有号称史上最浅显易懂的git教程，口碑不错的《JS教程》，多个业余开源项目托管在gitHub。<br><strong>相关链接</strong><br>github <a href="https://github.com/michaelliao" target="_blank" rel="noopener">https://github.com/michaelliao</a><br>知乎 <a href="https://www.zhihu.com/people/liaoxuefeng/activities" target="_blank" rel="noopener">https://www.zhihu.com/people/liaoxuefeng/activities</a><br>微博  <a href="http://weibo.com/liaoxuefeng" target="_blank" rel="noopener">http://weibo.com/liaoxuefeng</a></p><hr><h5 id="勾三股四"><a href="#勾三股四" class="headerlink" title="　勾三股四"></a>　勾三股四</h5><p><strong>简介</strong><br>勾三股四，本名赵锦江，阿里巴巴高级前端工程师，前北京傲游前端开发部经理。<br><strong>相关链接</strong><br>github <a href="http://github.com/jinjiang/" target="_blank" rel="noopener">http://github.com/jinjiang/</a><br>知乎 <a href="https://www.zhihu.com/people/jinjiang" target="_blank" rel="noopener">https://www.zhihu.com/people/jinjiang</a><br>微博 <a href="http://weibo.com/mx006" target="_blank" rel="noopener">http://weibo.com/mx006</a></p><hr><h5 id="wintercn"><a href="#wintercn" class="headerlink" title="wintercn"></a>wintercn</h5><p><strong>简介</strong><br>程劭非，阿里巴巴高级技术专家，著名JavaScript专家。曾参与Bambook开发，更早为微软工作，开发Windows CE平台的IE浏览器。<br><strong>相关链接</strong><br>github主页：<a href="https://github.com/wintercn" target="_blank" rel="noopener">https://github.com/wintercn</a><br>个人博客：<a href="http://winter-cn.cnblogs.com/" target="_blank" rel="noopener">http://winter-cn.cnblogs.com/</a><br>微博：@寒冬winter</p><hr><h5 id="吴亮-月影"><a href="#吴亮-月影" class="headerlink" title="吴亮(月影)"></a>吴亮(月影)</h5><p><strong>简介</strong><br>吴亮（网名月影）,毕业于浙江大学，先后在微软亚洲研究院做过访问学生，在金蝶软件有限公司担任过核心开发工程师、设计师和项目经理，在百度电子商务事业部担任过web开发项目经理。现任奇虎360高级技术经理，360前端团队奇舞团负责人。多年来致力于Javasript技术和web标准的推广，活跃于国内各技术社区，现为w3ctech顾问。<br><strong>相关链接</strong><br>微博 ：<a href="http://weibo.com/silverna" target="_blank" rel="noopener">http://weibo.com/silverna</a><br>知乎 <a href="https://www.zhihu.com/people/yue-ying-2-61" target="_blank" rel="noopener">https://www.zhihu.com/people/yue-ying-2-61</a><br>博客 <a href="https://www.h5jun.com/" target="_blank" rel="noopener">https://www.h5jun.com/</a></p><hr><h5 id="张云龙"><a href="#张云龙" class="headerlink" title="张云龙"></a>张云龙</h5><p><strong>简介</strong><br>张云龙(前端农民工),现为全民TV技术总监，前UC浏览器导航团队前端技术负责人，前FIS团队技术负责人。<br><strong>相关链接</strong><br>微博 ：<a href="http://weibo.com/fouber" target="_blank" rel="noopener">http://weibo.com/fouber</a><br>知乎 <a href="https://www.zhihu.com/people/fouber" target="_blank" rel="noopener">https://www.zhihu.com/people/fouber</a><br>github <a href="https://github.com/fouber" target="_blank" rel="noopener">https://github.com/fouber</a></p><hr><h5 id="张鑫旭"><a href="#张鑫旭" class="headerlink" title="张鑫旭"></a>张鑫旭</h5><p><strong>简介</strong><br>09年华中科技大学毕业，现上海，就职于阅文集团，专注web前端偏前领域，钓鱼爱好者，著有《CSS世界》。其中css世界在京东内热销并得到了一系列的好评。任职于腾讯 上海 ISUX。<br><strong>相关链接</strong><br>张鑫旭的网站:<a href="https://www.zhangxinxu.com/" target="_blank" rel="noopener">https://www.zhangxinxu.com/</a></p><hr><h5 id="大漠"><a href="#大漠" class="headerlink" title="大漠"></a>大漠</h5><p><strong>简介</strong><br>淘宝网 · 前端码农，常用昵称“大漠”，W3CPlus创始人，目前就职于淘宝。对html5、css3和CSS处理器等前端脚本语言有非常深入的认识和丰富的实践经验，尤其专注对css3和动画的研究，是国内最早研究和使用css3和CSS处理器技术的一批人。现在主要在探讨学习JavaScript、React和Vue相关技术知识。CSS、CSS处理器和Web动画中国布道者。2014年出版《图解css3：核心技术与案例实战》。<br><strong>相关链接</strong><br>知乎主页：<a href="https://www.zhihu.com/people/w3cplus/activities" target="_blank" rel="noopener">https://www.zhihu.com/people/w3cplus/activities</a><br>w3cplus网站博客地址：<a href="http://www.w3cplus.com/" target="_blank" rel="noopener">www.w3cplus.com/</a></p><hr><h5 id="颜海镜"><a href="#颜海镜" class="headerlink" title="颜海镜"></a>颜海镜</h5><p><strong>简介</strong><br>华北电力大学，软件工程，曾经在百度外卖，美团工作<br><strong>相关链接</strong><br>github主页：<a href="https://github.com/yanhaijing/" target="_blank" rel="noopener">https://github.com/yanhaijing/</a><br>知乎：<a href="https://www.zhihu.com/people/yanhaijing/activities" target="_blank" rel="noopener">https://www.zhihu.com/people/yanhaijing/activities</a><br>微博 <a href="http://weibo.com/yanhaijing1234" target="_blank" rel="noopener">http://weibo.com/yanhaijing1234</a></p><hr><h5 id="杜瑶"><a href="#杜瑶" class="headerlink" title="杜瑶"></a>杜瑶</h5><p><strong>简介</strong><br>去哪儿网(Qunar)，资深前端工程师，前端开发总监，CSS参考手册作者。<br><strong>相关链接</strong><br>github主页：<a href="https://github.com/doyoe/" target="_blank" rel="noopener">https://github.com/doyoe/</a><br>知乎：<a href="https://www.zhihu.com/people/doyoe/activities" target="_blank" rel="noopener">https://www.zhihu.com/people/doyoe/activities</a><br>微博 <a href="https://weibo.com/doyoe?is_all=1&amp;noscale_head=1#_0" target="_blank" rel="noopener">https://weibo.com/doyoe?is_all=1&amp;noscale_head=1#_0</a></p><hr><h5 id="芋头"><a href="#芋头" class="headerlink" title="芋头"></a>芋头</h5><p><strong>简介</strong><br>就职于大搜车，前端乱炖站长，自命全栈工程师，擅长前端、nodeJS、java、ios。关注产品和营销。<br><strong>相关链接</strong><br>芋头-前端乱炖：<a href="http://html-js.com/card/29" target="_blank" rel="noopener">http://html-js.com/card/29</a><br>github主页：<a href="https://github.com/xinyu198736" target="_blank" rel="noopener">https://github.com/xinyu198736</a></p><hr><h5 id="张克军"><a href="#张克军" class="headerlink" title="张克军"></a>张克军</h5><p><strong>简介</strong><br>张克军，豆瓣前端负责人，知名web技术布道者。<br><strong>相关链接</strong><br>微博 <a href="https://weibo.com/kejunz" target="_blank" rel="noopener">https://weibo.com/kejunz</a><br>github主页：<a href="https://github.com/kejun" target="_blank" rel="noopener">https://github.com/kejun</a></p><hr><h5 id="情封"><a href="#情封" class="headerlink" title="情封"></a>情封</h5><p><strong>简介</strong><br>前端De早读课站长，@福建前端联盟发起人之一，4399UED/高级主管<br><strong>相关链接</strong><br>微博 <a href="http://weibo.com/f2er" target="_blank" rel="noopener">http://weibo.com/f2er</a><br>github主页：<a href="https://github.com/f2er" target="_blank" rel="noopener">https://github.com/f2er</a><br>知乎 <a href="https://www.zhihu.com/people/f2er/columns" target="_blank" rel="noopener">https://www.zhihu.com/people/f2er/columns</a></p><hr><h5 id="zcbenzi"><a href="#zcbenzi" class="headerlink" title="zcbenzi"></a>zcbenzi</h5><p><strong>简介</strong><br>赵成，atom编辑器和 node-Webkit 的主力开发者，另外参与了electron.对其源码都有贡献。<br><strong>相关链接</strong><br>github主页：<a href="https://github.com/zcbenz" target="_blank" rel="noopener">https://github.com/zcbenz</a><br>笨小猫猫：<a href="http://cheng.guru/" target="_blank" rel="noopener">http://cheng.guru/</a></p><hr><h5 id="rogerwang"><a href="#rogerwang" class="headerlink" title="rogerwang"></a>rogerwang</h5><p><strong>简介</strong><br>王文睿（Rogerwang），node-Webkit的项目发起人。目前任职于Intel公司开源技术中心（OTC），从事Web和浏览器技术开发工作。现在主要工作是开发和维护node-Webkit项目。此前从事过MeeGo、Tizen和JNI xml性能库的开发和数据中心解决方案服务。毕业于中科大少年班，在计算机系获得博士学位，研究方向为高性能计算。<br><strong>相关链接</strong><br>github主页：<a href="https://github.com/rogerwang" target="_blank" rel="noopener">https://github.com/rogerwang</a><br>Twitter主页：<a href="http://twitter.com/wwr" target="_blank" rel="noopener">http://twitter.com/wwr</a></p><hr><h5 id="fengmk2"><a href="#fengmk2" class="headerlink" title="　fengmk2"></a>　fengmk2</h5><p><strong>简介</strong><br>袁锋，淘宝网数据产品部资深Web开发工程师，Cnode.org社区核心成员，淘宝花名：苏千。参与egg,koa,cnpm等。<br><strong>相关链接</strong><br>github主页：<a href="https://github.com/fengmk2" target="_blank" rel="noopener">https://github.com/fengmk2</a><br>个人主页：<a href="http://fengmk2.github.com" target="_blank" rel="noopener">http://fengmk2.github.com</a><br>微博：@Python发烧友</p><hr><h5 id="BYVoid"><a href="#BYVoid" class="headerlink" title="　BYVoid"></a>　BYVoid</h5><p><strong>简介</strong><br>BYVoid（郭家宝），清华大学计算机系2010级本科生，自由意志主义者。《node.js开发指南》作者。<br><strong>相关链接</strong><br>github主页：<a href="https://github.com/BYVoid" target="_blank" rel="noopener">https://github.com/BYVoid</a><br>个人博客：<a href="http://www.byvoid.com" target="_blank" rel="noopener">http://www.byvoid.com</a><br>微博：@BYVoid<br>豆瓣：<a href="http://www.douban.com/people/byvoid/" target="_blank" rel="noopener">http://www.douban.com/people/byvoid/</a><br>知乎:<a href="https://www.zhihu.com/people/byvoid/activities" target="_blank" rel="noopener">https://www.zhihu.com/people/byvoid/activities</a></p><hr><h5 id="李晶"><a href="#李晶" class="headerlink" title="李晶"></a>李晶</h5><p><strong>简介</strong><br>2008 年东北大学硕士毕业，一直做前端开发，目前就职于阿里旅行·去啊前端团队。淘宝F2E，“犀牛书(第六版)”译者，“JS Web富应用开发”译者。翻译了这些书：js权威指南，js富应用开发，js设计模式。<br><strong>相关链接</strong><br>github主页:<a href="https://github.com/jayli" target="_blank" rel="noopener">https://github.com/jayli</a></p><hr><h5 id="杨周璇"><a href="#杨周璇" class="headerlink" title="杨周璇"></a>杨周璇</h5><p><strong>简介</strong><br>浙江大学，经济学院电子商务专业，基础技术组 资深前端工程师，nodejs技术专家。<br><strong>相关链接</strong><br>微博：fool2fish</p><hr><h5 id="Cat-Chen"><a href="#Cat-Chen" class="headerlink" title="Cat Chen"></a>Cat Chen</h5><p><strong>简介</strong><br>陈广琛，就职于facebook,前端大牛<br><strong>相关链接</strong><br>博客园博客:<a href="http://cathsfz.cnblogs.com/" target="_blank" rel="noopener">http://cathsfz.cnblogs.com/</a><br>github主页:<a href="https://github.com/catchen" target="_blank" rel="noopener">https://github.com/catchen</a></p><hr><h2 id="国外的技术大神"><a href="#国外的技术大神" class="headerlink" title="国外的技术大神"></a>国外的技术大神</h2><p>顺便延伸一下国际的前端大神，仅供参考学习。</p><h5 id="Chris-Coyier"><a href="#Chris-Coyier" class="headerlink" title="Chris Coyier"></a>Chris Coyier</h5><p><strong>简介</strong><br>Codepen创始人，css-tricks站长<br><strong>相关链接</strong><br>Twitter、 <a href="https://twitter.com/chriscoyier" target="_blank" rel="noopener">https://twitter.com/chriscoyier</a><br>gitHub、 <a href="https://github.com/chriscoyier" target="_blank" rel="noopener">https://github.com/chriscoyier</a><br><a href="https://css-tricks.com/" target="_blank" rel="noopener">https://css-tricks.com/</a></p><hr><h5 id="Mark-Otto"><a href="#Mark-Otto" class="headerlink" title="Mark Otto"></a>Mark Otto</h5><p><strong>简介</strong><br>github设计主管，Bootstrap作者。<br><strong>相关链接</strong><br>blog 、 <a href="http://markdotto.com/" target="_blank" rel="noopener">http://markdotto.com/</a><br>Twitter、 <a href="https://twitter.com/mdo" target="_blank" rel="noopener">https://twitter.com/mdo</a><br>gitHub、 <a href="https://github.com/mdo" target="_blank" rel="noopener">https://github.com/mdo</a></p><hr><h5 id="Hugo-Giraudel"><a href="#Hugo-Giraudel" class="headerlink" title="Hugo Giraudel"></a>Hugo Giraudel</h5><p><strong>简介</strong><br>知名的SASS专家，2015 net awards(net杂志的年度颁奖盛典)的年度开发者。法国人，现居德国柏林。<br><strong>相关链接</strong><br>Twitter、 <a href="https://twitter.com/HugoGiraudel" target="_blank" rel="noopener">https://twitter.com/HugoGiraudel</a><br>gitHub、 <a href="https://github.com/HugoGiraudel" target="_blank" rel="noopener">https://github.com/HugoGiraudel</a><br>sitepoint <a href="https://www.sitepoint.com/author/hgiraudel/" target="_blank" rel="noopener">https://www.sitepoint.com/author/hgiraudel/</a></p><hr><h5 id="Lea-Verou"><a href="#Lea-Verou" class="headerlink" title="Lea Verou"></a>Lea Verou</h5><p><strong>简介</strong><br>网页设计师、前端开发者、技术极客、演讲家、作家，麻省理工学院计算机与人工智能实验室助理研究员，《CSS Secrets》作者，prefixfree.js作者，在世界各地进行过60多次演讲，简历。希腊人，现居美国马萨诸塞州剑桥市（大波士顿地区）。<br><strong>相关链接</strong><br>Dribbble、 <a href="https://dribbble.com/LeaVerou" target="_blank" rel="noopener">https://dribbble.com/LeaVerou</a><br>Twitter、 <a href="https://twitter.com/leaverou" target="_blank" rel="noopener">https://twitter.com/leaverou</a><br>gitHub、<a href="https://github.com/LeaVerou" target="_blank" rel="noopener">https://github.com/LeaVerou</a><br>facebook: <a href="http://www.facebook.com/leaverou" target="_blank" rel="noopener">http://www.facebook.com/leaverou</a></p><hr><h5 id="Paul-Irish"><a href="#Paul-Irish" class="headerlink" title="Paul Irish"></a>Paul Irish</h5><p><strong>简介</strong><br>谷歌Chrome团队前端工程师，主要关注开发者工具，是Modernizr、Yeoman、css3 Please、html5 Boilerplate等工具的开发者，合作开发了诸多项目，详情了解他的About。<br><strong>相关链接</strong><br>Twitter、 <a href="https://twitter.com/paul_irish" target="_blank" rel="noopener">https://twitter.com/paul_irish</a><br>gitHub、 <a href="https://github.com/paulirish/" target="_blank" rel="noopener">https://github.com/paulirish/</a></p><hr><h5 id="John-Resig"><a href="#John-Resig" class="headerlink" title="John Resig"></a>John Resig</h5><p><strong>简介</strong><br>jquery、Processing.js、Sizzle.js等项目作者，现为可汗学院计算机学院负责人。JS忍者秘籍(Secrets of the JavaScript Ninja)、精通JavaScript(Pro JavaScript Techniques)作者。<br><strong>相关链接</strong><br>Twitter、 <a href="https://twitter.com/jeresig" target="_blank" rel="noopener">https://twitter.com/jeresig</a><br>gitHub、 <a href="https://github.com/jeresig" target="_blank" rel="noopener">https://github.com/jeresig</a></p><hr><h5 id="Kyle-Simpson"><a href="#Kyle-Simpson" class="headerlink" title="Kyle Simpson"></a>Kyle Simpson</h5><p><strong>简介</strong><br>从事跟JS有关的一切事儿，写书、教学、演讲、开发等等，《You Don’t Know JS 》系列丛书作者，你不知道的JavaScript（上卷）、html5 Cookbook作者。<br><strong>相关链接</strong><br>facebook、 <a href="https://facebook.com/kyle-simpson" target="_blank" rel="noopener">https://facebook.com/kyle-simpson</a><br>gitHub、 <a href="https://github.com/getify" target="_blank" rel="noopener">https://github.com/getify</a></p><hr><h5 id="Nicolas-Gallagher"><a href="#Nicolas-Gallagher" class="headerlink" title="Nicolas Gallagher"></a>Nicolas Gallagher</h5><p><strong>简介</strong><br>Twitter公司前端工程师，normalize.css项目创始人，bower、rework、postcss、npm dom等项目核心参与者。<br><strong>相关链接</strong><br>gitHub、 <a href="http://github.com/necolas" target="_blank" rel="noopener">http://github.com/necolas</a></p><hr><h5 id="Sindre-Sorhus"><a href="#Sindre-Sorhus" class="headerlink" title="Sindre Sorhus"></a>Sindre Sorhus</h5><p><strong>简介</strong><br>AVA、chalk、yeoman等项目开创者，创建多个流行github项目awesome、awesome-nodejs等。<br><strong>相关链接</strong><br>Twitter、<a href="https://twitter.com/sindresorhus" target="_blank" rel="noopener">https://twitter.com/sindresorhus</a><br>gitHub、 <a href="https://github.com/sindresorhus" target="_blank" rel="noopener">https://github.com/sindresorhus</a></p><hr><h5 id="TJ-Holowaychuk"><a href="#TJ-Holowaychuk" class="headerlink" title="TJ Holowaychuk"></a>TJ Holowaychuk</h5><p><strong>简介</strong><br>TJ Holowaychuk ，程序员兼艺术家，Koa、Co、Express、jade、mocha、node-canvas、commander.js 等知名开源项目的创建和贡献者。<br><strong>相关链接</strong><br>Twitter、 <a href="http://twitter.com/tjholowaychuk" target="_blank" rel="noopener">http://twitter.com/tjholowaychuk</a><br>gitHub、 <a href="http://github.com/tj" target="_blank" rel="noopener">http://github.com/tj</a><br>blog <a href="http://tjholowaychuk.com/blog/" target="_blank" rel="noopener">http://tjholowaychuk.com/blog/</a></p><hr><h5 id="Douglas-Crockford"><a href="#Douglas-Crockford" class="headerlink" title="Douglas Crockford"></a>Douglas Crockford</h5><p><strong>简介</strong><br>Douglas Crockford是JavaScript开发社区最知名的权威，是JSON、JSLint、JSMin和ADSafe之父，是《JavaScript: The Good Parts》的作者。他同时也服务于ECMA的JavaScript2.0技术委员会（TC39）。<br><strong>相关链接</strong><br>gitHub、 <a href="https://github.com/douglascrockford" target="_blank" rel="noopener">https://github.com/douglascrockford</a></p><hr><h5 id="Mike-Bostock"><a href="#Mike-Bostock" class="headerlink" title="　Mike Bostock"></a>　Mike Bostock</h5><p><strong>简介</strong><br>Mike Bostock，纽约时报图形编辑，知名可视化库 D3.js的主要作者。<br><strong>相关链接</strong><br>Twitter、 <a href="https://twitter.com/mbostock" target="_blank" rel="noopener">https://twitter.com/mbostock</a><br>gitHub、 <a href="https://github.com/mbostock" target="_blank" rel="noopener">https://github.com/mbostock</a></p><hr><p>作者：RobinsonZhang<br>链接：<a href="https://juejin.im/post/5a9224c6f265da4e710f7786" target="_blank" rel="noopener">https://juejin.im/post/5a9224c6f265da4e710f7786</a><br>来源：掘金<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;本文将枚举一些前端界内比较熟知的前端技术大牛，分为个人简介、技术博客、擅长领域几个方向，希望能对初步进入前端的人一些指引和学习的方向。以下排
      
    
    </summary>
    
      <category term="前端分享" scheme="https://ru23.com/categories/%E5%89%8D%E7%AB%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="优质文章分享" scheme="https://ru23.com/tags/%E4%BC%98%E8%B4%A8%E6%96%87%E7%AB%A0%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>get请求中特殊字符&amp;的处理</title>
    <link href="https://ru23.com/note/540b8f23.html"/>
    <id>https://ru23.com/note/540b8f23.html</id>
    <published>2018-11-01T03:39:23.000Z</published>
    <updated>2018-11-01T08:10:12.994Z</updated>
    
    <content type="html"><![CDATA[<p>当我们的请求的url为:<br><a href="http://localhost:8080/interface?parameter=kalman03&amp;kalman&amp;1" target="_blank" rel="noopener">http://localhost:8080/interface?parameter=kalman03&amp;kalman&amp;1</a><br>或许你预期在服务器端获得的parameter的结果为kalman03#kalman#1,错！！！实际上得到parameter的值为kalman03。</p><p>这究竟是为什么呢？</p><p>#####原因：<br>parameter的值含有特殊字符&amp;，浏览器自动截断&amp;字符和其后面的值，这样得到的值就为kalman03。</p><p><strong>拓展</strong><br>当参数值中含有特殊字符 <code>?!=()#%&amp;</code> 的时候，获得的值同样也会出现与预期结果不一致的情况。</p><p>#####解决方案：<br>方法1：通过post方式传递数据；<br>方法2：对参数进行一次编码parameter=escape(parameter)；</p><p>JavaScript escape() 函数的功能是把其中某些字符替换成了十六进制的转义序列。该方法不会对ASCII 字母和数字进行编码，也不会对下面这些 ASCII 标点符号进行编码： - _ . ! ~ * ‘ ( ) 。其他所有的字符都会被转义序列替换。具体参考：<a href="http://www.w3school.com.cn/js/jsref_escape.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/js/jsref_escape.asp</a>.<br>这样来就不会出现自动截断或者其他意想不到的效果。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;当我们的请求的url为:&lt;br&gt;&lt;a href=&quot;http://localhost:8080/interface?parameter=kalman03&amp;amp;kalman&amp;amp;1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://local
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="踩过的坑" scheme="https://ru23.com/tags/%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>如何利用上下班地铁闲置时间提升自己的前端技术(更新时间：20181030)</title>
    <link href="https://ru23.com/note/60aa5031.html"/>
    <id>https://ru23.com/note/60aa5031.html</id>
    <published>2018-10-30T03:25:50.000Z</published>
    <updated>2018-11-08T06:58:30.393Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Please enter the password to read the blog.</h3><div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
  </entry>
  
  <entry>
    <title>关于webpack，CommonsChunkPlugin无效，重复引用的问题</title>
    <link href="https://ru23.com/note/9aead141.html"/>
    <id>https://ru23.com/note/9aead141.html</id>
    <published>2018-10-29T07:49:29.000Z</published>
    <updated>2018-11-01T08:08:35.707Z</updated>
    
    <content type="html"><![CDATA[<p><strong>坑1</strong><br>CommonChunkPlugin需要加上minChunks属性，minChunks是指一个文件至少被require几次才会被放到CommonChunk里，如果minChunks等于2，说明一个文件至少被require两次才能放在CommonChunk里。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> CommonsChunkPlugin(&#123;</span><br><span class="line">        name: <span class="string">"common"</span>,</span><br><span class="line">        minChunks: <span class="number">2</span></span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure></p><p><strong>坑2</strong><br>UglifyJsPlugin现在不支持es6，必须要用babel转换成es5。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;坑1&lt;/strong&gt;&lt;br&gt;CommonChunkPlugin需要加上minChunks属性，minChunks是指一个文件至少被require几次才会被放到CommonChunk里，如果minChunks等于2，说明一个文件至少被require两次才能放
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="webpack" scheme="https://ru23.com/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>vue生命周期和react生命周期对比</title>
    <link href="https://ru23.com/note/73225ea8.html"/>
    <id>https://ru23.com/note/73225ea8.html</id>
    <published>2018-10-27T09:29:11.000Z</published>
    <updated>2018-11-01T09:37:47.001Z</updated>
    
    <content type="html"><![CDATA[<p>react和vue的业务逻辑是差不多，vue在react上封装了更简洁的方法，使用起来更加的便捷，如：提供了便捷的指令（v-for,v-if,v-model），还提供了更多的属性（computed,watch），我还是比较喜欢用react的，更接近js原生，更容易于理解它。</p><h1 id="vue的生命周期"><a href="#vue的生命周期" class="headerlink" title="vue的生命周期"></a>vue的生命周期</h1><h3 id="一-如下图所示-很清晰-初始化、编译、更新、销毁"><a href="#一-如下图所示-很清晰-初始化、编译、更新、销毁" class="headerlink" title="一 如下图所示(很清晰)初始化、编译、更新、销毁"></a>一 如下图所示(很清晰)初始化、编译、更新、销毁</h3><p><img src="/img/2018/10/vue-life-cycle.png" alt="vue生命周期"></p><h3 id="二-vue生命周期的栗子"><a href="#二-vue生命周期的栗子" class="headerlink" title="二 vue生命周期的栗子"></a>二 vue生命周期的栗子</h3><p> 注意触发vue的created事件以后,this便指向vue实例,这点很重要<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myVue = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">el: <span class="string">".test"</span>,</span><br><span class="line">data: &#123;</span><br><span class="line">a: <span class="string">"我是内容,在控制台输入myVue.a=123456,可以改变我的值"</span></span><br><span class="line">&#125;,</span><br><span class="line">created: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">//在实例创建之后同步调用。此时实例已经结束解析选项，这意味着已建立：数据绑定，计算属性，方法，watcher/事件回调。</span></span><br><span class="line"><span class="comment">//但是还没有开始 dom 编译，$el 还不存在,但是实例存在,即this.a存在,可打印出来 。</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"建立"</span>);</span><br><span class="line">&#125;,</span><br><span class="line">beforeCompile: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"未开始编译"</span>);</span><br><span class="line">&#125;,</span><br><span class="line">compiled: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">//在编译结束后调用。此时所有的指令已生效，因而数据的变化将触发 dom 更新。但是不担保 $el 已插入文档。</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"编译完成"</span>);</span><br><span class="line">&#125;,</span><br><span class="line">ready: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">//在编译结束和 $el 第一次插入文档之后调用，如在第一次 attached 钩子之后调用。注意必须是由 Vue 插入（如 vm.$appendTo() 等方法或指令更新）才触发 ready 钩子。</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"一切准备好了"</span>);</span><br><span class="line">&#125;,</span><br><span class="line">attached: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">//myVue.$appendTo(".test2")暂时触发不了,不知道怎么解决</span></span><br><span class="line"><span class="comment">//在 vm.$el 插入 dom 时调用。必须是由指令或实例方法（如 $appendTo()）插入，直接操作 vm.$el 不会 触发这个钩子。</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"插入dom成功"</span>);</span><br><span class="line">&#125;,</span><br><span class="line">detached: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">//触发事件 myVue.$destroy(true),其中参数true控制是否删除dom节点或者myVue.$remove()</span></span><br><span class="line"><span class="comment">//在 vm.$el 从 dom 中删除时调用。必须是由指令或实例方法删除，直接操作 vm.$el 不会 触发这个钩子。</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"删除dom成功"</span>);</span><br><span class="line">&#125;,</span><br><span class="line">beforeDestroy: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">//触发方式,在console里面打myVue.$destroy();</span></span><br><span class="line"><span class="comment">//在开始销毁实例时调用。此时实例仍然有功能。</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"销毁前"</span>);</span><br><span class="line">&#125;,</span><br><span class="line">destroyed: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">//触发方式,在console里面打myVue.$destroy();其中myVue.$destroy(true)是删除dom节点,会触发detached函数,但是实例仍然存在</span></span><br><span class="line"><span class="comment">//在实例被销毁之后调用。此时所有的绑定和实例的指令已经解绑，注意是解绑不是销毁,所有的子实例也已经被销毁。</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"已销毁"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h1 id="react生命周期"><a href="#react生命周期" class="headerlink" title="react生命周期"></a>react生命周期</h1><h3 id="React-生命周期分为三种状态-1-初始化-2-更新-3-销毁"><a href="#React-生命周期分为三种状态-1-初始化-2-更新-3-销毁" class="headerlink" title="React 生命周期分为三种状态 1. 初始化 2.更新 3.销毁"></a>React 生命周期分为三种状态 1. 初始化 2.更新 3.销毁</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/2018/10/react-life-cycle.jpg" alt="React生命周期" title="">                </div>                <div class="image-caption">React生命周期</div>            </figure><p>•初始化</p><p>1、<code>getDefaultProps()</code><br>设置默认的props，也可以用ufaultProps设置组件的默认属性.</p><p>2、<code>getInitialState()</code><br>在使用es6的class语法时是没有这个钩子函数的，可以直接在constructor中定义this.state。此时可以访问this.props</p><p>3、<code>componentWillMount()</code><br>组件初始化时只调用，以后组件更新不调用，整个生命周期只调用一次，此时可以修改state。</p><p>4、 <code>render()</code><br>react最重要的步骤，创建虚拟dom，进行diff算法，更新dom树都在此进行。此时就不能更改state了。</p><p>5、<code>componentDidMount()</code><br>组件渲染之后调用，只调用一次。</p><p>•更新</p><p>6、<code>componentWillReceiveProps(nextProps)</code><br>组件初始化时不调用，组件接受新的props时调用。</p><p>7、<code>shouldComponentUpdate(nextProps, nextState)</code><br>react性能优化非常重要的一环。组件接受新的state或者props时调用，我们可以设置在此对比前后两个props和state是否相同，如果相同则返回false阻止更新，因为相同的属性状态一定会生成相同的dom树，这样就不需要创造新的dom树和旧的dom树进行diff算法对比，节省大量性能，尤其是在dom结构复杂的时候</p><p>8、<code>componentWillUpdata(nextProps, nextState)</code><br>组件初始化时不调用，只有在组件将要更新时才调用，此时可以修改state</p><p>9、<code>render()</code><br>组件渲染</p><p>10、<code>componentDidUpdate()</code><br>组件初始化时不调用，组件更新完成后调用，此时可以获取dom节点。</p><p>•卸载</p><p>11、<code>componentWillUnmount()</code></p><p>组件将要卸载时调用，一些事件监听和定时器需要在此时清除。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;react和vue的业务逻辑是差不多，vue在react上封装了更简洁的方法，使用起来更加的便捷，如：提供了便捷的指令（v-for,v-if,v-model），还提供了更多的属性（computed,watch），我还是比较喜欢用react的，更接近js原生，更容易于理解它。
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="vue" scheme="https://ru23.com/tags/vue/"/>
    
      <category term="react" scheme="https://ru23.com/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>js深度拷贝解决双向绑定问题(包含es6方法)</title>
    <link href="https://ru23.com/note/284d188d.html"/>
    <id>https://ru23.com/note/284d188d.html</id>
    <published>2018-10-26T07:44:21.000Z</published>
    <updated>2018-11-01T08:08:35.598Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>当我们利用v-bind：来绑定属性向子组件传递对象的时候，有时候我们需要子组件改变的时候不改变父组件的值，一般可以利用JSON.stringify(JSON.parse(jsonstr))将传递来的对象赋值到子组件自己的data，这样做的原理是对传过来的值重新赋予一个空间，从而解决双向绑定。，但是es6有一个深度赋值的方法也可以解决这个问题, let obj= Object.assign({}, obj)也可以解决。</p></blockquote><p>比如一个数组（array）<strong>浅度拷贝是当数组a变量成数组b的时候，b改变里面的数组数值的时候，a也随着改变。</strong><br>浅度拷贝保存了一个指向该对象的指针，所有的操作都是对该引用的操作，所以对对象的修改会影响其他的复制对象。<br><strong>深度拷贝是当当数组a变量成数组b的时候，b改变里面的数组数值的时候，a里面的数组数组不随着改变。</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>, <span class="string">"d"</span>, <span class="string">"e"</span>];      </span><br><span class="line"><span class="keyword">var</span> Arr = <span class="built_in">JSON</span>.stringify(arr); <span class="comment">//先转化为string字符串的类型</span></span><br><span class="line">      </span><br><span class="line"><span class="keyword">var</span> Brr = <span class="built_in">JSON</span>.parse(Arr); <span class="comment">//在解析字符串的类型</span></span><br><span class="line">Brr[<span class="number">1</span>] = <span class="string">'h'</span>;             <span class="comment">//这样修改Brr中的数组的时候就不会影响到arr里面数组的值</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'arr:'</span> + arr); <span class="comment">//结果是arr:a,h,c,d,e</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Arr:"</span> + Brr); <span class="comment">//结果是Arr:a,h,c,d,e</span></span><br></pre></td></tr></table></figure><p>JSON是一种表示结构化数据的格式，只支持简单值、对象和数组三种类型，不支持变量、函数或对象实例。所以我们工作中可以使用它解决常见问题，但也要注意其短板：函数会丢失，原型链会丢失，以及上面说到的所有缺陷。</p><p>那么为什么浅度拷贝会改变a的数组值而深度拷贝则不会呢？</p><p>因为浅度拷贝指向的是同一个内存，而深度拷贝是增加了一个新的内存，所以不会影响到原来a的内存， 所 以就不会改变原来的值<br><code>eg.</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>, <span class="string">"d"</span>, <span class="string">"e"</span>];      </span><br><span class="line"><span class="keyword">var</span> Arr = arr;    </span><br><span class="line">Arr[<span class="number">1</span>] = <span class="string">'h'</span>;     </span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'arr:'</span> + arr);  <span class="comment">//arr的下标1的‘b’也变成了‘h’ 结果是：arr:a,h,c,d,e</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Arr:"</span> + Arr); <span class="comment">//结果是：Arr:a,h,c,d,e</span></span><br></pre></td></tr></table></figure></p><h2 id="数组的深拷贝"><a href="#数组的深拷贝" class="headerlink" title="数组的深拷贝"></a>数组的深拷贝</h2><p>对于数组的深拷贝常规的有三种方法：</p><p><strong>方法一：遍历复制</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">"a"</span>, <span class="string">"b"</span>], arrCopy = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> item <span class="keyword">in</span> arr) arrCopy[item] = arr[item];</span><br><span class="line">arrCopy[<span class="number">1</span>] = <span class="string">"c"</span>;</span><br><span class="line">arr   <span class="comment">// =&gt; ["a", "b"]</span></span><br><span class="line">arrCopy   <span class="comment">// =&gt; ["a", "c"]</span></span><br></pre></td></tr></table></figure></p><p>考虑伪多维数组可以写成函数形式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">arrDeepCopy</span>(<span class="params">source</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> sourceCopy = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> item <span class="keyword">in</span> source) sourceCopy[item] = <span class="keyword">typeof</span> source[item] === <span class="string">'object'</span> ? arrDeepCopy(source[item]) : source[item];</span><br><span class="line">    <span class="keyword">return</span> sourceCopy;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种方法简单粗暴，但是利用JS本身的函数我们可以更加便捷地实现这个操作。</p><p><strong>方法二：slice()</strong></p><p>可以参考 W3School 对 slice() 方法的描述：slice() 方法可从已有的数组中返回选定的元素。</p><p>调用格式为：</p><p><code>arrayObject.slice(start,end)</code><br>方法返回一个新的数组，包含从 start 到 end （不包括该元素）的 arrayObject 中的元素。该方法并不会修改数组，而是返回一个子数组。</p><p>在这里我们的思路是直接从数组开头截到尾：</p><p>arrCopy = arr.slice(0);<br>arrCopy[1] = “c”;<br>arr   // =&gt; [“a”, “b”]<br>arrCopy   // =&gt; [“a”, “c”]<br>可以看出成功创建了一份原数组的拷贝。</p><p><strong>方法三：concat()</strong></p><p>可以参考 W3School 对 <code>concat()</code> 方法的描述：<code>concat()</code> 方法用于连接两个或多个数组。</p><p>调用格式为：<br><code>arrayObject.concat(arrayX,arrayX,......,arrayX)</code><br>该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本。</p><p>使用这种方法的思路是我们用原数组去拼接一个空内容，放回的便是这个数组的拷贝：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">arrCopy = arr.concat();</span><br><span class="line">arrCopy[<span class="number">1</span>] = <span class="string">"c"</span>;</span><br><span class="line">arr   <span class="comment">// =&gt; ["a", "b"] </span></span><br><span class="line">arrCopy   <span class="comment">// =&gt; ["a", "c"]</span></span><br></pre></td></tr></table></figure></p><h2 id="对象的深拷贝"><a href="#对象的深拷贝" class="headerlink" title="对象的深拷贝"></a>对象的深拷贝</h2><p>对于数组的深拷贝我们有了概念，那么一般对象呢？</p><p>我们给出一个对象：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123; <span class="string">"a"</span>: <span class="number">1</span>, <span class="string">"b"</span>: <span class="number">2</span> &#125;;</span><br></pre></td></tr></table></figure></p><p>同样做测试：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> objCopy = obj;</span><br><span class="line">objCopy.b = <span class="number">3</span>;</span><br><span class="line">obj   <span class="comment">// =&gt; &#123; "a": 1, "b": 3 &#125;</span></span><br><span class="line">objCopy   <span class="comment">// =&gt; &#123; "a": 1, "b": 3 &#125;</span></span><br></pre></td></tr></table></figure></p><p>同样，简单的赋值运算只是创建了一份浅拷贝。</p><p>而对于对象的深拷贝，没有内置方法可以使用，我们可以自己命名一个函数进行这一操作：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> objDeepCopy = <span class="function"><span class="keyword">function</span>(<span class="params">source</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> sourceCopy = &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> item <span class="keyword">in</span> source) sourceCopy[item] = source[item];</span><br><span class="line">    <span class="keyword">return</span> sourceCopy;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>但是对于复杂结构的对象我们发现这个函数并不适用，例如：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123; <span class="string">"a"</span>: &#123; <span class="string">"a1"</span>: [<span class="string">"a11"</span>, <span class="string">"a12"</span>], <span class="string">"a2"</span>: <span class="number">1</span> &#125;, <span class="string">"b"</span>: <span class="number">2</span> &#125;;</span><br></pre></td></tr></table></figure></p><p>所以需要进行一点修改：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> objDeepCopy = <span class="function"><span class="keyword">function</span>(<span class="params">source</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> sourceCopy = &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> item <span class="keyword">in</span> source) sourceCopy[item] = <span class="keyword">typeof</span> source[item] === <span class="string">'object'</span> ? objDeepCopy(source[item]) : source[item];</span><br><span class="line">    <span class="keyword">return</span> sourceCopy;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> objCopy = objDeepCopy(obj);</span><br><span class="line">objCopy.a.a1[<span class="number">1</span>] = <span class="string">"a13"</span>;</span><br><span class="line">obj   <span class="comment">// =&gt; &#123; "a": &#123; "a1": ["a11", "a12"], "a2": 1 &#125;, "b": 2 &#125;</span></span><br><span class="line">objCopy   <span class="comment">// =&gt; &#123; "a": &#123; "a1": ["a11", "a13"], "a2": 1 &#125;, "b": 2 &#125;</span></span><br></pre></td></tr></table></figure><p><strong>3、对象数组的深拷贝</strong></p><p> 如果再考虑更奇葩更复杂的情况，例如我们定义：</p><p>var obj = [{ “a”: { “a1”: [“a11”, “a12”], “a2”: 1 }, “b”: 2 }, [“c”, { “d”: 4, “e”: 5 }]];<br>这是一个由对象、数组杂合成的奇葩数组，虽然我们平时写程序基本不可能这么折腾自己，但是可以作为一种特殊情况来考虑，这样我们就可以结合之前说的方法去拓展拷贝函数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> objDeepCopy = <span class="function"><span class="keyword">function</span> (<span class="params">source</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> sourceCopy = source <span class="keyword">instanceof</span> <span class="built_in">Array</span> ? [] : &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> item <span class="keyword">in</span> source) &#123;</span><br><span class="line">        sourceCopy[item] = <span class="keyword">typeof</span> source[item] === <span class="string">'object'</span> ? objDeepCopy(source[item]) : source[item];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sourceCopy;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> objCopy = objDeepCopy(obj);</span><br><span class="line">objCopy[<span class="number">0</span>].a.a1[<span class="number">1</span>] = <span class="string">"a13"</span>;</span><br><span class="line">objCopy[<span class="number">1</span>][<span class="number">1</span>].e = <span class="string">"6"</span>;</span><br><span class="line">obj   <span class="comment">// =&gt; [&#123; "a": &#123; "a1": ["a11", "a12"], "a2": 1 &#125;, "b": 2 &#125;, ["c", &#123; "d": 4, "e": 5 &#125;]]</span></span><br><span class="line">objCopy   <span class="comment">// =&gt; [&#123; "a": &#123; "a1": ["a11", "a13"], "a2": 1 &#125;, "b": 2 &#125;, ["c", &#123; "d": 4, "e": 6 &#125;]]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;当我们利用v-bind：来绑定属性向子组件传递对象的时候，有时候我们需要子组件改变的时候不改变父组件的值，一般可以利用JSON.stringify(JSON.parse(jsonstr))将传递来的对象赋值到子组件自己的data，这样做的原理是对传
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="javascript" scheme="https://ru23.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>ajax和fetch、axios的优缺点以及比较</title>
    <link href="https://ru23.com/note/7fae67c6.html"/>
    <id>https://ru23.com/note/7fae67c6.html</id>
    <published>2018-10-26T01:18:54.000Z</published>
    <updated>2018-11-09T06:02:19.934Z</updated>
    
    <content type="html"><![CDATA[<p>前端是个发展迅速的领域，前端请求自然也发展迅速，从原生的XHR到jquery ajax，再到现在的axios和fetch。</p><h2 id="jquery-ajax"><a href="#jquery-ajax" class="headerlink" title="jquery ajax"></a>jquery ajax</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    type: <span class="string">'POST'</span>,</span><br><span class="line">    url: url,</span><br><span class="line">    data: data,</span><br><span class="line">    dataType: dataType,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">    error: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>它是对原生XHR的封装，还支持JSONP，非常方便；真的是用过的都说好。但是随着react，vue等前端框架的兴起，jquery早已不复当年之勇。很多情况下我们只需要使用ajax，但是却需要引入整个jquery，这非常的不合理，于是便有了fetch的解决方案。</p><p><strong>优缺点</strong></p><ul><li>本身是针对MVC的编程,不符合现在前端mvvm的浪潮</li><li>基于原生的XHR开发，XHR本身的架构不清晰，已经有了fetch的替代方案</li><li>JQuery整个项目太大，单纯使用ajax却要引入整个JQuery非常的不合理（采取个性化打包的方案又不能享受CDN服务）</li></ul><h2 id="fetch"><a href="#fetch" class="headerlink" title="fetch"></a>fetch</h2><p><code>fetch</code>号称是ajax的替代品，它的api是基于Promise设计的，旧版本的浏览器不支持<code>Promise</code>，需要使用<code>polyfill es6-promise</code></p><p>举个例子：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原生XHR</span></span><br><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xhr.open(<span class="string">'GET'</span>, url);</span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (xhr.readyState === <span class="number">4</span> &amp;&amp; xhr.status === <span class="number">200</span>) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(xhr.responseText) <span class="comment">// 从服务器获取数据</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">xhr.send()</span><br><span class="line"><span class="comment">// fetch</span></span><br><span class="line">fetch(url).then(response = &gt; &#123;</span><br><span class="line"><span class="keyword">if</span> (response.ok) &#123;</span><br><span class="line">response.json()</span><br><span class="line">&#125;</span><br><span class="line">&#125;).then(data = &gt; <span class="built_in">console</span>.log(data)).</span><br><span class="line"><span class="keyword">catch</span> (err = &gt; <span class="built_in">console</span>.log(err))</span><br><span class="line"><span class="string">``</span><span class="string">` </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">看起来好像是方便点，then链就像之前熟悉的callback。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">在MDN上，讲到它跟jquery ajax的区别，这也是fetch很奇怪的地方：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">当接收到一个代表错误的 HTTP 状态码时，从 fetch()返回的 Promise 不会被标记为 reject， 即使该 HTTP 响应的状态码是 404 或 500。相反，它会将 Promise 状态标记为 resolve （但是会将 resolve 的返回值的 ok 属性设置为 false ）， 仅当网络故障时或请求被阻止时，才会标记为 reject。 默认情况下, fetch 不会从服务端发送或接收任何 cookies, 如果站点依赖于用户 session，则会导致未经认证的请求（要发送 cookies，必须设置 credentials 选项）.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">突然感觉这还不如jquery ajax好用呢？别急，再搭配上async/await将会让我们的异步代码更加优雅：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>js</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> response = <span class="keyword">await</span> fetch(url);</span><br><span class="line">    <span class="keyword">let</span> data = <span class="keyword">await</span> response.json();</span><br><span class="line">    <span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>看起来是不是像同步代码一样？简直完美！好吧，其实并不完美，async/await是ES7的api，目前还在试验阶段，还需要我们使用babel进行转译成ES5代码。</p><p>还要提一下的是，fetch是比较底层的api，很多情况下都需要我们再次封装。 比如：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// jquery ajax</span></span><br><span class="line">$.post(url, &#123;<span class="attr">name</span>: <span class="string">'test'</span>&#125;)</span><br><span class="line"><span class="comment">// fetch</span></span><br><span class="line">fetch(url, &#123;</span><br><span class="line">    method: <span class="string">'POST'</span>,</span><br><span class="line">    body: <span class="built_in">Object</span>.keys(&#123;<span class="attr">name</span>: <span class="string">'test'</span>&#125;).map(<span class="function">(<span class="params">key</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">encodeURIComponent</span>(key) + <span class="string">'='</span> + <span class="built_in">encodeURIComponent</span>(params[key]);</span><br><span class="line">    &#125;).join(<span class="string">'&amp;'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="string">``</span><span class="string">` </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">由于fetch是比较底层的api，所以需要我们手动将参数拼接成'name=test'的格式，而jquery ajax已经封装好了。所以fetch并不是开箱即用的。</span></span><br><span class="line"><span class="string">另外，fetch还不支持超时控制。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">**优缺点：**</span></span><br><span class="line"><span class="string">- 符合关注分离，没有将输入、输出和用事件来跟踪的状态混杂在一个对象里</span></span><br><span class="line"><span class="string">- 更好更方便的写法</span></span><br><span class="line"><span class="string">- 更加底层，提供的api丰富（request, response）</span></span><br><span class="line"><span class="string">- 脱离了XHR，是ES规范里新的实现方式</span></span><br><span class="line"><span class="string">- 1）fetchtch只对网络请求报错，对400，500都当做成功的请求，需要封装去处理</span></span><br><span class="line"><span class="string">- 2）fetch默认不会带cookie，需要添加配置项</span></span><br><span class="line"><span class="string">- 3）fetch不支持abort，不支持超时控制，使用setTimeout及Promise.reject的实现的超时控制并不能阻止请求过程继续在后台运行，造成了量的浪费</span></span><br><span class="line"><span class="string">- 4）fetch没有办法原生监测请求的进度，而XHR可以</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## axios</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">axios是尤雨溪大神推荐使用的，它也是对原生XHR的封装。它有以下几大特性：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">可以在node.js中使用</span></span><br><span class="line"><span class="string">提供了并发请求的接口</span></span><br><span class="line"><span class="string">支持Promise api</span></span><br><span class="line"><span class="string">简单使用</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>js</span><br><span class="line">axios(&#123;</span><br><span class="line">    method: <span class="string">'GET'</span>,</span><br><span class="line">    url: url,</span><br><span class="line">&#125;)</span><br><span class="line">.then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;<span class="built_in">console</span>.log(res)&#125;)</span><br><span class="line">.catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;<span class="built_in">console</span>.log(err)&#125;)</span><br></pre></td></tr></table></figure></p><p>写法有很多种，自行查看文档</p><p>并发请求<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUserAccount</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> axios.get(<span class="string">'/user/12345'</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUserPermissions</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> axios.get(<span class="string">'/user/12345/permissions'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">axios.all([getUserAccount(), getUserPermissions()])</span><br><span class="line">  .then(axios.spread(<span class="function"><span class="keyword">function</span> (<span class="params">acct, perms</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Both requests are now complete</span></span><br><span class="line">  &#125;));</span><br></pre></td></tr></table></figure></p><p>这是官方的并发案例，好像是挺厉害的样子。不过感觉它的all方法应该是基于Promise.all()的</p><p>axios体积比较小，也没有上面fetch的各种问题，我认为是当前最好的请求方式 </p><p><strong>优缺点：</strong></p><p>从 node.js 创建 http 请求<br>支持 Promise api<br>客户端支持防止CSRF<br>提供了一些并发请求的接口（重要，方便了很多的操作）</p><p>最后，这都是些基础用法，还没有深入了解，还是要在实战中踩过坑才能运用的更加自如。</p><h1 id="为什么要用axios"><a href="#为什么要用axios" class="headerlink" title="为什么要用axios?"></a>为什么要用axios?</h1><p>axios 是一个基于Promise 用于浏览器和 nodejs 的 HTTP 客户端，它本身具有以下特征：</p><p>从浏览器中创建 XMLHttpRequest<br>从 node.js 发出 http 请求<br>支持 Promise api<br>拦截请求和响应<br>转换请求和响应数据<br>取消请求<br>自动转换JSON数据<br>客户端支持防止CSRF/XSRF</p><p>以上内容整理于互联网<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://user-images.githubusercontent.com/22697565/47509372-8dce1a00-d8a8-11e8-959d-faf613af8dcc.jpg" alt="0" title="">                </div>                <div class="image-caption">0</div>            </figure></p><hr><blockquote><p>作者：林寻丶<br>来源：掘金<br>原文：<a href="https://juejin.im/post/5acde23c5188255cb32e7e76?utm_medium=fe&amp;utm_source=weixinqun" target="_blank" rel="noopener">https://juejin.im/post/5acde23c5188255cb32e7e76?utm_medium=fe&amp;utm_source=weixinqun</a></p></blockquote><hr><blockquote><p>作者：WebCandy<br>来源：CSDN<br>原文：<a href="https://blog.csdn.net/twodogya/article/details/80223508" target="_blank" rel="noopener">https://blog.csdn.net/twodogya/article/details/80223508</a> </p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前端是个发展迅速的领域，前端请求自然也发展迅速，从原生的XHR到jquery ajax，再到现在的axios和fetch。&lt;/p&gt;
&lt;h2 id=&quot;jquery-ajax&quot;&gt;&lt;a href=&quot;#jquery-ajax&quot; class=&quot;headerlink&quot; title=&quot;j
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="axios" scheme="https://ru23.com/tags/axios/"/>
    
      <category term="ajax" scheme="https://ru23.com/tags/ajax/"/>
    
      <category term="fetch" scheme="https://ru23.com/tags/fetch/"/>
    
  </entry>
  
  <entry>
    <title>关于数组中forEach() 、map()、filter()、reduce()、some()、every()的总结</title>
    <link href="https://ru23.com/note/afd16d4c.html"/>
    <id>https://ru23.com/note/afd16d4c.html</id>
    <published>2018-10-22T14:43:01.000Z</published>
    <updated>2018-11-01T08:08:35.809Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、forEach"><a href="#1、forEach" class="headerlink" title="1、forEach()"></a>1、forEach()</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">arr.forEach((item, index, arr) = &gt; &#123;</span><br><span class="line"><span class="built_in">console</span>.log(item) <span class="comment">//结果为1,2,3,4 </span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//forEach遍历数组，无返回值，不改变原数组，仅仅只是遍历、常用于注册组件、指令等等。</span></span><br></pre></td></tr></table></figure><h2 id="2、map"><a href="#2、map" class="headerlink" title="2、map()"></a>2、map()</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">arr.map((item, index, arr) = &gt; &#123;</span><br><span class="line"><span class="keyword">return</span> item * <span class="number">10</span></span><br><span class="line"><span class="comment">//新数组为10,20,30,40 </span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">////map遍历数组，返回一个新数组，不改变原数组的值。</span></span><br></pre></td></tr></table></figure><h2 id="3、filter"><a href="#3、filter" class="headerlink" title="3、filter()"></a>3、filter()</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">arr.filter((item, index, arr) = &gt; &#123;</span><br><span class="line"><span class="keyword">return</span> item &gt; <span class="number">2</span></span><br><span class="line"><span class="comment">//新数组为[3,4] </span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//filter过滤掉数组中不满足条件的值，返回一个新数组，不改变原数组的值。</span></span><br></pre></td></tr></table></figure><h2 id="4、reduce"><a href="#4、reduce" class="headerlink" title="4、reduce()"></a>4、reduce()</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var arr = [1, 2, 3, 4];</span><br><span class="line">arr.reduce((result, item, index, arr) = &gt; &#123;</span><br><span class="line">console.log(result)</span><br><span class="line">// 1 3 6 result为上次一计算的结果</span><br><span class="line">console.log(item)</span><br><span class="line">// // 2 3 4 </span><br><span class="line">console.log(index)</span><br><span class="line">// // 1 2 3</span><br><span class="line">return result + item</span><br><span class="line">//最终结果为10 </span><br><span class="line">&#125;)</span><br><span class="line">//reduce 让数组的前后两项进行某种计算。</span><br><span class="line">//然后返回其值，并继续计算。</span><br><span class="line">//不改变原数组，返回计算的最终结果，从数组的第二项开始遍历。</span><br></pre></td></tr></table></figure><h2 id="5、some"><a href="#5、some" class="headerlink" title="5、some()"></a>5、some()</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">arr.some((item, index, arr) = &gt; &#123;</span><br><span class="line"><span class="keyword">return</span> item &gt; <span class="number">3</span></span><br><span class="line"><span class="comment">//结果为true </span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//遍历数组每一项，有一项返回true,则停止遍历，</span></span><br><span class="line"><span class="comment">//结果返回true。不改变原数组</span></span><br></pre></td></tr></table></figure><h2 id="6、every"><a href="#6、every" class="headerlink" title="6、every()"></a>6、every()</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">arr.every((item, index, arr) = &gt; &#123;</span><br><span class="line"><span class="keyword">return</span> item &gt; <span class="number">1</span></span><br><span class="line"><span class="comment">//结果为false </span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//遍历数组每一项，每一项返回true,则最终结果为true。</span></span><br><span class="line"><span class="comment">//当任何一项返回false时，停止遍历，返回false。不改变原数组</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、forEach&quot;&gt;&lt;a href=&quot;#1、forEach&quot; class=&quot;headerlink&quot; title=&quot;1、forEach()&quot;&gt;&lt;/a&gt;1、forEach()&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="javascript" scheme="https://ru23.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>跨域问题携带cookie加入withCredentials报错原因以及解决方案</title>
    <link href="https://ru23.com/note/b2790fdc.html"/>
    <id>https://ru23.com/note/b2790fdc.html</id>
    <published>2018-10-22T10:26:41.000Z</published>
    <updated>2018-11-09T06:01:53.977Z</updated>
    
    <content type="html"><![CDATA[<p>1.跨域允许<br>解决方法：服务器发送允许客户端发送源的报文头<br>header(‘Access-Control-Allow-Origin:’.$_SERVER[“HTTP_ORIGIN”]);<br>2.客户端无法携带跨域cookie<br>这个时候就可以在extjs中加入withCredentials<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url: <span class="string">'http://120.111.111.123/setcookie.php'</span>,</span><br><span class="line">    method: <span class="string">'POST'</span>,</span><br><span class="line">    params: &#123; </span><br><span class="line">        <span class="string">'text'</span>: <span class="string">'hello world'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    withCredentials: <span class="literal">true</span>,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">transport</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">    &#125;,</span><br><span class="line">    failure: <span class="function"><span class="keyword">function</span>(<span class="params">transport</span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">"Error: "</span> - transport.responseText);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>3.因为加了withCredentials报文头，可是客户端不知道服务器允不允许报的错（耿直的客户端）<br>这个时候就在服务器发送Access-Control-Allow-Credentials<br>header(‘Access-Control-Allow-Credentials:true’);<br>4.由于客户端不知道服务端是否允许POST请求而报的错<br>这个时候要在服务器端加入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">header(&apos;Access-Control-Allow-Methods:OPTIONS, GET, POST&apos;);</span><br><span class="line">header(&apos;Access-Control-Allow-Headers:x-requested-with&apos;);</span><br><span class="line">header(&apos;Access-Control-Max-Age:86400&apos;);</span><br></pre></td></tr></table></figure></p><p>以上汇总起来就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">header(&apos;Access-Control-Allow-Methods:OPTIONS, GET, POST&apos;);</span><br><span class="line">header(&apos;Access-Control-Allow-Headers:x-requested-with&apos;);</span><br><span class="line">header(&apos;Access-Control-Max-Age:86400&apos;);  </span><br><span class="line">header(&apos;Access-Control-Allow-Origin:&apos;.$_SERVER[&apos;HTTP_ORIGIN&apos;]);</span><br><span class="line">header(&apos;Access-Control-Allow-Credentials:true&apos;);</span><br><span class="line">header(&apos;Access-Control-Allow-Methods:GET, POST, PUT, DELETE, OPTIONS&apos;);</span><br><span class="line">header(&apos;Access-Control-Allow-Headers:x-requested-with,content-type&apos;);</span><br><span class="line">header(&apos;Access-Control-Allow-Headers:Origin, No-Cache, X-Requested-With, If-Modified-Since,</span><br></pre></td></tr></table></figure><p>1.跨域允许<br>不允许报错的跨域<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Response to preflight request doesn&apos;t pass access control check: No &apos;Access-Control-Allow-Origin&apos; header is present on the requested resource. </span><br><span class="line">Origin &apos;null&apos; is therefore not allowed access.</span><br></pre></td></tr></table></figure></p><p>报这个错就说明我们跨域了，不在允许的访问源，于是乎我在服务的setcookie.php加入<code>header(&#39;Access-Control-Allow-Origin:*&#39;)</code>;允许所有源<br>然后又报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">XMLHttpRequest cannot load http://120.111.111.123/setcookie.php. Request header field X-Requested-With is not allowed by Access-Control-Allow-Headers in preflight response.</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">在跨域的时候，js不会直接发post请求，而是先发送一个option请求，看看服务器允许什么访问头（比如是不是允许post请求），验证成功后才会发送真正的请求</span><br></pre></td></tr></table></figure></p><p>#用谷歌的开发者工具抓的option报文<br>OPTIONS /setcookie.php HTTP/1.1<br>Host: 120.111.111.123<br>Connection: keep-alive<br>Pragma: no-cache<br>Cache-Control: no-cache<br>Access-Control-Request-Method: POST<br>Origin: null<br>User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36<br>Access-Control-Request-Headers: x-requested-with<br>Accept: <em>/</em><br>Accept-Encoding: gzip, deflate, sdch<br>Accept-Language: zh-CN,zh;q=0.8<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>#path /setcookie.php<br>session_start();<br>header(‘Access-Control-Allow-Origin:*’);<br>header(‘Access-Control-Allow-Methods:OPTIONS, GET, POST’); // 允许option，get，post请求<br>header(‘Access-Control-Allow-Headers:x-requested-with’); // 允许x-requested-with请求头<br>header(‘Access-Control-Max-Age:86400’); // 允许访问的有效期<br>// 功能…<br>// …<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">继续测试我们的新功能，成功的解决了跨域问题</span><br><span class="line">但是，cookie没有“设置成功”。而之所以没有“设置成功”，是因为cookie存在本地，但是每个cookie都有一个domain，当你本地的cookie中存在你当前访问的域时，才会被带过去，而我的index.html文件是本地访问的，即http://localhost/index.html，而cookie的域是要跨域的域名的，所以不行了。</span><br><span class="line"></span><br><span class="line">```js</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">    type: &quot;POST&quot;,</span><br><span class="line">    url: &quot;跨域的url&quot;,</span><br><span class="line">    xhrFields: &#123;</span><br><span class="line">         withCredentials: true </span><br><span class="line">    &#125;, // 发送凭据</span><br><span class="line">    contentType: &quot;application/json; charset=utf-8&quot;,</span><br><span class="line">    data: JSON.stringify(data),</span><br><span class="line">    dataType: &quot;json&quot;,</span><br><span class="line">    success: function (message) &#123;</span><br><span class="line">       </span><br><span class="line">    &#125;,</span><br><span class="line">    error: function (message) &#123;</span><br><span class="line">        console.log(message)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>继续访问，报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Response to preflight request doesn&apos;t pass access control check: A wildcard &apos;*&apos; cannot be used in the &apos;Access-Control-Allow-Origin&apos; header when the credentials flag is true. </span><br><span class="line">Origin &apos;null&apos; is therefore not allowed access. </span><br><span class="line">The credentials mode of an XMLHttpRequest is controlled by the withCredentials attribute.</span><br></pre></td></tr></table></figure></p><p>现在这个错误产生的原因就是<br>1.因为加入了withCredentials之后，Access-Control-Allow-Origin就不能用“*”了，既然不允许访问这个源，那我就让你发个报文头让你允许访问呗！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#path setcookie.php</span><br><span class="line">session_start();</span><br><span class="line">// 是否存在请求源</span><br><span class="line">if(isset($_SERVER[&quot;HTTP_ORIGIN&quot;])) &#123;</span><br><span class="line">    header(&apos;Access-Control-Allow-Origin:&apos;.$_SERVER[&quot;HTTP_ORIGIN&quot;]);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">header(&apos;Access-Control-Allow-Methods:OPTIONS, GET, POST&apos;);</span><br><span class="line">header(&apos;Access-Control-Allow-Headers:x-requested-with&apos;);</span><br><span class="line">header(&apos;Access-Control-Max-Age:86400&apos;);</span><br><span class="line"></span><br><span class="line">// 功能...</span><br><span class="line">// ...</span><br></pre></td></tr></table></figure><p>好了，上传完代码，继续测试。发送请求之后，又报错了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Response to preflight request doesn&apos;t pass access control check: Credentials flag is &apos;true&apos;, but the &apos;Access-Control-Allow-Credentials&apos; header is &apos;&apos;. </span><br><span class="line">It must be &apos;true&apos; to allow credentials. Origin &apos;null&apos; is therefore not allowed access.</span><br></pre></td></tr></table></figure></p><p>大概的意思就是说我给你发了<code>withCredentials</code>报文头，但是你服务器没有跟我说允许我带这个报文头，那么解决方法就是加上允许发这个报文头的报文头</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">session_start();</span><br><span class="line">// 是否存在请求源</span><br><span class="line">if(isset($_SERVER[&quot;HTTP_ORIGIN&quot;])) &#123;</span><br><span class="line">    header(&apos;Access-Control-Allow-Origin:&apos;.$_SERVER[&quot;HTTP_ORIGIN&quot;]);  </span><br><span class="line">&#125;</span><br><span class="line">header(&apos;Access-Control-Allow-Origin:null&apos;);  </span><br><span class="line">header(&apos;Access-Control-Allow-Methods:OPTIONS, GET, POST&apos;);</span><br><span class="line">header(&apos;Access-Control-Allow-Headers:x-requested-with&apos;);</span><br><span class="line">header(&apos;Access-Control-Max-Age:86400&apos;);</span><br><span class="line"></span><br><span class="line">header(&apos;Access-Control-Allow-Credentials:true&apos;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 功能...</span><br><span class="line">// ...</span><br></pre></td></tr></table></figure><p>终于成功了！</p><blockquote><p>摘自<br>链接：<a href="https://www.jianshu.com/p/552daaf2869c" target="_blank" rel="noopener">https://www.jianshu.com/p/552daaf2869c</a><br>來源：简书</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.跨域允许&lt;br&gt;解决方法：服务器发送允许客户端发送源的报文头&lt;br&gt;header(‘Access-Control-Allow-Origin:’.$_SERVER[“HTTP_ORIGIN”]);&lt;br&gt;2.客户端无法携带跨域cookie&lt;br&gt;这个时候就可以在extjs
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="跨域" scheme="https://ru23.com/tags/%E8%B7%A8%E5%9F%9F/"/>
    
      <category term="ajax" scheme="https://ru23.com/tags/ajax/"/>
    
      <category term="cookie" scheme="https://ru23.com/tags/cookie/"/>
    
  </entry>
  
  <entry>
    <title>输入框input类型为number时，去掉上下箭头样式</title>
    <link href="https://ru23.com/note/1c69a5f4.html"/>
    <id>https://ru23.com/note/1c69a5f4.html</id>
    <published>2018-10-22T08:57:28.000Z</published>
    <updated>2018-11-01T08:08:35.794Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">...</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-outer-spin-button</span>,</span></span><br><span class="line"><span class="css">    <span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-inner-spin-button</span> &#123;</span></span><br><span class="line"><span class="undefined">        -webkit-appearance: none;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">input</span><span class="selector-attr">[type="number"]</span>&#123;</span></span><br><span class="line"><span class="undefined">        -moz-appearance: textfield;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="html5" scheme="https://ru23.com/tags/html5/"/>
    
  </entry>
  
  <entry>
    <title>前端面试之hybrid</title>
    <link href="https://ru23.com/note/b3429210.html"/>
    <id>https://ru23.com/note/b3429210.html</id>
    <published>2018-10-20T17:13:10.000Z</published>
    <updated>2018-11-01T08:08:35.501Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-c6dfe0f6f12fe034.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><h2 id="一、hybrid-是什么，为何会用-hybrid"><a href="#一、hybrid-是什么，为何会用-hybrid" class="headerlink" title="一、hybrid 是什么，为何会用 hybrid"></a>一、hybrid 是什么，为何会用 hybrid</h2><h3 id="1-1-hybrid-文字解释"><a href="#1-1-hybrid-文字解释" class="headerlink" title="1.1 hybrid 文字解释"></a>1.1 hybrid 文字解释</h3><ul><li><code>hybrid</code> 即“混合”，即前端和客户端的混合开发</li><li>需前端开发人员和客户端开发人员配合完成</li><li>某些环节也可能涉及到 <code>server</code> 端</li><li>PS：不要以为自己的前端就可以不理会客户端的知识</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-8bb6aab836ef1b04.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><h3 id="1-2-hybrid-存在价值"><a href="#1-2-hybrid-存在价值" class="headerlink" title="1.2 hybrid 存在价值"></a>1.2 hybrid 存在价值</h3><ul><li>可以快速迭代更新【关键】（无需 app 审核，思考为何？）</li><li>体验流畅（和 NA 的体验基本类似）</li><li>减少开发和沟通成本，双端公用一套代码</li></ul><h3 id="1-3-webview"><a href="#1-3-webview" class="headerlink" title="1.3 webview"></a>1.3 webview</h3><ul><li>是 <code>app</code> 中的一个组件（ <code>app</code> 可以有 <code>webview</code> ，也可以没有）</li><li>于加载 <code>h5</code> 页面，即一个小型的浏览器内核</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-683f8336237ea709.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-2c35b8e256628d90.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><h3 id="1-4-file-协议"><a href="#1-4-file-协议" class="headerlink" title="1.4 file 协议"></a>1.4 file 协议</h3><ul><li>其实在一开始接触 <code>html</code>开发，就已经使用了 <code>file</code> 协议</li><li>只不过你当时没有“协议”“标准”等这些概念</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-658f64270968f795.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><h3 id="1-5-http-s-协议"><a href="#1-5-http-s-协议" class="headerlink" title="1.5 http(s) 协议"></a>1.5 http(s) 协议</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-120c70939dda4f33.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><h3 id="1-6-两者区别"><a href="#1-6-两者区别" class="headerlink" title="1.6 两者区别"></a>1.6 两者区别</h3><ul><li><code>file</code> 协议：本地文件，快</li><li><code>http(s)</code> 协议：网络加载，慢</li></ul><h3 id="1-7-具体实现"><a href="#1-7-具体实现" class="headerlink" title="1.7 具体实现"></a>1.7 具体实现</h3><ul><li>不是所有场景都适合使用 <code>hybrid</code></li><li>使用 <code>NA</code> ：体验要求极致，变化不频繁（无头条的首页）</li><li>使用 <code>hybrid</code> ：体验要求高，变化频繁（如头条的新闻详情页）</li><li>使用 <code>h5</code> ：体验无要求，不常用（如举报、反馈等页面）</li></ul><blockquote><p>实现</p></blockquote><ul><li>前端做好静态页面（<code>html js css</code>），将文件交给客户端</li><li>客户端拿到前端静态页面，以文件形式存储在 <code>app</code> 中</li><li>客户端在一个 <code>webview</code> 中</li><li>使用 <code>file</code> 协议加载静态页面</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-78c3827d77e01846.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><h2 id="二、hybrid-更新上线流程"><a href="#二、hybrid-更新上线流程" class="headerlink" title="二、hybrid 更新上线流程"></a>二、hybrid 更新上线流程</h2><h3 id="2-1-具体流程图"><a href="#2-1-具体流程图" class="headerlink" title="2.1 具体流程图"></a>2.1 具体流程图</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-968e9acbd54baf44.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><p><strong>思考（目的，可行途径）</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-da3cb73a39523a77.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><ul><li>要替换每个客户端的静态文件</li><li>只能客户端来做（客户端是我们开发的）</li><li>客户端去 server 下载最新的静态文件</li><li>我们维护 server 的静态文件</li></ul><h3 id="2-2-完整流程"><a href="#2-2-完整流程" class="headerlink" title="2.2 完整流程"></a>2.2 完整流程</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-3ed2e0dcff457b30.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><ul><li>分版本，有版本号，如 <code>201803211015</code></li><li>将静态文件压缩成 <code>zip</code>包，上传到服务端</li><li>客户端每次启动，都去服务端检查版本号</li><li>如果服务端版本号大于客户端版本号，就去下载最新的 <code>zip</code> 包</li><li>下载完之后解压包，然后将现有文件覆盖</li></ul><p><strong>要点总结</strong></p><ul><li>要点1：服务端的版本和<code>zip</code>包维护</li><li>要点2：更新<code>zip</code> 包之前，先对比版本号</li><li>要点3：<code>zip</code> 下载解压和覆盖</li></ul><h2 id="三、hybrid-和-h5-的区别"><a href="#三、hybrid-和-h5-的区别" class="headerlink" title="三、hybrid 和 h5 的区别"></a>三、hybrid 和 h5 的区别</h2><h3 id="3-1-优点"><a href="#3-1-优点" class="headerlink" title="3.1 优点"></a>3.1 优点</h3><ul><li>体验更好，跟 <code>NA</code>体验基本一致</li><li>可快速迭代，无需 <code>app</code> 审核【关键】</li></ul><h3 id="3-2-缺点"><a href="#3-2-缺点" class="headerlink" title="3.2 缺点"></a>3.2 缺点</h3><ul><li>开发成本高。联调、测试、查 <code>bug</code> 都比较麻烦</li><li>运维成本高。参考此前讲过的更新上线的流程</li></ul><h3 id="3-3-适用的场景"><a href="#3-3-适用的场景" class="headerlink" title="3.3 适用的场景"></a>3.3 适用的场景</h3><ul><li><code>hybrid</code> ： 产品的稳定功能，体验要求高，迭代频繁</li><li><code>h5</code> ： 单词的运营活动（如 <code>xx</code> 红包）或不常用功能</li></ul><h2 id="四、前端和客户端通讯"><a href="#四、前端和客户端通讯" class="headerlink" title="四、前端和客户端通讯"></a>四、前端和客户端通讯</h2><h3 id="4-1-JS-和客户端通讯的基本形式"><a href="#4-1-JS-和客户端通讯的基本形式" class="headerlink" title="4.1 JS 和客户端通讯的基本形式"></a>4.1 JS 和客户端通讯的基本形式</h3><ul><li><code>JS</code> 访问客户端能力，传递参数和回调函数</li><li>客户端通过回调函数返回内容</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-68700d9920ef0351.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><h3 id="4-2-schema-协议简介和使用"><a href="#4-2-schema-协议简介和使用" class="headerlink" title="4.2 schema 协议简介和使用"></a>4.2 schema 协议简介和使用</h3><ul><li>之前介绍了 <code>http(s)</code> 和 <code>file</code> 协议</li><li><code>schema</code> 协议 —— 前端和客户端通讯的约定</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-728d555cfb705e00.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-87869b716de1fee3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-a0215dd1a9fcfa34.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><h3 id="4-3-schema-使用的封装"><a href="#4-3-schema-使用的封装" class="headerlink" title="4.3 schema 使用的封装"></a>4.3 schema 使用的封装</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-870b827be457e049.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-725ad0ec319d8d88.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-66d0b2f3f4af2495.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><h3 id="4-4-内置上线"><a href="#4-4-内置上线" class="headerlink" title="4.4 内置上线"></a>4.4 内置上线</h3><ul><li>将以上封装的代码打包，叫做 <code>invoke.js</code>，内置到客户端</li><li>客户端每次启动 <code>webview</code>，都默认执行 <code>invoke.js</code></li><li>本地加载，免去网络加载的时间，更快</li><li>本地加载，没有网络请求，黑客看不到 <code>schema</code> 协议，更安全</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="面试" scheme="https://ru23.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="hybrid" scheme="https://ru23.com/tags/hybrid/"/>
    
  </entry>
  
  <entry>
    <title>前端面试之组件化</title>
    <link href="https://ru23.com/note/4cf9f504.html"/>
    <id>https://ru23.com/note/4cf9f504.html</id>
    <published>2018-10-20T16:20:32.000Z</published>
    <updated>2018-11-01T09:37:46.936Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-8aa7fa463781cafe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><h2 id="一、说一下对组件化的理解"><a href="#一、说一下对组件化的理解" class="headerlink" title="一、说一下对组件化的理解"></a>一、说一下对组件化的理解</h2><h3 id="1-1-组件的封装"><a href="#1-1-组件的封装" class="headerlink" title="1.1 组件的封装"></a>1.1 组件的封装</h3><ul><li>视图</li><li>数据</li><li>变化逻辑</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-8f48ca224806e741.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><h3 id="1-2-组件的复用"><a href="#1-2-组件的复用" class="headerlink" title="1.2 组件的复用"></a>1.2 组件的复用</h3><ul><li><code>props</code> 传递</li><li>复用</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-2a5e3b0b883ad5f5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-3e549b6e59c0ea28.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><h2 id="二、JSX-本质是什么"><a href="#二、JSX-本质是什么" class="headerlink" title="二、JSX 本质是什么"></a>二、JSX 本质是什么</h2><h3 id="2-1-JSX-语法"><a href="#2-1-JSX-语法" class="headerlink" title="2.1 JSX 语法"></a>2.1 JSX 语法</h3><ul><li><code>html</code> 形式</li><li>引入 <code>JS</code> 变量和表达式</li><li>循环</li><li><code>style</code> 和 <code>className</code></li><li>事件</li></ul><blockquote><ul><li>JSX 语法根本无法被浏览器所解析</li><li>那么它如何在浏览器运行？</li></ul></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-f1c8a9cbb26570e6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><h3 id="2-2-JSX-解析"><a href="#2-2-JSX-解析" class="headerlink" title="2.2 JSX 解析"></a>2.2 JSX 解析</h3><ul><li><code>JSX</code> 其实是语法糖</li><li>开发环境会将 <code>JSX</code> 编译成 <code>JS</code> 代码</li><li><code>JSX</code> 的写法大大降低了学习成本和编码工作量</li><li>同时，<code>JSX</code> 也会增加 <code>debug</code>成本</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-5f19249d793a7cfb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-11923d891215fd76.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-d033075c77441cb1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><h3 id="2-3-JSX-独立的标准"><a href="#2-3-JSX-独立的标准" class="headerlink" title="2.3 JSX 独立的标准"></a>2.3 JSX 独立的标准</h3><ul><li><code>JSX</code> 是 <code>React</code> 引入的，但不是 <code>React</code> 独有的</li><li><code>React</code>已经将它作为一个独立标准开放，其他项目也可用</li><li><code>React.createElement</code> 是可以自定义修改的</li><li>说明：本身功能已经完备；和其他标准监控和扩展性没问题</li></ul><h2 id="三、JSX-和-vdom-的关系"><a href="#三、JSX-和-vdom-的关系" class="headerlink" title="三、JSX 和 vdom 的关系"></a>三、JSX 和 vdom 的关系</h2><h3 id="3-1-为何需要-vdom"><a href="#3-1-为何需要-vdom" class="headerlink" title="3.1 为何需要 vdom"></a>3.1 为何需要 vdom</h3><ul><li><code>vdom</code> 是 <code>React</code>初次推广开来的，结合 <code>JSX</code></li><li><code>JSX</code> 就是模板，最终要渲染成 <code>html</code></li><li>初次渲染 + 修改 <code>state</code> 后的 <code>re-render</code></li><li>正好符合 <code>vdom</code> 的应用场景</li></ul><h3 id="3-2-React-createElement-和-h"><a href="#3-2-React-createElement-和-h" class="headerlink" title="3.2 React.createElement 和 h"></a>3.2 React.createElement 和 h</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-d345399b0ceb7e4f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><h3 id="3-3-何时-patch"><a href="#3-3-何时-patch" class="headerlink" title="3.3 何时 patch"></a>3.3 何时 patch</h3><ul><li>初次渲染 - <code>Reactdom.render(&lt;App/&gt;, container)</code></li><li>会触发 <code>patch(container, vnode)</code></li><li><code>re-render</code> - <code>setState</code></li><li>会触发 <code>patch(vnode, newVnode)</code></li></ul><h3 id="3-4-自定义组件的解析"><a href="#3-4-自定义组件的解析" class="headerlink" title="3.4 自定义组件的解析"></a>3.4 自定义组件的解析</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-69788662ca8059d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><ul><li><code>‘div’</code> - 直接渲染 <code>&lt;div&gt;</code> 即可，<code>vdom</code> 可以做到</li><li><code>Input</code> 和 <code>List</code> ，是自定义组件（<code>class</code>），<code>vdom</code> 默认不认识</li><li>因此 <code>Input</code> 和 <code>List</code> 定义的时候必须声明 <code>render</code> 函数</li><li>根据 <code>props</code> 初始化实例，然后执行实例的 <code>render</code> 函数</li><li><code>render</code> 函数返回的还是 <code>vnode</code>对象</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-11a4ca366d944a6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><h2 id="四、说一下-React-setState-的过程"><a href="#四、说一下-React-setState-的过程" class="headerlink" title="四、说一下 React setState 的过程"></a>四、说一下 React setState 的过程</h2><h3 id="4-1-setState-的异步"><a href="#4-1-setState-的异步" class="headerlink" title="4.1 setState 的异步"></a>4.1 setState 的异步</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-dc8703edc57b0b20.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><p><strong>setState 为何需要异步？</strong></p><ul><li>可能会一次执行多次 <code>setState</code></li><li>你无法规定、限制用户如何使用 <code>setState</code></li><li>没必要每次 <code>setState</code> 都重新渲染，考虑性能</li><li>即便是每次重新渲染，用户也看不到中间的效果</li><li>只看到最后的结果即可</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-dbca3e81f5b1a4a1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><h3 id="4-2-vue-修改属性也是异步"><a href="#4-2-vue-修改属性也是异步" class="headerlink" title="4.2 vue 修改属性也是异步"></a>4.2 vue 修改属性也是异步</h3><ul><li>效果、原因和 <code>setState</code> 一样</li></ul><h3 id="4-3-setState-的过程"><a href="#4-3-setState-的过程" class="headerlink" title="4.3 setState 的过程"></a>4.3 setState 的过程</h3><ul><li>每个组件实例，都有<code>renderComponent</code> 方法</li><li>执行 <code>renderComponent</code>  会重新执行实例的 <code>render</code></li><li><code>render</code> 函数返回 <code>newVnode</code> ，然后拿到 <code>preVnode</code></li><li>执行 <code>patch(preVnode, newVnode)</code></li></ul><h2 id="五、React-vs-vue"><a href="#五、React-vs-vue" class="headerlink" title="五、React vs vue"></a>五、React vs vue</h2><h3 id="5-1-两者的本质区别"><a href="#5-1-两者的本质区别" class="headerlink" title="5.1 两者的本质区别"></a>5.1 两者的本质区别</h3><ul><li>vue - 本质是 mvvm 框架，由 MVC 发展而来</li><li>react - 本质是前端组件化框架，由后端组件化发展而来</li><li>但这并不妨碍他们两者都能实现相同的功能</li></ul><h3 id="5-2-看模板和组件化的区别"><a href="#5-2-看模板和组件化的区别" class="headerlink" title="5.2 看模板和组件化的区别"></a>5.2 看模板和组件化的区别</h3><ul><li><code>vue</code>- 使用模板（最初由 <code>angular</code> 提出）</li><li><code>React</code>- 使用 <code>JSX</code></li><li>模板语法上，我更加倾向于 <code>JSX</code></li><li>模板分离上，我更加倾向于 <code>vue</code></li></ul><p><strong>模板的区别</strong></p><blockquote><p>模板应该和 JS 逻辑分离</p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-5e3dfde0d813ee64.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-d551ac0050d8ecf3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/1480597-a9fd44b70c5529d4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" title="">                </div>                <div class="image-caption">image.png</div>            </figure><p><strong>组件化区别</strong></p><ul><li><code>React</code> 本身就是组件化，没有组件化就不是 <code>React</code></li><li><code>vue</code> 也支持组件化，不过是在 <code>mvvm</code> 上的扩展</li><li>对于组件化，我更加倾向于 <code>React</code> ，做的彻底而清晰</li></ul><h3 id="5-3-两者共同点"><a href="#5-3-两者共同点" class="headerlink" title="5.3 两者共同点"></a>5.3 两者共同点</h3><ul><li>都支持组件化</li><li>都是数据驱动试图</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="front-end" scheme="https://ru23.com/categories/front-end/"/>
    
    
      <category term="面试" scheme="https://ru23.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="组件化" scheme="https://ru23.com/tags/%E7%BB%84%E4%BB%B6%E5%8C%96/"/>
    
  </entry>
  
</feed>
